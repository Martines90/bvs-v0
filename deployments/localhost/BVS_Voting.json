{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AccountAlreadyAppliedForElections",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AccountAlreadyVoted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AccountCantVoteOnItself",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AccountRanOutOfVotingCreditsForThisVotingCycle",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AdminRoleGrantApprovalAlreadySent",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AlreadyVotedOnThisVoting",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ArticleNotExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ArticleNotRelatedToYourVoting",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CantStartNewVointg10daysOrLessBeforeEndOfCycle",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CitizenRoleAlreadyGranted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CitizenRoleAlreadyRevokedOrNotGranted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ContentCheckIpfsNotAssigned",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ElectionStartDateHasToBe30DaysAhead",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ElectionsAlreadyClosedOrNotYetScheduled",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ElectionsAlreadyFinished",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ElectionsCanOnlyCloseAfterItsEndDate",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ElectionsNotScheduledOrAlreadyStarted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FirstVotingCycleStartDateHasToBeInTheFuture",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MinimumApplicationFeeNotCovered",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NewVotingHasToBeScheduled10DaysAhead",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NewVotingHasToBeScheduledLessThan30daysAhead",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoArticleContentCheckIpfsAssignedToThisArticle",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoArticleResponseAssigned",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoArticleResponseContentCheckIpfsAssigned",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoEnoughContentReadQuizAnswerAdded",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoEnoughVotesReceived",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoMorePublishArticleCreditsRelatedToThisVoting",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoOngoingVotingPeriod",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotAppliedForCitizenRole",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "PermissionsUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RunOutOfDailyCitizenRoleGrantCredit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ThereIsAnOngoingElections",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ThereIsNoOngoingElections",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VoteOnAccountNotBelongToAnyCandidate",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VotingAlreadyStarted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VotingCanBeApproved3DaysOrLessBeforeItsStart",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VotingContentCheckQuizNotAssigned",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VotingContentCheckQuizNotCompleted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VotingDidNotWon",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VotingNotApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VotingNotBelongsToSender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VotingNotExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VotingNotFinished",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VotingNotYetStartedOrAlreadyFinished",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VotingOwnerNotRespondedOnAllArticles",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        }
      ],
      "name": "CitizenshipRoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "executer",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "executer",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ADMINISTRATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "APPROVE_VOTING_BEFORE_IT_STARTS_LIMIT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CONTENT_CHECK_ASKED_NUM_OF_QUESTIONS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CONTENT_CHECK_ASKED_NUM_OF_QUESTIONS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CITIZEN",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ELECTION_START_END_INTERVAL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_DAILY_NEW_CITIZENS_CAN_ADD_PERCENTAGE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINIMUM_PERCENTAGE_OF_ELECTION_VOTES",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_PERCENTAGE_GRANT_ADMIN_APPROVALS_REQUIRED",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_PERCENTAGE_OF_VOTES",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_TOTAL_CONTENT_READ_CHECK_ANSWER",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_VOTE_SCORE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NEW_VOTING_PERIOD_MIN_SCHEDULE_AHEAD_TIME",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "POLITICAL_ACTOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CONTENT_CHECK_ASKED_NUM_OF_QUESTIONS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VOTING_CYCLE_INTERVAL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VOTING_DURATION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_articleKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "_keccak256HashedAnswers",
          "type": "bytes32[]"
        }
      ],
      "name": "addKeccak256HashedAnswersToArticle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_articleKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "_keccak256HashedAnswers",
          "type": "bytes32[]"
        }
      ],
      "name": "addKeccak256HashedAnswersToArticleResponse",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "_keccak256HashedAnswers",
          "type": "bytes32[]"
        }
      ],
      "name": "addKeccak256HashedAnswersToVotingContent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "adminApprovalSentToAccount",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "adminRoleGrantApprovals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "admins",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_emailPublicKeyCombinedHash",
          "type": "bytes32"
        }
      ],
      "name": "applyForCitizenshipRole",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "applyForElections",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        }
      ],
      "name": "approveVoting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "articleContentReadCheckAnswers",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "articleContentResponseReadCheckAnswers",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "articleKeys",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "articlesCompleted",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "articlesResponseCompleted",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_articleKey",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_quizIpfsHash",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "assignToArticleContent",
          "type": "bool"
        }
      ],
      "name": "assignQuizIpfsHashToArticleOrResponse",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_quizIpfsHash",
          "type": "string"
        }
      ],
      "name": "assignQuizIpfsHashToVoting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "calculateVoteScore",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_role",
          "type": "bytes32"
        }
      ],
      "name": "checkIfAccounthasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "citizenRoleApplicationFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "citizens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "citizenshipApplications",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closeElections",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "contentType",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_articleKey",
          "type": "bytes32"
        },
        {
          "internalType": "string[]",
          "name": "_answers",
          "type": "string[]"
        }
      ],
      "name": "completeContentReadQuiz",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creationDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dailyCitizenRoleModifyCredit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "electionCandidateScores",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "electionCandidates",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "electionVoters",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "electionVotes",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "electionsCandidateApplicationFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "electionsEndDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "electionsStartDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "firstVotingCycleStartDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_articleKey",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getAccountArticleQuizAnswerIndexes",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_articleKey",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getAccountArticleResponseQuizAnswerIndexes",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getAccountVotingQuizAnswerIndexes",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdminsSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getArticleKeysLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBlockTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCitizensSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getElectionCandidatesSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getElectionVotersSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPoliticalActorsSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVotinCycleIndexesSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        }
      ],
      "name": "getVoting",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "cancelled",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "key",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "budget",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "voteCount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "contentIpfsHash",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "voteOnAScore",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "voteOnBScore",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "votingContentCheckQuizIpfsHash",
              "type": "string"
            }
          ],
          "internalType": "struct BVS_Voting.Voting",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVotingKeysLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_emailPublicKeyHash",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "_revokeCitizenRole",
          "type": "bool"
        }
      ],
      "name": "grantCitizenRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_answerIndexes",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "_readCheckAnswers",
          "type": "bytes32[]"
        },
        {
          "internalType": "string[]",
          "name": "_answers",
          "type": "string[]"
        }
      ],
      "name": "isContentReadQuizCorrect",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_string",
          "type": "string"
        }
      ],
      "name": "isEmptyString",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "_isAWinExpected",
          "type": "bool"
        }
      ],
      "name": "isVotingWon",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "politicalActorVotingCredits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "politicalActors",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "proConArticles",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "isArticleApproved",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isResponseApproved",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "publisher",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "articleIpfsHash",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "isVoteOnA",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "responseStatementIpfsHash",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "articleContentCheckQuizIpfsHash",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "responseContentCheckQuizIpfsHash",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "publishArticleToVotingsCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_ipfsHash",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_isVoteOnA",
          "type": "bool"
        }
      ],
      "name": "publishProConArticle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_proConArticleKey",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_ipfsHash",
          "type": "string"
        }
      ],
      "name": "publishProConArticleResponse",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "revokedAccount",
          "type": "address"
        }
      ],
      "name": "revokeAdminRoleApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_contentIpfsHash",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_startDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_budget",
          "type": "uint256"
        }
      ],
      "name": "scheduleNewVoting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_electionsStartDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_electionsEndDate",
          "type": "uint256"
        }
      ],
      "name": "scheduleNextElections",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "sendGrantAdministratorRoleApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_firstVotingCycleStartDate",
          "type": "uint256"
        }
      ],
      "name": "setFirstVotingCycleStartDate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        }
      ],
      "name": "unlockVotingBudget",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "updateCitizenshipRoleApplicationFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "voteOnAddress",
          "type": "address"
        }
      ],
      "name": "voteOnElections",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "_voteOnA",
          "type": "bool"
        }
      ],
      "name": "voteOnVoting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "votes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "voted",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isContentCompleted",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "votingContentReadCheckAnswers",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "votingCycleIndexes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "votingCycleStartVoteCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "votingKeys",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "votings",
      "outputs": [
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "cancelled",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "budget",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "voteCount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contentIpfsHash",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "startDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "voteOnAScore",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "voteOnBScore",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "votingContentCheckQuizIpfsHash",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xa12de341b28ee37091762ddec66141d854bf02cb8448a31e59ec38662ac82c87",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "5223474",
    "logsBloom": "0x
    "blockHash": "0xff1bac728d1ab71cf24ccde10a5fd2823a85fbfdbb426a0a69b88c411f13be76",
    "transactionHash": "0xa12de341b28ee37091762ddec66141d854bf02cb8448a31e59ec38662ac82c87",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 2,
        "transactionHash": "0xa12de341b28ee37091762ddec66141d854bf02cb8448a31e59ec38662ac82c87",
        "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d"
        ],
        "data": "0xb346b2ddc13f08bd9685b83a95304a79a2caac0aa7aa64129e1ae9f4361b4661000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266",
        "logIndex": 0,
        "blockHash": "0xff1bac728d1ab71cf24ccde10a5fd2823a85fbfdbb426a0a69b88c411f13be76"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 2,
        "transactionHash": "0xa12de341b28ee37091762ddec66141d854bf02cb8448a31e59ec38662ac82c87",
        "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d"
        ],
        "data": "0x313691be6e710b5e9c97c695d02c9e24926f986402f826152f3b2970694f72c9000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266",
        "logIndex": 1,
        "blockHash": "0xff1bac728d1ab71cf24ccde10a5fd2823a85fbfdbb426a0a69b88c411f13be76"
      }
    ],
    "blockNumber": 2,
    "cumulativeGasUsed": "5223474",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "fdea4867146e6bf38a20c29b167cb881",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccountAlreadyAppliedForElections\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AccountAlreadyVoted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AccountCantVoteOnItself\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AccountRanOutOfVotingCreditsForThisVotingCycle\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AdminRoleGrantApprovalAlreadySent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyVotedOnThisVoting\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ArticleNotExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ArticleNotRelatedToYourVoting\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CantStartNewVointg10daysOrLessBeforeEndOfCycle\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CitizenRoleAlreadyGranted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CitizenRoleAlreadyRevokedOrNotGranted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ContentCheckIpfsNotAssigned\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ElectionStartDateHasToBe30DaysAhead\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ElectionsAlreadyClosedOrNotYetScheduled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ElectionsAlreadyFinished\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ElectionsCanOnlyCloseAfterItsEndDate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ElectionsNotScheduledOrAlreadyStarted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FirstVotingCycleStartDateHasToBeInTheFuture\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MinimumApplicationFeeNotCovered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NewVotingHasToBeScheduled10DaysAhead\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NewVotingHasToBeScheduledLessThan30daysAhead\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoArticleContentCheckIpfsAssignedToThisArticle\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoArticleResponseAssigned\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoArticleResponseContentCheckIpfsAssigned\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoEnoughContentReadQuizAnswerAdded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoEnoughVotesReceived\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoMorePublishArticleCreditsRelatedToThisVoting\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoOngoingVotingPeriod\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAppliedForCitizenRole\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"PermissionsUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RunOutOfDailyCitizenRoleGrantCredit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ThereIsAnOngoingElections\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ThereIsNoOngoingElections\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VoteOnAccountNotBelongToAnyCandidate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingAlreadyStarted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingCanBeApproved3DaysOrLessBeforeItsStart\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingContentCheckQuizNotAssigned\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingContentCheckQuizNotCompleted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingDidNotWon\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingNotApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingNotBelongsToSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingNotExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingNotFinished\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingNotYetStartedOrAlreadyFinished\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingOwnerNotRespondedOnAllArticles\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"CitizenshipRoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"executer\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"executer\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMINISTRATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"APPROVE_VOTING_BEFORE_IT_STARTS_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CONTENT_CHECK_ASKED_NUM_OF_QUESTIONS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CONTENT_CHECK_ASKED_NUM_OF_QUESTIONS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CITIZEN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ELECTION_START_END_INTERVAL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_DAILY_NEW_CITIZENS_CAN_ADD_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_PERCENTAGE_OF_ELECTION_VOTES\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_PERCENTAGE_GRANT_ADMIN_APPROVALS_REQUIRED\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_PERCENTAGE_OF_VOTES\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_TOTAL_CONTENT_READ_CHECK_ANSWER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_VOTE_SCORE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NEW_VOTING_PERIOD_MIN_SCHEDULE_AHEAD_TIME\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POLITICAL_ACTOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CONTENT_CHECK_ASKED_NUM_OF_QUESTIONS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VOTING_CYCLE_INTERVAL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VOTING_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_articleKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"_keccak256HashedAnswers\",\"type\":\"bytes32[]\"}],\"name\":\"addKeccak256HashedAnswersToArticle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_articleKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"_keccak256HashedAnswers\",\"type\":\"bytes32[]\"}],\"name\":\"addKeccak256HashedAnswersToArticleResponse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"_keccak256HashedAnswers\",\"type\":\"bytes32[]\"}],\"name\":\"addKeccak256HashedAnswersToVotingContent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"adminApprovalSentToAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"adminRoleGrantApprovals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_emailPublicKeyCombinedHash\",\"type\":\"bytes32\"}],\"name\":\"applyForCitizenshipRole\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"applyForElections\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"}],\"name\":\"approveVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"articleContentReadCheckAnswers\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"articleContentResponseReadCheckAnswers\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"articleKeys\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"articlesCompleted\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"articlesResponseCompleted\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_articleKey\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_quizIpfsHash\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"assignToArticleContent\",\"type\":\"bool\"}],\"name\":\"assignQuizIpfsHashToArticleOrResponse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_quizIpfsHash\",\"type\":\"string\"}],\"name\":\"assignQuizIpfsHashToVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"calculateVoteScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_role\",\"type\":\"bytes32\"}],\"name\":\"checkIfAccounthasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"citizenRoleApplicationFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"citizens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"citizenshipApplications\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closeElections\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"contentType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_articleKey\",\"type\":\"bytes32\"},{\"internalType\":\"string[]\",\"name\":\"_answers\",\"type\":\"string[]\"}],\"name\":\"completeContentReadQuiz\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creationDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dailyCitizenRoleModifyCredit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"electionCandidateScores\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"electionCandidates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"electionVoters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"electionVotes\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"electionsCandidateApplicationFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"electionsEndDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"electionsStartDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"firstVotingCycleStartDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_articleKey\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getAccountArticleQuizAnswerIndexes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_articleKey\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getAccountArticleResponseQuizAnswerIndexes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getAccountVotingQuizAnswerIndexes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdminsSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getArticleKeysLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCitizensSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getElectionCandidatesSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getElectionVotersSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoliticalActorsSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVotinCycleIndexesSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"}],\"name\":\"getVoting\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"cancelled\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"budget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentIpfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voteOnAScore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voteOnBScore\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"votingContentCheckQuizIpfsHash\",\"type\":\"string\"}],\"internalType\":\"struct BVS_Voting.Voting\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVotingKeysLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_emailPublicKeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"_revokeCitizenRole\",\"type\":\"bool\"}],\"name\":\"grantCitizenRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_answerIndexes\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"_readCheckAnswers\",\"type\":\"bytes32[]\"},{\"internalType\":\"string[]\",\"name\":\"_answers\",\"type\":\"string[]\"}],\"name\":\"isContentReadQuizCorrect\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_string\",\"type\":\"string\"}],\"name\":\"isEmptyString\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"_isAWinExpected\",\"type\":\"bool\"}],\"name\":\"isVotingWon\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"politicalActorVotingCredits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"politicalActors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"proConArticles\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isArticleApproved\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isResponseApproved\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"publisher\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"articleIpfsHash\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isVoteOnA\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"responseStatementIpfsHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"articleContentCheckQuizIpfsHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"responseContentCheckQuizIpfsHash\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"publishArticleToVotingsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"_isVoteOnA\",\"type\":\"bool\"}],\"name\":\"publishProConArticle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_proConArticleKey\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"}],\"name\":\"publishProConArticleResponse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"revokedAccount\",\"type\":\"address\"}],\"name\":\"revokeAdminRoleApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_contentIpfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_budget\",\"type\":\"uint256\"}],\"name\":\"scheduleNewVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_electionsStartDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_electionsEndDate\",\"type\":\"uint256\"}],\"name\":\"scheduleNextElections\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"sendGrantAdministratorRoleApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_firstVotingCycleStartDate\",\"type\":\"uint256\"}],\"name\":\"setFirstVotingCycleStartDate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"}],\"name\":\"unlockVotingBudget\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"updateCitizenshipRoleApplicationFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voteOnAddress\",\"type\":\"address\"}],\"name\":\"voteOnElections\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"_voteOnA\",\"type\":\"bool\"}],\"name\":\"voteOnVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"votes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"voted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isContentCompleted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"votingContentReadCheckAnswers\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"votingCycleIndexes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"votingCycleStartVoteCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"votingKeys\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"votings\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"cancelled\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"budget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentIpfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voteOnAScore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voteOnBScore\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"votingContentCheckQuizIpfsHash\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"M\\u00e1rton S\\u00e1ndor Horv\\u00e1th, email: hmartonsandor{@}gmail.com\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Balanced Voting System: Voting contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"@dev\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BVS_Voting.sol\":\"BVS_Voting\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/BVS_Roles.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// pragma\\npragma solidity ^0.8.9;\\n\\n/**\\n * @title Balanced Voting System:Roles - contract\\n * @author M\\u00e1rton S\\u00e1ndor Horv\\u00e1th, email: hmartonsandor{@}gmail.com\\n * @notice\\n * @dev\\n */\\n\\ncontract BVS_Roles {\\n    uint public constant MIN_PERCENTAGE_GRANT_ADMIN_APPROVALS_REQUIRED = 50;\\n    uint public constant MAX_DAILY_NEW_CITIZENS_CAN_ADD_PERCENTAGE = 10;\\n\\n    bytes32 public constant ADMINISTRATOR = keccak256(\\\"ADMINISTRATOR\\\");\\n    bytes32 public constant POLITICAL_ACTOR = keccak256(\\\"POLITICAL_ACTOR\\\");\\n    bytes32 public constant CITIZEN = keccak256(\\\"CITIZEN\\\");\\n\\n    uint public citizenRoleApplicationFee = 10000;\\n\\n    address[] public admins;\\n    address[] public politicalActors;\\n    mapping(address => uint) public politicalActorVotingCredits;\\n    address[] public citizens;\\n\\n    uint public immutable creationDate;\\n\\n    mapping(address => address[]) public adminApprovalSentToAccount;\\n    mapping(address => uint) public adminRoleGrantApprovals;\\n\\n    mapping(address => mapping(uint => uint))\\n        public dailyCitizenRoleModifyCredit;\\n\\n    mapping(address => bytes32) public citizenshipApplications;\\n\\n    mapping(bytes32 => mapping(address => bool)) private _hasRole;\\n\\n    // Events\\n\\n    event RoleGranted(bytes32 role, address account, address executer);\\n\\n    event RoleRevoked(bytes32 role, address account, address executer);\\n\\n    // Errors\\n    error CitizenRoleAlreadyGranted();\\n    error CitizenRoleAlreadyRevokedOrNotGranted();\\n    error NotAppliedForCitizenRole();\\n    error RunOutOfDailyCitizenRoleGrantCredit();\\n    error AdminRoleGrantApprovalAlreadySent();\\n\\n    error MinimumApplicationFeeNotCovered();\\n\\n    error PermissionsUnauthorizedAccount(address account, bytes32 role);\\n\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role, msg.sender);\\n        _;\\n    }\\n\\n    modifier minCitizenshipApplicationFeeCovered() {\\n        if (msg.value < citizenRoleApplicationFee) {\\n            revert MinimumApplicationFeeNotCovered();\\n        }\\n        _;\\n    }\\n\\n    modifier appliedForCitizenRole(address _account, bytes32 _emailPublicKeyHash, bool _revokeCitizenRole) {\\n        if (citizenshipApplications[_account] != _emailPublicKeyHash && !_revokeCitizenRole) {\\n            revert NotAppliedForCitizenRole();\\n        }\\n        _;\\n    }\\n\\n    modifier hasRoleToModify(address _account, bool isRevoke) {\\n        if (!isRevoke && hasRole(CITIZEN, _account))\\n            revert CitizenRoleAlreadyGranted();\\n        if (isRevoke && !hasRole(CITIZEN, _account))\\n            revert CitizenRoleAlreadyRevokedOrNotGranted();\\n        _;\\n    }\\n\\n    modifier hasCitizenRoleGrantCredit() {\\n        uint daysPassed = (block.timestamp - creationDate) / 60 / 60 / 24;\\n\\n        uint maxCitizensCanBeAddPerAdmin = (citizens.length /\\n            MAX_DAILY_NEW_CITIZENS_CAN_ADD_PERCENTAGE) / admins.length;\\n        maxCitizensCanBeAddPerAdmin = maxCitizensCanBeAddPerAdmin > 0\\n            ? maxCitizensCanBeAddPerAdmin\\n            : 1;\\n\\n        if (\\n            dailyCitizenRoleModifyCredit[msg.sender][daysPassed] >=\\n            maxCitizensCanBeAddPerAdmin\\n        ) revert RunOutOfDailyCitizenRoleGrantCredit();\\n        _;\\n    }\\n\\n    modifier adminRoleGrantApprovalNotSent(address _account) {\\n        bool adminRoleGrantApprovalAlreadySent = false;\\n        for (\\n            uint i = 0;\\n            i < adminApprovalSentToAccount[msg.sender].length;\\n            i++\\n        ) {\\n            if (adminApprovalSentToAccount[msg.sender][i] == _account) {\\n                adminRoleGrantApprovalAlreadySent = true;\\n            }\\n        }\\n\\n        if (adminRoleGrantApprovalAlreadySent)\\n            revert AdminRoleGrantApprovalAlreadySent();\\n        _;\\n    }\\n\\n    constructor() {\\n        admins.push(msg.sender);\\n        adminRoleGrantApprovals[msg.sender] = 1;\\n        citizens.push(msg.sender);\\n        creationDate = block.timestamp;\\n        _setupRole(ADMINISTRATOR, msg.sender);\\n        _setupRole(CITIZEN, msg.sender);\\n    }\\n\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _hasRole[role][account] = true;\\n        emit RoleGranted(role, account, msg.sender);\\n    }\\n\\n    function _revokeRole(bytes32 role, address account) internal virtual {\\n        _checkRole(role, account);\\n        delete _hasRole[role][account];\\n        emit RoleRevoked(role, account, msg.sender);\\n    }\\n\\n    /// @dev Checks `role` for `account`. Reverts with a message including the required role.\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!_hasRole[role][account]) {\\n            revert PermissionsUnauthorizedAccount(account, role);\\n        }\\n    }\\n\\n    function hasRole(bytes32 role, address account) public view returns (bool) {\\n        return _hasRole[role][account];\\n    }\\n\\n    function applyForCitizenshipRole(\\n        bytes32 _emailPublicKeyCombinedHash\\n    ) public payable minCitizenshipApplicationFeeCovered {\\n        citizenshipApplications[msg.sender] = _emailPublicKeyCombinedHash;\\n    }\\n\\n    function sendGrantAdministratorRoleApproval(\\n        address _account\\n    ) public onlyRole(ADMINISTRATOR) adminRoleGrantApprovalNotSent(_account) {\\n        adminApprovalSentToAccount[msg.sender].push(_account);\\n        adminRoleGrantApprovals[_account]++;\\n\\n        if (\\n            admins.length == 0 ||\\n            (adminRoleGrantApprovals[_account] * 1000) / admins.length >\\n            MIN_PERCENTAGE_GRANT_ADMIN_APPROVALS_REQUIRED * 10\\n        ) {\\n            adminRoleGrantApprovals[_account]++;\\n            // also new admin has to automatically send his approvals to the already existing admins\\n            for (uint i = 0; i < admins.length; i++) {\\n                adminApprovalSentToAccount[_account].push(admins[i]);\\n                adminRoleGrantApprovals[admins[i]]++;\\n            }\\n            _setupRole(ADMINISTRATOR, _account);\\n            admins.push(_account);\\n        }\\n    }\\n\\n    function revokeAdminRoleApproval(\\n        address revokedAccount\\n    ) public onlyRole(ADMINISTRATOR) {\\n        _revokeAdminRoleApproval(msg.sender, revokedAccount);\\n    }\\n\\n    function _revokeAdminRoleApproval(\\n        address admin,\\n        address revokedAccount\\n    ) internal {\\n        for (uint i = 0; i < adminApprovalSentToAccount[admin].length; i++) {\\n            if (adminApprovalSentToAccount[admin][i] == revokedAccount) {\\n                delete adminApprovalSentToAccount[admin][i];\\n                adminRoleGrantApprovals[revokedAccount]--;\\n                if (\\n                    (adminRoleGrantApprovals[revokedAccount] * 1000) /\\n                        admins.length <\\n                    MIN_PERCENTAGE_GRANT_ADMIN_APPROVALS_REQUIRED * 10\\n                ) {\\n                    adminRoleGrantApprovals[revokedAccount]--;\\n                    _revokeRole(ADMINISTRATOR, revokedAccount);\\n                    for (uint u = 0; u < admins.length; u++) {\\n                        if (admins[u] == revokedAccount) {\\n                            delete admins[u];\\n                            admins[u] = admins[admins.length - 1];\\n                            admins.pop();\\n                            break;\\n                        }\\n                    }\\n                    // make sure all the other admins get revoked their approval receieved from this admin\\n                    for (\\n                        uint k = 0;\\n                        k < adminApprovalSentToAccount[revokedAccount].length;\\n                        k++\\n                    ) {\\n                        _revokeAdminRoleApproval(\\n                            revokedAccount,\\n                            adminApprovalSentToAccount[revokedAccount][k]\\n                        );\\n                        delete adminApprovalSentToAccount[revokedAccount][k];\\n                    }\\n                    break;\\n                }\\n            }\\n        }\\n    }\\n\\n    function grantCitizenRole(\\n        address _account,\\n        bytes32 _emailPublicKeyHash,\\n        bool _revokeCitizenRole\\n    )\\n        public\\n        onlyRole(ADMINISTRATOR)\\n        hasRoleToModify(_account, _revokeCitizenRole)\\n        hasCitizenRoleGrantCredit\\n        appliedForCitizenRole(_account, _emailPublicKeyHash, _revokeCitizenRole)\\n    {\\n        uint daysPassed = (block.timestamp - creationDate) / 60 / 60 / 24;\\n        dailyCitizenRoleModifyCredit[msg.sender][daysPassed]++;\\n        if (!_revokeCitizenRole) {\\n            _setupRole(CITIZEN, _account);\\n            citizens.push(_account);\\n            delete citizenshipApplications[_account];\\n        } else {\\n            if (hasRole(CITIZEN, _account)) {\\n                _revokeRole(CITIZEN, _account);\\n            }\\n            delete citizenshipApplications[_account];\\n            for (uint i; i < citizens.length; i++) {\\n                if (citizens[i] == _account) {\\n                    delete citizens[i];\\n                    break;\\n                }\\n            }\\n        }\\n    }\\n\\n    function updateCitizenshipRoleApplicationFee(\\n        uint value\\n    ) public onlyRole(ADMINISTRATOR) {\\n        citizenRoleApplicationFee = value;\\n    }\\n\\n    function checkIfAccounthasRole(\\n        address _account,\\n        bytes32 _role\\n    ) public view returns (bool) {\\n        return hasRole(_role, _account);\\n    }\\n\\n    function getAdminsSize() public view returns (uint) {\\n        return admins.length;\\n    }\\n\\n    function getCitizensSize() public view returns (uint) {\\n        return citizens.length;\\n    }\\n\\n    function getPoliticalActorsSize() public view returns (uint) {\\n        return politicalActors.length;\\n    }\\n\\n    function isEmptyString(string memory _string) public pure returns (bool) {\\n        return keccak256(bytes(_string)) == keccak256(bytes(\\\"\\\"));\\n    }\\n}\\n\",\"keccak256\":\"0x4a7098ae2d69cc7715ba7c7ed1dc23829ffe7d25d2ee20fa58e9a7a1cb6b2148\",\"license\":\"MIT\"},\"contracts/BVS_Voting.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// pragma\\npragma solidity ^0.8.9;\\n\\nimport \\\"./BVS_Roles.sol\\\";\\n\\n/**\\n * @title Balanced Voting System: Voting contract\\n * @author M\\u00e1rton S\\u00e1ndor Horv\\u00e1th, email: hmartonsandor{@}gmail.com\\n * @notice\\n * @dev\\n */\\n\\ncontract BVS_Voting is BVS_Roles {\\n    // CONSTANTS\\n    uint public constant ELECTION_START_END_INTERVAL = 30 days;\\n    uint public constant MINIMUM_PERCENTAGE_OF_ELECTION_VOTES = 10;\\n\\n    uint public constant VOTING_CYCLE_INTERVAL = 30 days;\\n    uint public constant VOTING_DURATION = 14 days;\\n    uint public constant APPROVE_VOTING_BEFORE_IT_STARTS_LIMIT = 3 days;\\n    uint public constant NEW_VOTING_PERIOD_MIN_SCHEDULE_AHEAD_TIME = 10 days;\\n\\n    uint public constant MIN_TOTAL_CONTENT_READ_CHECK_ANSWER = 10;\\n    uint public constant CONTENT_CHECK_ASKED_NUM_OF_QUESTIONS = 5;\\n    uint public constant CONTENT_CHECK_ASKED_NUM_OF_QUESTIONS = 5;\\n    uint public constant CONTENT_CHECK_ASKED_NUM_OF_QUESTIONS = 5;\\n\\n    uint public constant MIN_VOTE_SCORE = 5;\\n    uint public constant MIN_PERCENTAGE_OF_VOTES = 10;\\n\\n    // globals\\n\\n    uint public firstVotingCycleStartDate;\\n    uint public electionsCandidateApplicationFee = 10000000;\\n\\n    uint public electionsStartDate;\\n    uint public electionsEndDate;\\n\\n    // DATA OBJECTS\\n\\n    struct ProConArticle {\\n        bytes32 votingKey;\\n        bool isArticleApproved; // admin approves\\n        bool isResponseApproved; // admin approves\\n        address publisher;\\n        string articleIpfsHash;\\n        bool isVoteOnA;\\n        string responseStatementIpfsHash; // addeed by the creator of the related voting\\n        string articleContentCheckQuizIpfsHash; // added by admin\\n        string responseContentCheckQuizIpfsHash; // added by admin\\n    }\\n\\n    struct Voting {\\n        bool approved;\\n        bool cancelled;\\n        bytes32 key;\\n        uint budget;\\n        uint voteCount;\\n        address creator;\\n        string contentIpfsHash;\\n        uint startDate; // 10 days before start date critics can appear\\n        uint voteOnAScore;\\n        uint voteOnBScore;\\n        string votingContentCheckQuizIpfsHash;\\n    }\\n\\n    struct Vote {\\n        bool voted;\\n        bool isContentCompleted;\\n    }\\n\\n    // mapping(address => uint) public funders;\\n\\n    // article content check answers\\n    mapping(bytes32 => bytes32[]) public articleContentReadCheckAnswers; // article key => answers\\n\\n    mapping(bytes32 => bytes32[]) public articleContentResponseReadCheckAnswers; // article key => answers\\n\\n    mapping(bytes32 => bytes32[]) public votingContentReadCheckAnswers; // voting key => answers\\n\\n    // track the number of votes political actors created during voting cycles\\n    mapping(uint => mapping(address => uint)) public votingCycleStartVoteCount;\\n\\n    // track the number of articles published related to scheduled votings\\n    mapping(address => mapping(bytes32 => uint)) // political_actor =>  voting key => published articles count\\n        public publishArticleToVotingsCount;\\n\\n    // register the voting cycle indexes in order to clear votingCycleStartVoteCount data\\n    uint[] public votingCycleIndexes;\\n\\n    // store votings\\n    mapping(bytes32 => Voting) public votings;\\n\\n    // store pro/con articles\\n    mapping(bytes32 => mapping(bytes32 => ProConArticle)) public proConArticles; // voting key => article key => article\\n\\n    // register voting and article keys\\n    bytes32[] public votingKeys;\\n    bytes32[] public articleKeys;\\n\\n    mapping(address => mapping(bytes32 => Vote)) public votes;\\n\\n    mapping(address => bytes32[]) public articlesCompleted;\\n    mapping(address => bytes32[]) public articlesResponseCompleted;\\n\\n    // elections\\n\\n    address[] public electionCandidates;\\n    mapping(address => uint32) public electionCandidateScores;\\n\\n    mapping(address => address) public electionVotes;\\n    address[] public electionVoters;\\n\\n    // EVENTS\\n    event CitizenshipRoleGranted(address to, address from);\\n\\n    // ERRORS **************************************************************\\n\\n    error VotingAlreadyStarted();\\n    error VotingCanBeApproved3DaysOrLessBeforeItsStart();\\n\\n    error CantStartNewVointg10daysOrLessBeforeEndOfCycle();\\n    error AccountRanOutOfVotingCreditsForThisVotingCycle();\\n\\n    error ArticleNotExists();\\n    error ArticleNotRelatedToYourVoting();\\n    error ContentCheckIpfsNotAssigned();\\n    error NoArticleContentCheckIpfsAssignedToThisArticle();\\n\\n    error NoArticleResponseAssigned();\\n    error NoArticleResponseContentCheckIpfsAssigned();\\n    error NoMorePublishArticleCreditsRelatedToThisVoting();\\n\\n    error NoEnoughContentReadQuizAnswerAdded();\\n\\n    error FirstVotingCycleStartDateHasToBeInTheFuture();\\n    error NoOngoingVotingPeriod();\\n    error NewVotingHasToBeScheduled10DaysAhead();\\n    error NewVotingHasToBeScheduledLessThan30daysAhead();\\n\\n    error VotingNotExists();\\n    error VotingNotYetStartedOrAlreadyFinished();\\n    error VotingNotBelongsToSender();\\n    error VotingDidNotWon();\\n    error VotingNotFinished();\\n    error VotingNotApproved();\\n    error VotingContentCheckQuizNotCompleted();\\n    error AlreadyVotedOnThisVoting();\\n    error NoEnoughVotesReceived();\\n    error VotingContentCheckQuizNotAssigned();\\n    error VotingOwnerNotRespondedOnAllArticles();\\n\\n    // elections\\n    error ThereIsAnOngoingElections();\\n    error ThereIsNoOngoingElections();\\n    error ElectionStartDateHasToBe30DaysAhead();\\n\\n    error ElectionsNotScheduledOrAlreadyStarted();\\n    error AccountAlreadyAppliedForElections();\\n    error ElectionsAlreadyFinished();\\n    error AccountCantVoteOnItself();\\n    error VoteOnAccountNotBelongToAnyCandidate();\\n    error AccountAlreadyVoted();\\n\\n    error ElectionsAlreadyClosedOrNotYetScheduled();\\n    error ElectionsCanOnlyCloseAfterItsEndDate();\\n\\n    modifier criticisedArticleRelatedToYourVoting(\\n        bytes32 _votingKey,\\n        bytes32 _proConArticleKey\\n    ) {\\n        if (\\n            votings[proConArticles[_votingKey][_proConArticleKey].votingKey]\\n                .creator != msg.sender\\n        ) revert ArticleNotRelatedToYourVoting();\\n        _;\\n    }\\n\\n    modifier hasContentIpfs(bytes32 _votingKey, bytes32 _articleKey) {\\n        if (\\n            isEmptyString(\\n                proConArticles[_votingKey][_articleKey]\\n                    .responseContentCheckQuizIpfsHash\\n            )\\n        ) revert ContentCheckIpfsNotAssigned();\\n        _;\\n    }\\n\\n    modifier firstVotingCycleStartDateIsInTheFuture(\\n        uint _firstVotingCycleStartDate\\n    ) {\\n        if (_firstVotingCycleStartDate < block.timestamp) {\\n            revert FirstVotingCycleStartDateHasToBeInTheFuture();\\n        }\\n        _;\\n    }\\n\\n    modifier votingNotYetStarted(bytes32 _votingKey) {\\n        if (votings[_votingKey].startDate < block.timestamp) {\\n            revert VotingAlreadyStarted();\\n        }\\n        _;\\n    }\\n\\n    modifier votingWon(bytes32 _votingKey) {\\n        if (!isVotingWon(_votingKey, true)) {\\n            revert VotingDidNotWon();\\n        }\\n        _;\\n    }\\n\\n    modifier votingBelongsToSender(bytes32 _votingKey) {\\n        if (getVoting(_votingKey).creator != msg.sender) {\\n            revert VotingNotBelongsToSender();\\n        }\\n        _;\\n    }\\n\\n    modifier votingNotFinished(bytes32 _votingKey) {\\n        if (votings[_votingKey].startDate + VOTING_DURATION > block.timestamp) {\\n            revert VotingNotFinished();\\n        }\\n        _;\\n    }\\n\\n    modifier votingApproved(bytes32 _votingKey) {\\n        if (!votings[_votingKey].approved) {\\n            revert VotingNotApproved();\\n        }\\n        _;\\n    }\\n\\n    modifier enoughVotesArrived(bytes32 _votingKey) {\\n        if (\\n            (votings[_votingKey].voteCount * 100) / citizens.length <\\n            MIN_PERCENTAGE_OF_VOTES\\n        ) {\\n            revert NoEnoughVotesReceived();\\n        }\\n        _;\\n    }\\n\\n    modifier votingExists(bytes32 _votingKey) {\\n        if (votings[_votingKey].creator == address(0)) {\\n            revert VotingNotExists();\\n        }\\n        _;\\n    }\\n\\n    modifier votingPeriodIsActive() {\\n        if (\\n            firstVotingCycleStartDate > block.timestamp ||\\n            firstVotingCycleStartDate == 0\\n        ) {\\n            revert NoOngoingVotingPeriod();\\n        }\\n        _;\\n    }\\n\\n    modifier votingIsOngoing(bytes32 _votingKey) {\\n        if (\\n            votings[_votingKey].startDate > block.timestamp ||\\n            votings[_votingKey].startDate + VOTING_DURATION < block.timestamp\\n        ) {\\n            revert VotingNotYetStartedOrAlreadyFinished();\\n        }\\n        _;\\n    }\\n\\n    modifier contentCheckQuizCompleted(bytes32 _votingKey) {\\n        if (!votes[msg.sender][_votingKey].isContentCompleted) {\\n            revert VotingContentCheckQuizNotCompleted();\\n        }\\n        _;\\n    }\\n\\n    modifier notVotedYetOnThisVoting(bytes32 _votingKey) {\\n        if (votes[msg.sender][_votingKey].voted) {\\n            revert AlreadyVotedOnThisVoting();\\n        }\\n        _;\\n    }\\n\\n    modifier newVotingScheduledAtLeast10daysAhead(uint _startDate) {\\n        if (\\n            _startDate <\\n            block.timestamp + NEW_VOTING_PERIOD_MIN_SCHEDULE_AHEAD_TIME\\n        ) {\\n            revert NewVotingHasToBeScheduled10DaysAhead();\\n        }\\n        _;\\n    }\\n\\n    modifier newVotingScheduledMaximum30daysAhead(uint _startDate) {\\n        if (_startDate > block.timestamp + VOTING_CYCLE_INTERVAL) {\\n            revert NewVotingHasToBeScheduledLessThan30daysAhead();\\n        }\\n        _;\\n    }\\n\\n    modifier votingContentQuizIpfsAssigned(bytes32 _votingKey) {\\n        if (isEmptyString(votings[_votingKey].votingContentCheckQuizIpfsHash)) {\\n            revert VotingContentCheckQuizNotAssigned();\\n        }\\n        _;\\n    }\\n\\n    modifier creatorOfVotingRespondedOnArticles(bytes32 _votingKey) {\\n        bool isRespondedAllTheCritics = true;\\n        uint articleKeysLength = articleKeys.length;\\n\\n        for (uint i = 0; i < articleKeysLength; i++) {\\n            if (proConArticles[_votingKey][articleKeys[i]].isArticleApproved) {\\n                if (\\n                    !proConArticles[_votingKey][articleKeys[i]]\\n                        .isResponseApproved\\n                ) {\\n                    isRespondedAllTheCritics = false;\\n                    break;\\n                }\\n            }\\n        }\\n        if (!isRespondedAllTheCritics) {\\n            revert VotingOwnerNotRespondedOnAllArticles();\\n        }\\n        _;\\n    }\\n\\n    modifier approveAttempt3DaysBeforeVotingStarts(bytes32 _votingKey) {\\n        if (\\n            votings[_votingKey].startDate -\\n                APPROVE_VOTING_BEFORE_IT_STARTS_LIMIT >\\n            block.timestamp\\n        ) {\\n            revert VotingCanBeApproved3DaysOrLessBeforeItsStart();\\n        }\\n        _;\\n    }\\n\\n    modifier enoughContentReadQuizAnswerAdded(\\n        bytes32[] memory _keccak256HashedAnswers\\n    ) {\\n        if (\\n            _keccak256HashedAnswers.length < MIN_TOTAL_CONTENT_READ_CHECK_ANSWER\\n        ) {\\n            revert NoEnoughContentReadQuizAnswerAdded();\\n        }\\n        _;\\n    }\\n\\n    modifier hasArticleContentIpfsHashAssigned(\\n        bytes32 _votingKey,\\n        bytes32 _articleKey\\n    ) {\\n        if (\\n            isEmptyString(\\n                proConArticles[_votingKey][_articleKey]\\n                    .articleContentCheckQuizIpfsHash\\n            )\\n        ) {\\n            revert NoArticleContentCheckIpfsAssignedToThisArticle();\\n        }\\n        _;\\n    }\\n\\n    modifier articleShouldExists(bytes32 _votingKey, bytes32 _articleKey) {\\n        if (proConArticles[_votingKey][_articleKey].publisher == address(0)) {\\n            revert ArticleNotExists();\\n        }\\n        _;\\n    }\\n\\n    modifier hasArticleReponseAssigned(\\n        bytes32 _votingKey,\\n        bytes32 _articleKey\\n    ) {\\n        if (\\n            isEmptyString(\\n                proConArticles[_votingKey][_articleKey]\\n                    .responseStatementIpfsHash\\n            )\\n        ) {\\n            revert NoArticleResponseAssigned();\\n        }\\n        _;\\n    }\\n\\n    modifier hasArticleResponseContentCheckIpfsHash(\\n        bytes32 _votingKey,\\n        bytes32 _articleKey\\n    ) {\\n        if (\\n            isEmptyString(\\n                proConArticles[_votingKey][_articleKey]\\n                    .responseContentCheckQuizIpfsHash\\n            )\\n        ) {\\n            revert NoArticleResponseContentCheckIpfsAssigned();\\n        }\\n        _;\\n    }\\n\\n    modifier hasCreditsLeftToPublishArticle(bytes32 _votingKey) {\\n        if (\\n            publishArticleToVotingsCount[msg.sender][_votingKey] >=\\n            politicalActorVotingCredits[msg.sender]\\n        ) {\\n            revert NoMorePublishArticleCreditsRelatedToThisVoting();\\n        }\\n        _;\\n    }\\n\\n    // elections\\n\\n    modifier noUnclosedElections() {\\n        if (electionsStartDate != 0) {\\n            revert ThereIsAnOngoingElections();\\n        }\\n        _;\\n    }\\n\\n    modifier validApplication() {\\n        if (electionsStartDate == 0 || electionsStartDate < block.timestamp) {\\n            revert ElectionsNotScheduledOrAlreadyStarted();\\n        } else if (electionCandidateScores[msg.sender] > 0) {\\n            revert AccountAlreadyAppliedForElections();\\n        }\\n        _;\\n    }\\n\\n    modifier newElectionsStartDateIs30DaysAhead(uint _electionsStartDate) {\\n        if (\\n            _electionsStartDate < block.timestamp + ELECTION_START_END_INTERVAL\\n        ) {\\n            revert ElectionStartDateHasToBe30DaysAhead();\\n        }\\n        _;\\n    }\\n\\n    modifier validVote(address _voteOnAddress) {\\n        if (block.timestamp < electionsStartDate || electionsStartDate == 0) {\\n            revert ThereIsNoOngoingElections();\\n        } else if (block.timestamp > electionsEndDate) {\\n            revert ElectionsAlreadyFinished();\\n        } else if (msg.sender == _voteOnAddress) {\\n            revert AccountCantVoteOnItself();\\n        } else if (electionCandidateScores[_voteOnAddress] == 0) {\\n            revert VoteOnAccountNotBelongToAnyCandidate();\\n        } else if (electionVotes[msg.sender] != address(0)) {\\n            revert AccountAlreadyVoted();\\n        }\\n        _;\\n    }\\n\\n    modifier canCloseElections() {\\n        if (electionsStartDate == 0) {\\n            revert ElectionsAlreadyClosedOrNotYetScheduled();\\n        } else if (electionsEndDate + 7 days > block.timestamp) {\\n            revert ElectionsCanOnlyCloseAfterItsEndDate();\\n        }\\n        _;\\n    }\\n\\n    modifier minCandidateApplicationFeeCovered() {\\n        if (msg.value < electionsCandidateApplicationFee) {\\n            revert MinimumApplicationFeeNotCovered();\\n        }\\n        _;\\n    }\\n\\n    // CONTRACT LOGIC *****************************************************************\\n\\n    constructor() BVS_Roles() {}\\n\\n    receive() external payable {}\\n\\n    function getBlockTime() public view returns (uint256) {\\n        return block.timestamp;\\n    }\\n\\n    function scheduleNextElections(\\n        uint256 _electionsStartDate,\\n        uint256 _electionsEndDate\\n    )\\n        public\\n        onlyRole(ADMINISTRATOR)\\n        noUnclosedElections\\n        newElectionsStartDateIs30DaysAhead(_electionsStartDate)\\n    {\\n        electionsStartDate = _electionsStartDate;\\n        electionsEndDate = _electionsEndDate;\\n\\n        for (uint i = 0; i < politicalActors.length; i++) {\\n            _revokeRole(POLITICAL_ACTOR, politicalActors[i]);\\n            delete politicalActorVotingCredits[politicalActors[i]];\\n            delete politicalActors[i];\\n        }\\n        politicalActors = new address[](0);\\n    }\\n\\n    function applyForElections()\\n        public\\n        payable\\n        onlyRole(CITIZEN)\\n        minCandidateApplicationFeeCovered\\n        validApplication\\n    {\\n        electionCandidates.push(msg.sender);\\n        electionCandidateScores[msg.sender] = 1;\\n    }\\n\\n    function voteOnElections(\\n        address voteOnAddress\\n    ) public onlyRole(CITIZEN) validVote(voteOnAddress) {\\n        electionVotes[msg.sender] = voteOnAddress;\\n        electionVoters.push(msg.sender);\\n        electionCandidateScores[voteOnAddress]++;\\n    }\\n\\n    function closeElections() public onlyRole(ADMINISTRATOR) canCloseElections {\\n        // assign roles to the winners\\n        uint256 totalVotes = electionVoters.length;\\n        for (uint i = 0; i < electionCandidates.length; i++) {\\n            uint256 votesOwnedPercentage = ((electionCandidateScores[\\n                electionCandidates[i]\\n            ] - 1) * 1000) / totalVotes;\\n\\n            if (votesOwnedPercentage > MINIMUM_PERCENTAGE_OF_ELECTION_VOTES) {\\n                uint256 votingCycleTotalCredit = (votesOwnedPercentage -\\n                    MINIMUM_PERCENTAGE_OF_ELECTION_VOTES *\\n                    10) /\\n                    100 +\\n                    1;\\n\\n                _setupRole(POLITICAL_ACTOR, electionCandidates[i]);\\n                politicalActors.push(electionCandidates[i]);\\n                politicalActorVotingCredits[\\n                    electionCandidates[i]\\n                ] = votingCycleTotalCredit;\\n            }\\n\\n            delete electionCandidateScores[electionCandidates[i]];\\n        }\\n\\n        electionCandidates = new address[](0);\\n        electionVoters = new address[](0);\\n\\n        electionsStartDate = 0;\\n    }\\n\\n    function unlockVotingBudget(\\n        bytes32 _votingKey\\n    )\\n        public\\n        onlyRole(POLITICAL_ACTOR)\\n        votingBelongsToSender(_votingKey)\\n        votingWon(_votingKey)\\n    {\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: getVoting(_votingKey).budget\\n        }(\\\"\\\");\\n        if (!callSuccess) {\\n            revert();\\n        }\\n\\n        votings[_votingKey].budget = 0; // make sure no more money can be requested\\n    }\\n\\n    function setFirstVotingCycleStartDate(\\n        uint _firstVotingCycleStartDate\\n    )\\n        public\\n        onlyRole(ADMINISTRATOR)\\n        firstVotingCycleStartDateIsInTheFuture(_firstVotingCycleStartDate)\\n    {\\n        // reset votingCycleStartVoteCount;\\n        for (uint i = 0; i < votingCycleIndexes.length; i++) {\\n            for (uint u = 0; u < politicalActors.length; u++) {\\n                delete votingCycleStartVoteCount[votingCycleIndexes[i]][\\n                    politicalActors[u]\\n                ];\\n            }\\n        }\\n\\n        votingCycleIndexes = new uint[](0);\\n\\n        firstVotingCycleStartDate = _firstVotingCycleStartDate;\\n    }\\n\\n    function scheduleNewVoting(\\n        string calldata _contentIpfsHash,\\n        uint _startDate,\\n        uint _budget\\n    )\\n        public\\n        onlyRole(POLITICAL_ACTOR)\\n        votingPeriodIsActive\\n        newVotingScheduledAtLeast10daysAhead(_startDate)\\n        newVotingScheduledMaximum30daysAhead(_startDate)\\n    {\\n        uint timePassed = block.timestamp - firstVotingCycleStartDate;\\n        uint votingCycleCount = uint(timePassed / VOTING_CYCLE_INTERVAL);\\n\\n        if (\\n            timePassed - votingCycleCount * VOTING_CYCLE_INTERVAL >\\n            VOTING_CYCLE_INTERVAL - NEW_VOTING_PERIOD_MIN_SCHEDULE_AHEAD_TIME\\n        ) {\\n            revert CantStartNewVointg10daysOrLessBeforeEndOfCycle();\\n        }\\n\\n        if (\\n            politicalActorVotingCredits[msg.sender] <=\\n            votingCycleStartVoteCount[votingCycleCount][msg.sender]\\n        ) {\\n            revert AccountRanOutOfVotingCreditsForThisVotingCycle();\\n        }\\n\\n        votingCycleStartVoteCount[votingCycleCount][msg.sender]++;\\n\\n        bytes32 _votingKey = keccak256(\\n            abi.encodePacked(block.timestamp, msg.sender, _contentIpfsHash)\\n        );\\n\\n        votings[_votingKey].budget = _budget;\\n        votings[_votingKey].key = _votingKey;\\n        votings[_votingKey].creator = msg.sender;\\n        votings[_votingKey].contentIpfsHash = _contentIpfsHash;\\n        votings[_votingKey].startDate = _startDate;\\n        votings[_votingKey].voteOnAScore = 0;\\n        votings[_votingKey].voteOnBScore = 0;\\n\\n        bool votingCycleIndexAlreadyAdded = false;\\n        for (uint i = 0; i < votingCycleIndexes.length; i++) {\\n            if (votingCycleCount == votingCycleIndexes[i]) {\\n                votingCycleIndexAlreadyAdded = true;\\n                break;\\n            }\\n        }\\n\\n        if (!votingCycleIndexAlreadyAdded) {\\n            votingCycleIndexes.push(votingCycleCount);\\n        }\\n\\n        votingKeys.push(_votingKey);\\n    }\\n\\n    function assignQuizIpfsHashToVoting(\\n        bytes32 _votingKey,\\n        string memory _quizIpfsHash\\n    ) public onlyRole(ADMINISTRATOR) votingExists(_votingKey) {\\n        votings[_votingKey].votingContentCheckQuizIpfsHash = _quizIpfsHash;\\n    }\\n\\n    function addKeccak256HashedAnswersToVotingContent(\\n        bytes32 _votingKey,\\n        bytes32[] memory _keccak256HashedAnswers\\n    )\\n        public\\n        onlyRole(ADMINISTRATOR)\\n        votingContentQuizIpfsAssigned(_votingKey)\\n        enoughContentReadQuizAnswerAdded(_keccak256HashedAnswers)\\n    {\\n        votingContentReadCheckAnswers[_votingKey] = _keccak256HashedAnswers;\\n    }\\n\\n    function approveVoting(\\n        bytes32 _votingKey\\n    )\\n        public\\n        onlyRole(ADMINISTRATOR)\\n        votingNotYetStarted(_votingKey)\\n        approveAttempt3DaysBeforeVotingStarts(_votingKey)\\n        enoughContentReadQuizAnswerAdded(\\n            votingContentReadCheckAnswers[_votingKey]\\n        )\\n        creatorOfVotingRespondedOnArticles(_votingKey)\\n    {\\n        votings[_votingKey].approved = true;\\n    }\\n\\n    function publishProConArticle(\\n        bytes32 _votingKey,\\n        string memory _ipfsHash,\\n        bool _isVoteOnA\\n    )\\n        public\\n        onlyRole(POLITICAL_ACTOR)\\n        hasCreditsLeftToPublishArticle(_votingKey)\\n    {\\n        bytes32 articleKey = keccak256(\\n            abi.encodePacked(block.timestamp, msg.sender, _ipfsHash)\\n        );\\n\\n        proConArticles[_votingKey][articleKey] = ProConArticle(\\n            _votingKey,\\n            false,\\n            false,\\n            msg.sender,\\n            _ipfsHash,\\n            _isVoteOnA,\\n            \\\"\\\",\\n            \\\"\\\",\\n            \\\"\\\"\\n        );\\n        articleKeys.push(articleKey);\\n        publishArticleToVotingsCount[msg.sender][_votingKey]++;\\n    }\\n\\n    function assignQuizIpfsHashToArticleOrResponse(\\n        bytes32 _votingKey,\\n        bytes32 _articleKey,\\n        string memory _quizIpfsHash,\\n        bool assignToArticleContent\\n    )\\n        public\\n        onlyRole(ADMINISTRATOR)\\n        articleShouldExists(_votingKey, _articleKey)\\n    {\\n        if (assignToArticleContent) {\\n            proConArticles[_votingKey][_articleKey]\\n                .articleContentCheckQuizIpfsHash = _quizIpfsHash;\\n        } else {\\n            proConArticles[_votingKey][_articleKey]\\n                .responseContentCheckQuizIpfsHash = _quizIpfsHash;\\n        }\\n    }\\n\\n    function addKeccak256HashedAnswersToArticle(\\n        bytes32 _votingKey,\\n        bytes32 _articleKey,\\n        bytes32[] memory _keccak256HashedAnswers\\n    )\\n        public\\n        onlyRole(ADMINISTRATOR)\\n        hasArticleContentIpfsHashAssigned(_votingKey, _articleKey)\\n        enoughContentReadQuizAnswerAdded(_keccak256HashedAnswers)\\n    {\\n        proConArticles[_votingKey][_articleKey].isArticleApproved = true;\\n        articleContentReadCheckAnswers[_articleKey] = _keccak256HashedAnswers;\\n    }\\n\\n    function publishProConArticleResponse(\\n        bytes32 _votingKey,\\n        bytes32 _proConArticleKey,\\n        string memory _ipfsHash\\n    )\\n        public\\n        onlyRole(POLITICAL_ACTOR)\\n        votingNotYetStarted(_votingKey)\\n        criticisedArticleRelatedToYourVoting(_votingKey, _proConArticleKey)\\n    {\\n        proConArticles[_votingKey][_proConArticleKey]\\n            .responseStatementIpfsHash = _ipfsHash;\\n    }\\n\\n    function addKeccak256HashedAnswersToArticleResponse(\\n        bytes32 _votingKey,\\n        bytes32 _articleKey,\\n        bytes32[] memory _keccak256HashedAnswers\\n    )\\n        public\\n        onlyRole(ADMINISTRATOR)\\n        articleShouldExists(_votingKey, _articleKey)\\n        hasArticleReponseAssigned(_votingKey, _articleKey)\\n        hasArticleResponseContentCheckIpfsHash(_votingKey, _articleKey)\\n        votingNotYetStarted(_votingKey)\\n        enoughContentReadQuizAnswerAdded(_keccak256HashedAnswers)\\n    {\\n        articleContentResponseReadCheckAnswers[\\n            _articleKey\\n        ] = _keccak256HashedAnswers;\\n        proConArticles[_votingKey][_articleKey].isResponseApproved = true;\\n    }\\n\\n    function completeContentReadQuiz(\\n        uint contentType,\\n        bytes32 _votingKey,\\n        bytes32 _articleKey,\\n        string[] memory _answers\\n    ) public onlyRole(CITIZEN) {\\n        uint[] memory answerIndexes;\\n        bool isCorrect;\\n\\n        // voting\\n        if (contentType == 1) {\\n            answerIndexes = getAccountVotingQuizAnswerIndexes(\\n                _votingKey,\\n                msg.sender\\n            );\\n\\n            isCorrect = isContentReadQuizCorrect(\\n                answerIndexes,\\n                votingContentReadCheckAnswers[_votingKey],\\n                _answers\\n            );\\n            votes[msg.sender][_votingKey].isContentCompleted = true;\\n        }\\n        // article\\n        else if (contentType == 2) {\\n            answerIndexes = getAccountArticleQuizAnswerIndexes(\\n                _votingKey,\\n                _articleKey,\\n                msg.sender\\n            );\\n\\n            isCorrect = isContentReadQuizCorrect(\\n                answerIndexes,\\n                articleContentReadCheckAnswers[_articleKey],\\n                _answers\\n            );\\n            articlesCompleted[msg.sender].push(_articleKey);\\n            // article respond\\n        } else if (contentType == 3) {\\n            answerIndexes = getAccountArticleResponseQuizAnswerIndexes(\\n                _votingKey,\\n                _articleKey,\\n                msg.sender\\n            );\\n\\n            isCorrect = isContentReadQuizCorrect(\\n                answerIndexes,\\n                articleContentResponseReadCheckAnswers[_articleKey],\\n                _answers\\n            );\\n\\n            articlesResponseCompleted[msg.sender].push(_articleKey);\\n        }\\n\\n        require(isCorrect, \\\"Some of your provided answers are wrong\\\");\\n    }\\n\\n    function calculateVoteScore(\\n        bytes32 _votingKey,\\n        address _account\\n    ) public view returns (uint) {\\n        uint voteScore = MIN_VOTE_SCORE;\\n\\n        uint completedArticlesLength = articlesCompleted[_account].length;\\n\\n        uint numOfVoteOnACompletedArticleValue = 0;\\n        uint numOfVoteOnBCompletedArticleValue = 0;\\n\\n        uint numOfVoteOnACompletedResponseValue = 0;\\n        uint numOfVoteOnBCompletedResponseValue = 0;\\n\\n        for (uint i = 0; i < completedArticlesLength; i++) {\\n            ProConArticle memory completedProConArticle = proConArticles[\\n                _votingKey\\n            ][articlesCompleted[_account][i]];\\n            if (completedProConArticle.votingKey == _votingKey) {\\n                if (completedProConArticle.isVoteOnA) {\\n                    numOfVoteOnACompletedArticleValue += 1;\\n                } else {\\n                    numOfVoteOnBCompletedArticleValue += 1;\\n                }\\n            }\\n        }\\n\\n        uint completedArticlesResponseLength = articlesResponseCompleted[\\n            _account\\n        ].length;\\n        for (uint u = 0; u < completedArticlesResponseLength; u++) {\\n            ProConArticle\\n                memory completedProConArticleWithResponse = proConArticles[\\n                    _votingKey\\n                ][articlesResponseCompleted[_account][u]];\\n            if (completedProConArticleWithResponse.votingKey == _votingKey) {\\n                if (completedProConArticleWithResponse.isVoteOnA) {\\n                    numOfVoteOnACompletedResponseValue += 1;\\n                } else {\\n                    numOfVoteOnBCompletedResponseValue += 1;\\n                }\\n            }\\n        }\\n\\n        uint noPairArticleCompleteCount = 0;\\n\\n        if (\\n            numOfVoteOnACompletedArticleValue >\\n            numOfVoteOnBCompletedArticleValue\\n        ) {\\n            noPairArticleCompleteCount = (numOfVoteOnACompletedArticleValue -\\n                numOfVoteOnBCompletedArticleValue);\\n        } else {\\n            noPairArticleCompleteCount = (numOfVoteOnBCompletedArticleValue -\\n                numOfVoteOnACompletedArticleValue);\\n        }\\n\\n        voteScore +=\\n            ((numOfVoteOnACompletedArticleValue +\\n                numOfVoteOnBCompletedArticleValue -\\n                noPairArticleCompleteCount) / 2) *\\n            25 +\\n            (noPairArticleCompleteCount * 5);\\n\\n        // add the balanced way calculated scores after completed responses\\n        uint noPairResponseCompleteCount = 0;\\n\\n        if (\\n            numOfVoteOnACompletedResponseValue >\\n            numOfVoteOnBCompletedResponseValue\\n        ) {\\n            noPairResponseCompleteCount = (numOfVoteOnACompletedResponseValue -\\n                numOfVoteOnBCompletedResponseValue);\\n        } else {\\n            noPairResponseCompleteCount = (numOfVoteOnBCompletedResponseValue -\\n                numOfVoteOnACompletedResponseValue);\\n        }\\n\\n        voteScore +=\\n            ((numOfVoteOnACompletedResponseValue +\\n                numOfVoteOnBCompletedResponseValue -\\n                noPairResponseCompleteCount) / 2) *\\n            10 +\\n            (noPairResponseCompleteCount * 2);\\n\\n        return voteScore;\\n    }\\n\\n    function voteOnVoting(\\n        bytes32 _votingKey,\\n        bool _voteOnA\\n    )\\n        public\\n        onlyRole(CITIZEN)\\n        votingIsOngoing(_votingKey)\\n        votingApproved(_votingKey)\\n        contentCheckQuizCompleted(_votingKey)\\n        notVotedYetOnThisVoting(_votingKey)\\n    {\\n        // calculate vote score\\n        uint voteScore = calculateVoteScore(_votingKey, msg.sender);\\n\\n        // add new vote\\n        if (_voteOnA) {\\n            votings[_votingKey].voteOnAScore += voteScore;\\n        } else {\\n            votings[_votingKey].voteOnBScore += voteScore;\\n        }\\n\\n        votings[_votingKey].voteCount++;\\n        votes[msg.sender][_votingKey].voted = true;\\n    }\\n\\n    function getAccountVotingQuizAnswerIndexes(\\n        bytes32 _votingKey,\\n        address _account\\n    ) public view returns (uint[] memory) {\\n        return\\n            getAccountQuizAnswerIndexes(\\n                votings[_votingKey].votingContentCheckQuizIpfsHash,\\n                votings[_votingKey].contentIpfsHash,\\n                votings[_votingKey].startDate,\\n                votingContentReadCheckAnswers[_votingKey].length,\\n                CONTENT_CHECK_ASKED_NUM_OF_QUESTIONS,\\n                _account\\n            );\\n    }\\n\\n    function getAccountArticleQuizAnswerIndexes(\\n        bytes32 _votingKey,\\n        bytes32 _articleKey,\\n        address _account\\n    ) public view returns (uint[] memory) {\\n        return\\n            getAccountQuizAnswerIndexes(\\n                proConArticles[_votingKey][_articleKey]\\n                    .articleContentCheckQuizIpfsHash,\\n                proConArticles[_votingKey][_articleKey].articleIpfsHash,\\n                votings[_votingKey].startDate,\\n                articleContentReadCheckAnswers[_articleKey].length,\\n                CONTENT_CHECK_ASKED_NUM_OF_QUESTIONS,\\n                _account\\n            );\\n    }\\n\\n    function getAccountArticleResponseQuizAnswerIndexes(\\n        bytes32 _votingKey,\\n        bytes32 _articleKey,\\n        address _account\\n    ) public view returns (uint[] memory) {\\n        return\\n            getAccountQuizAnswerIndexes(\\n                proConArticles[_votingKey][_articleKey]\\n                    .responseContentCheckQuizIpfsHash,\\n                proConArticles[_votingKey][_articleKey]\\n                    .responseStatementIpfsHash,\\n                votings[_votingKey].startDate,\\n                articleContentResponseReadCheckAnswers[_articleKey].length,\\n                CONTENT_CHECK_ASKED_NUM_OF_QUESTIONS,\\n                _account\\n            );\\n    }\\n\\n    function isContentReadQuizCorrect(\\n        uint[] memory _answerIndexes,\\n        bytes32[] memory _readCheckAnswers,\\n        string[] memory _answers\\n    ) public view onlyRole(CITIZEN) returns (bool) {\\n        bool areAnswersCorrect = true;\\n\\n        for (uint i = 0; i < _answerIndexes.length; i++) {\\n            if (\\n                _readCheckAnswers[_answerIndexes[i] - 1] !=\\n                keccak256(bytes(_answers[i]))\\n            ) {\\n                areAnswersCorrect = false;\\n            }\\n        }\\n\\n        return areAnswersCorrect;\\n    }\\n\\n    function getAccountQuizAnswerIndexes(\\n        string memory ipfsHash1,\\n        string memory ipfsHash2,\\n        uint _date,\\n        uint _numOfTotalQuestions,\\n        uint _numOfQuiestionsToAsk,\\n        address _account\\n    ) internal pure returns (uint[] memory) {\\n        bytes32 hashCode = keccak256(\\n            abi.encodePacked(ipfsHash1, ipfsHash2, _account)\\n        );\\n\\n        uint numOfVotingQuizQuestions = uint(_numOfTotalQuestions);\\n\\n        uint[] memory questionsToAsk = new uint[](_numOfQuiestionsToAsk);\\n\\n        uint countAddedQuestions = 0;\\n        for (\\n            uint i = uint(_date % numOfVotingQuizQuestions);\\n            countAddedQuestions < _numOfQuiestionsToAsk;\\n            i++\\n        ) {\\n            uint questionNth = (uint8(hashCode[i]) % numOfVotingQuizQuestions) +\\n                1;\\n\\n            uint u = 0;\\n            do {\\n                if (questionsToAsk[u] == questionNth) {\\n                    questionNth++;\\n                    u = 0;\\n                    if (questionNth > numOfVotingQuizQuestions) {\\n                        questionNth = 1;\\n                    }\\n                } else {\\n                    u++;\\n                }\\n            } while (u < countAddedQuestions);\\n\\n            questionsToAsk[countAddedQuestions] = questionNth;\\n            countAddedQuestions++;\\n        }\\n\\n        return questionsToAsk;\\n    }\\n\\n    function isVotingWon(\\n        bytes32 _votingKey,\\n        bool _isAWinExpected\\n    )\\n        public\\n        view\\n        votingNotFinished(_votingKey)\\n        votingApproved(_votingKey)\\n        enoughVotesArrived(_votingKey)\\n        returns (bool)\\n    {\\n        if (_isAWinExpected) {\\n            return\\n                votings[_votingKey].voteOnAScore >=\\n                votings[_votingKey].voteOnBScore;\\n        } else {\\n            return\\n                votings[_votingKey].voteOnBScore >\\n                votings[_votingKey].voteOnAScore;\\n        }\\n    }\\n\\n    function getVoting(bytes32 _votingKey) public view returns (Voting memory) {\\n        return votings[_votingKey];\\n    }\\n\\n    function getVotingKeysLength() public view returns (uint) {\\n        return votingKeys.length;\\n    }\\n\\n    function getArticleKeysLength() public view returns (uint) {\\n        return articleKeys.length;\\n    }\\n\\n    function getVotinCycleIndexesSize() public view returns (uint) {\\n        return votingCycleIndexes.length;\\n    }\\n\\n    function getElectionCandidatesSize() public view returns (uint256) {\\n        return electionCandidates.length;\\n    }\\n\\n    function getElectionVotersSize() public view returns (uint256) {\\n        return electionVoters.length;\\n    }\\n}\\n\",\"keccak256\":\"0x77f9bda8eaf8357e5f951d2203d6acb4198d6ea351eaf822925cba886801ea3f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405261271060005562989680600b553480156200001e57600080fd5b506001805480820182557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6018054336001600160a01b03199182168117909255600082815260066020526040812084905560048054948501815590527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9092018054909216811790915542608052620000d9907fb346b2ddc13f08bd9685b83a95304a79a2caac0aa7aa64129e1ae9f4361b4661906200010b565b620001057f313691be6e710b5e9c97c695d02c9e24926f986402f826152f3b2970694f72c9336200010b565b6200017d565b60008281526009602090815260408083206001600160a01b03851680855290835292819020805460ff19166001179055805185815291820192909252338183015290517f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d916060908290030190a15050565b6080516159c0620001a760003960008181610408015281816129590152612a6401526159c06000f3fe6080604052600436106103ea5760003560e01c806305b34410146103f657806309a34f001461043d57806309d39b791461047557806314bfd6d01461049557806314e00b6d146104b557806314e55bd0146104ca57806319a8fb1c146104df57806319d3cfd4146104ff5780631db5ade8146105145780631db6d1061461056f5780631f0317b4146105a5578063206f0af4146105bb57806323559c57146105f3578063257de3971461063b5780632bad9a921461065d5780632c23da781461067d5780632d3f3e88146106925780632e5371e8146106c25780632f2deba3146106d75780632f3ddb8f146106f7578063300637ce1461070c5780633224caf9146107395780633378f39e146107705780633550644d1461079057806337e3f71c146107b05780633ad4ecee146107d05780633d61f033146107e35780633ea29d75146108035780633f691cb314610830578063407135f114610850578063424ae2b7146108585780634337b84514610878578063445cb2df14610898578063466dff58146104ca57806349900c0f146108c55780634c3cc1bc146108da5780634cb401a614610912578063509779d614610929578063532da8e3146109495780635657d7cc1461096b5780635675d8981461098b57806359fe7279146109ab5780635a0c7d4b146106c25780635d3d05f3146109cd57806367fadfd9146109ed57806369d2a73314610a0f5780636c5140bd14610a2f578063713257c414610a4f578063727b81a314610a6f5780637b7c5d5714610a855780637d7c591b14610abd5780638043e65914610add57806387ceff0914610af45780638ce3885114610b0757806391d1485414610b2757806395f808c014610b475780639aa2d819146106c25780639c5a985014610b5d578063a1f8316514610b74578063a438d20814610ba9578063a45f379e14610bc0578063a880aa31146106c2578063a9914e9914610be0578063ae12f8ab14610bf5578063afbfea7f14610c15578063b0f8b42a14610c42578063b128744c14610c62578063b1a03aed14610c82578063bbc3912814610ca2578063bcc36be714610cb7578063c06b62ea14610cd7578063c202583814610cf7578063c84d221414610d17578063c8c99cc314610d2d578063cab1eee414610d4d578063cad1043b14610add578063cfaf234a14610d62578063cff7b24214610d77578063d77a603c14610d97578063d9b1962214610db7578063e3ab974614610dcc578063e64ae4bd14610de2578063eb0ce58914610e02578063f10e098414610e22578063f4388c6b146104ca578063f8785b4f146104ca578063fbd7082714610e42578063fda490d914610e62578063fe3fd17514610e8257600080fd5b366103f157005b600080fd5b34801561040257600080fd5b5061042a7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b34801561044957600080fd5b5061045d610458366004614bd6565b610eaf565b6040516001600160a01b039091168152602001610434565b34801561048157600080fd5b5061045d610490366004614bd6565b610ed9565b3480156104a157600080fd5b5061045d6104b0366004614bd6565b610ee9565b3480156104c157600080fd5b50601e5461042a565b3480156104d657600080fd5b5061042a600581565b3480156104eb57600080fd5b5061042a6104fa366004614bd6565b610ef9565b34801561050b57600080fd5b5060045461042a565b34801561052057600080fd5b5061055861052f366004614c0b565b601860209081526000928352604080842090915290825290205460ff8082169161010090041682565b604080519215158352901515602083015201610434565b34801561057b57600080fd5b5061045d61058a366004614c35565b601d602052600090815260409020546001600160a01b031681565b3480156105b157600080fd5b5061042a600c5481565b3480156105c757600080fd5b5061042a6105d6366004614c0b565b600760209081526000928352604080842090915290825290205481565b3480156105ff57600080fd5b5061062661060e366004614c35565b601c6020526000908152604090205463ffffffff1681565b60405163ffffffff9091168152602001610434565b34801561064757600080fd5b5061065b610656366004614bd6565b610f1a565b005b34801561066957600080fd5b5061065b610678366004614bd6565b610f39565b34801561068957600080fd5b5060175461042a565b34801561069e57600080fd5b506106b26106ad366004614c60565b611153565b6040519015158152602001610434565b3480156106ce57600080fd5b5061042a600a81565b3480156106e357600080fd5b5061065b6106f2366004614d41565b611263565b34801561070357600080fd5b5060135461042a565b34801561071857600080fd5b5061072c610727366004614da1565b61132c565b6040516104349190614dd6565b34801561074557600080fd5b50610759610754366004614bd6565b6114b3565b6040516104349b9a99989796959493929190614e6a565b34801561077c57600080fd5b5061045d61078b366004614bd6565b611625565b34801561079c57600080fd5b5061072c6107ab366004614ee9565b611635565b3480156107bc57600080fd5b5061042a6107cb366004614f0c565b6117a4565b61065b6107de366004614bd6565b6117d5565b3480156107ef57600080fd5b5061065b6107fe366004614f0c565b61180a565b34801561080f57600080fd5b5061042a61081e366004614c35565b60066020526000908152604090205481565b34801561083c57600080fd5b5061065b61084b366004614f2e565b611968565b61065b611a2e565b34801561086457600080fd5b5061065b61087336600461500b565b611b2c565b34801561088457600080fd5b5061065b610893366004614c35565b611c78565b3480156108a457600080fd5b506108b86108b3366004614bd6565b611e27565b6040516104349190615050565b3480156108d157600080fd5b5061065b61204e565b3480156108e657600080fd5b5061042a6108f5366004614c0b565b601260209081526000928352604080842090915290825290205481565b34801561091e57600080fd5b5061042a620d2f0081565b34801561093557600080fd5b5061042a610944366004614c0b565b6122e5565b34801561095557600080fd5b5061042a60008051602061594b83398151915281565b34801561097757600080fd5b5061065b61098636600461500b565b612301565b34801561099757600080fd5b5061065b6109a6366004614c35565b6124b2565b3480156109b757600080fd5b5061042a60008051602061592b83398151915281565b3480156109d957600080fd5b5061065b6109e8366004614bd6565b6124d9565b3480156109f957600080fd5b5061042a60008051602061596b83398151915281565b348015610a1b57600080fd5b5061065b610a2a36600461511c565b6125e3565b348015610a3b57600080fd5b5061065b610a4a36600461519a565b6128b3565b348015610a5b57600080fd5b506106b2610a6a36600461524c565b612c34565b348015610a7b57600080fd5b5061042a60005481565b348015610a9157600080fd5b5061042a610aa0366004614ee9565b601160209081526000928352604080842090915290825290205481565b348015610ac957600080fd5b5061065b610ad8366004614c60565b612ce3565b348015610ae957600080fd5b5061042a62278d0081565b348015610b0057600080fd5b504261042a565b348015610b1357600080fd5b5061042a610b22366004614bd6565b612ec4565b348015610b3357600080fd5b506106b2610b42366004614ee9565b612ed4565b348015610b5357600080fd5b5061042a600b5481565b348015610b6957600080fd5b5061042a6203f48081565b348015610b8057600080fd5b50610b94610b8f366004614f0c565b612eff565b6040516104349998979695949392919061531e565b348015610bb557600080fd5b5061042a6212750081565b348015610bcc57600080fd5b506106b2610bdb36600461539e565b61318c565b348015610bec57600080fd5b50601b5461042a565b348015610c0157600080fd5b5061065b610c103660046153d2565b6131c6565b348015610c2157600080fd5b5061042a610c30366004614c35565b60086020526000908152604090205481565b348015610c4e57600080fd5b5061042a610c5d366004614f0c565b61342a565b348015610c6e57600080fd5b5061042a610c7d366004614f0c565b613446565b348015610c8e57600080fd5b5061042a610c9d366004614bd6565b613462565b348015610cae57600080fd5b5060025461042a565b348015610cc357600080fd5b5061065b610cd236600461542b565b613472565b348015610ce357600080fd5b5061065b610cf2366004614c35565b6134e0565b348015610d0357600080fd5b5061042a610d12366004614ee9565b6137a0565b348015610d2357600080fd5b5061042a600d5481565b348015610d3957600080fd5b5061045d610d48366004614c0b565b613f7d565b348015610d5957600080fd5b5060165461042a565b348015610d6e57600080fd5b5061042a603281565b348015610d8357600080fd5b5061065b610d92366004614bd6565b613fb5565b348015610da357600080fd5b506106b2610db2366004614c0b565b6140a4565b348015610dc357600080fd5b5060015461042a565b348015610dd857600080fd5b5061042a600a5481565b348015610dee57600080fd5b5061045d610dfd366004614bd6565b6140b0565b348015610e0e57600080fd5b5061042a610e1d366004614c0b565b6140c0565b348015610e2e57600080fd5b5061072c610e3d366004614da1565b6140dc565b348015610e4e57600080fd5b5061065b610e5d366004615471565b61425b565b348015610e6e57600080fd5b5061065b610e7d3660046154be565b61447f565b348015610e8e57600080fd5b5061042a610e9d366004614c35565b60036020526000908152604090205481565b60048181548110610ebf57600080fd5b6000918252602090912001546001600160a01b0316905081565b60028181548110610ebf57600080fd5b60018181548110610ebf57600080fd5b60178181548110610f0957600080fd5b600091825260209091200154905081565b60008051602061592b833981519152610f338133614523565b50600055565b60008051602061592b833981519152610f528133614523565b6000828152601460205260409020600601548290421115610f86576040516301da8d1f60e51b815260040160405180910390fd5b60008381526014602052604090206006015483904290610faa906203f48090615510565b1115610fc957604051639aaaf57560e01b815260040160405180910390fd5b6000848152601060209081526040918290208054835181840281018401909452808452909183018282801561101d57602002820191906000526020600020905b815481526020019060010190808311611009575b5050505050600a8151101561104557604051639f14e9bf60e01b815260040160405180910390fd5b601754859060019060005b81811015611112576000848152601560205260408120601780549192918490811061107d5761107d615523565b6000918252602080832090910154835282019290925260400190206001015460ff161561110057600084815260156020526040812060178054919291849081106110c9576110c9615523565b9060005260206000200154815260200190815260200160002060010160019054906101000a900460ff166111005760009250611112565b8061110a81615539565b915050611050565b508161113157604051630632790560e51b815260040160405180910390fd5b505050600094855250506014602052505060409020805460ff19166001179055565b60008281526014602052604081206006015483904290611177906212750090615552565b1115611196576040516368cd2a8560e01b815260040160405180910390fd5b600084815260146020526040902054849060ff166111c757604051633f2151bd60e21b815260040160405180910390fd5b6004546000868152601460205260409020600301548691600a916111ec906064615565565b6111f69190615592565b1015611215576040516333722a1360e21b815260040160405180910390fd5b841561123d57600086815260146020526040902060088101546007909101541015935061125a565b600086815260146020526040902060078101546008909101541193505b50505092915050565b60008051602061592b83398151915261127c8133614523565b6000858152601560209081526040808320878452909152902060010154859085906201000090046001600160a01b03166112c957604051636fdc2add60e11b815260040160405180910390fd5b83156112fb57600087815260156020908152604080832089845290915290206005016112f5868261563b565b50611323565b60008781526015602090815260408083208984529091529020600601611321868261563b565b505b50505050505050565b6000838152601560209081526040808320858452909152902060060180546060916114ab9161135a906155a6565b80601f0160208091040260200160405190810160405280929190818152602001828054611386906155a6565b80156113d35780601f106113a8576101008083540402835291602001916113d3565b820191906000526020600020905b8154815290600101906020018083116113b657829003601f168201915b50505060008881526015602090815260408083208a84529091529020600401805490925061140191506155a6565b80601f016020809104026020016040519081016040528092919081815260200182805461142d906155a6565b801561147a5780601f1061144f5761010080835404028352916020019161147a565b820191906000526020600020905b81548152906001019060200180831161145d57829003601f168201915b5050506000898152601460209081526040808320600601548b8452600f909252909120549092509050600587614578565b949350505050565b60146020526000908152604090208054600182015460028301546003840154600485015460058601805460ff8088169861010090980416966001600160a01b03909316929190611502906155a6565b80601f016020809104026020016040519081016040528092919081815260200182805461152e906155a6565b801561157b5780601f106115505761010080835404028352916020019161157b565b820191906000526020600020905b81548152906001019060200180831161155e57829003601f168201915b5050505050908060060154908060070154908060080154908060090180546115a2906155a6565b80601f01602080910402602001604051908101604052809291908181526020018280546115ce906155a6565b801561161b5780601f106115f05761010080835404028352916020019161161b565b820191906000526020600020905b8154815290600101906020018083116115fe57829003601f168201915b505050505090508b565b601e8181548110610ebf57600080fd5b6000828152601460205260409020600901805460609161179b91611658906155a6565b80601f0160208091040260200160405190810160405280929190818152602001828054611684906155a6565b80156116d15780601f106116a6576101008083540402835291602001916116d1565b820191906000526020600020905b8154815290600101906020018083116116b457829003601f168201915b505050600087815260146020526040902060050180549092506116f491506155a6565b80601f0160208091040260200160405190810160405280929190818152602001828054611720906155a6565b801561176d5780601f106117425761010080835404028352916020019161176d565b820191906000526020600020905b81548152906001019060200180831161175057829003601f168201915b5050506000888152601460209081526040808320600601546010909252909120549092509050600587614578565b90505b92915050565b601060205281600052604060002081815481106117c057600080fd5b90600052602060002001600091509150505481565b6000543410156117f85760405163529c3ec360e11b815260040160405180910390fd5b33600090815260086020526040902055565b60008051602061592b8339815191526118238133614523565b600c5415611844576040516306f17dd960e01b815260040160405180910390fd5b8261185262278d0042615552565b81101561187257604051635311b60360e01b815260040160405180910390fd5b600c849055600d83905560005b600254811015611943576118c860008051602061594b833981519152600283815481106118ae576118ae615523565b6000918252602090912001546001600160a01b03166146e3565b60036000600283815481106118df576118df615523565b60009182526020808320909101546001600160a01b03168352820192909252604001812055600280548290811061191857611918615523565b600091825260209091200180546001600160a01b03191690558061193b81615539565b91505061187f565b50604080516000815260208101918290525161196191600291614b21565b5050505050565b60008051602061594b8339815191526119818133614523565b60008481526014602052604090206006015484904211156119b5576040516301da8d1f60e51b815260040160405180910390fd5b600085815260156020908152604080832087845282528083205483526014909152902060040154859085906001600160a01b03163314611a0857604051634f2161f960e01b815260040160405180910390fd5b60008781526015602090815260408083208984529091529020600401611321868261563b565b60008051602061596b833981519152611a478133614523565b600b54341015611a6a5760405163529c3ec360e11b815260040160405180910390fd5b600c541580611a7a575042600c54105b15611a9857604051630bd094bd60e21b815260040160405180910390fd5b336000908152601c602052604090205463ffffffff1615611acc57604051634cc9446360e11b815260040160405180910390fd5b50601b805460018181019092557f3ad8aa4f87544323a9d1e5dd902f40c356527a7955687113db5f9a85ad579dc10180546001600160a01b031916339081179091556000908152601c60205260409020805463ffffffff19169091179055565b60008051602061592b833981519152611b458133614523565b60008481526015602090815260408083208684529091529020600501805485918591611bf89190611b75906155a6565b80601f0160208091040260200160405190810160405280929190818152602001828054611ba1906155a6565b8015611bee5780601f10611bc357610100808354040283529160200191611bee565b820191906000526020600020905b815481529060010190602001808311611bd157829003601f168201915b505050505061318c565b15611c165760405163e88eb9cf60e01b815260040160405180910390fd5b83600a81511015611c3a57604051639f14e9bf60e01b815260040160405180910390fd5b600087815260156020908152604080832089845282528083206001908101805460ff19169091179055600e8252909120865161132192880190614b86565b60008051602061596b833981519152611c918133614523565b81600c54421080611ca25750600c54155b15611cc05760405163071620af60e01b815260040160405180910390fd5b600d54421115611ce357604051630cf0edd160e01b815260040160405180910390fd5b6001600160a01b0381163303611d0b5760405162b5d96560e51b815260040160405180910390fd5b6001600160a01b0381166000908152601c602052604081205463ffffffff169003611d49576040516311bb144160e01b815260040160405180910390fd5b336000908152601d60205260409020546001600160a01b031615611d805760405163b9ef1a7560e01b815260040160405180910390fd5b336000818152601d6020908152604080832080546001600160a01b0389166001600160a01b03199182168117909255601e8054600181019091557f50bb669a95c7b50b7e8a6f09454034b2b14cf2b85c730dca9a539ca82cb6e350018054909116909517909455928252601c9052908120805463ffffffff1691611e03836156f4565b91906101000a81548163ffffffff021916908363ffffffff16021790555050505050565b611e9460405180610160016040528060001515815260200160001515815260200160008019168152602001600081526020016000815260200160006001600160a01b0316815260200160608152602001600081526020016000815260200160008152602001606081525090565b600082815260146020908152604091829020825161016081018452815460ff8082161515835261010090910416151592810192909252600181015492820192909252600282015460608201526003820154608082015260048201546001600160a01b031660a082015260058201805491929160c084019190611f15906155a6565b80601f0160208091040260200160405190810160405280929190818152602001828054611f41906155a6565b8015611f8e5780601f10611f6357610100808354040283529160200191611f8e565b820191906000526020600020905b815481529060010190602001808311611f7157829003601f168201915b50505050508152602001600682015481526020016007820154815260200160088201548152602001600982018054611fc5906155a6565b80601f0160208091040260200160405190810160405280929190818152602001828054611ff1906155a6565b801561203e5780601f106120135761010080835404028352916020019161203e565b820191906000526020600020905b81548152906001019060200180831161202157829003601f168201915b5050505050815250509050919050565b60008051602061592b8339815191526120678133614523565b600c5460000361208a5760405163530c5b4f60e11b815260040160405180910390fd5b42600d5462093a8061209c9190615552565b11156120bb57604051631967d9a160e11b815260040160405180910390fd5b601e5460005b601b5481101561229f576000826001601c6000601b86815481106120e7576120e7615523565b60009182526020808320909101546001600160a01b0316835282019290925260400190205461211c919063ffffffff16615717565b612128906103e861573b565b63ffffffff166121389190615592565b9050600a8111156122465760006064612152600a80615565565b61215c9084615510565b6121669190615592565b612171906001615552565b90506121b260008051602061594b833981519152601b858154811061219857612198615523565b6000918252602090912001546001600160a01b0316614757565b6002601b84815481106121c7576121c7615523565b6000918252602080832090910154835460018101855593835290822090920180546001600160a01b0319166001600160a01b0390931692909217909155601b8054839260039290918790811061221f5761221f615523565b60009182526020808320909101546001600160a01b03168352820192909252604001902055505b601c6000601b848154811061225d5761225d615523565b60009182526020808320909101546001600160a01b031683528201929092526040019020805463ffffffff19169055508061229781615539565b9150506120c1565b5060408051600081526020810191829052516122bd91601b91614b21565b5060408051600081526020810191829052516122db91601e91614b21565b50506000600c5550565b601a60205281600052604060002081815481106117c057600080fd5b60008051602061592b83398151915261231a8133614523565b6000848152601560209081526040808320868452909152902060010154849084906201000090046001600160a01b031661236757604051636fdc2add60e11b815260040160405180910390fd5b600086815260156020908152604080832088845290915290206004018054879187916123979190611b75906155a6565b156123b55760405163279a7c4360e11b815260040160405180910390fd5b60008881526015602090815260408083208a845290915290206006018054899189916123e59190611b75906155a6565b15612403576040516323120adf60e21b815260040160405180910390fd5b60008a8152601460205260409020600601548a90421115612437576040516301da8d1f60e51b815260040160405180910390fd5b88600a8151101561245b57604051639f14e9bf60e01b815260040160405180910390fd5b60008b8152600f602090815260409091208b5161247a928d0190614b86565b5050506000998a525050601560209081526040808a20988a5297905250505092909320600101805461ff001916610100179055505050565b60008051602061592b8339815191526124cb8133614523565b6124d533836147b8565b5050565b60008051602061592b8339815191526124f28133614523565b8142811015612514576040516321ff628560e11b815260040160405180910390fd5b60005b6013548110156125bd5760005b6002548110156125aa57601160006013848154811061254557612545615523565b9060005260206000200154815260200190815260200160002060006002838154811061257357612573615523565b60009182526020808320909101546001600160a01b03168352820192909252604001812055806125a281615539565b915050612524565b50806125b581615539565b915050612517565b5060408051600081526020810191829052516125db91601391614b86565b505050600a55565b60008051602061594b8339815191526125fc8133614523565b42600a54118061260c5750600a54155b1561262a576040516359c6f10760e11b815260040160405180910390fd5b82612638620d2f0042615552565b8110156126585760405163f401736760e01b815260040160405180910390fd5b8361266662278d0042615552565b81111561268657604051630e8eaa6b60e31b815260040160405180910390fd5b6000600a54426126969190615510565b905060006126a762278d0083615592565b90506126b9620d2f0062278d00615510565b6126c662278d0083615565565b6126d09084615510565b11156126ef576040516317a0acc960e31b815260040160405180910390fd5b60008181526011602090815260408083203384528252808320546003909252909120541161273057604051638ea9835b60e01b815260040160405180910390fd5b6000818152601160209081526040808320338452909152812080549161275583615539565b9190505550600042338b8b6040516020016127739493929190615763565b60408051601f19818403018152918152815160209283012060008181526014909352912060028101899055600181018290556004810180546001600160a01b031916331790559091506005016127ca8a8c83615792565b506000818152601460205260408120600681018a905560078101829055600801819055805b601354811015612838576013818154811061280c5761280c615523565b906000526020600020015484036128265760019150612838565b8061283081615539565b9150506127ef565b508061287457601380546001810182556000919091527f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090018390555b50601680546001810182556000919091527fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b51242890155505050505050505050565b60008051602061592b8339815191526128cc8133614523565b8382801580156128ef57506128ef60008051602061596b83398151915283612ed4565b1561290d5760405163bf6368b960e01b815260040160405180910390fd5b80801561292f575061292d60008051602061596b83398151915283612ed4565b155b1561294d57604051635cb2b5e560e11b815260040160405180910390fd5b60006018603c8061297e7f000000000000000000000000000000000000000000000000000000000000000042615510565b6129889190615592565b6129929190615592565b61299c9190615592565b6001546004549192506000916129b490600a90615592565b6129be9190615592565b9050600081116129cf5760016129d1565b805b3360009081526007602090815260408083208684529091529020549091508111612a0e576040516340b21b6d60e11b815260040160405180910390fd5b6001600160a01b0388166000908152600860205260409020548890889088908214801590612a3a575080155b15612a58576040516309ea00b960e01b815260040160405180910390fd5b60006018603c80612a897f000000000000000000000000000000000000000000000000000000000000000042615510565b612a939190615592565b612a9d9190615592565b612aa79190615592565b3360009081526007602090815260408083208484529091528120805492935090612ad083615539565b919050555089612b4f57612af260008051602061596b8339815191528d614757565b60048054600181019091557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b038e16908117909155600090815260086020526040812055612c26565b612b6760008051602061596b8339815191528d612ed4565b15612b8457612b8460008051602061596b8339815191528d6146e3565b6001600160a01b038c1660009081526008602052604081208190555b600454811015612c24578c6001600160a01b031660048281548110612bc757612bc7615523565b6000918252602090912001546001600160a01b031603612c125760048181548110612bf457612bf4615523565b600091825260209091200180546001600160a01b0319169055612c24565b80612c1c81615539565b915050612ba0565b505b505050505050505050505050565b600060008051602061596b833981519152612c4f8133614523565b600160005b8651811015612cd957848181518110612c6f57612c6f615523565b602002602001015180519060200120866001898481518110612c9357612c93615523565b6020026020010151612ca59190615510565b81518110612cb557612cb5615523565b602002602001015114612cc757600091505b80612cd181615539565b915050612c54565b5095945050505050565b60008051602061596b833981519152612cfc8133614523565b6000838152601460205260409020600601548390421080612d3c57506000818152601460205260409020600601544290612d3a906212750090615552565b105b15612d5a57604051630266984960e61b815260040160405180910390fd5b600084815260146020526040902054849060ff16612d8b57604051633f2151bd60e21b815260040160405180910390fd5b3360009081526018602090815260408083208884529091529020548590610100900460ff16612dcd57604051630e139ddb60e01b815260040160405180910390fd5b336000908152601860209081526040808320898452909152902054869060ff1615612e0b5760405163a61a461160e01b815260040160405180910390fd5b6000612e1788336137a0565b90508615612e4b5760008881526014602052604081206007018054839290612e40908490615552565b90915550612e729050565b60008881526014602052604081206008018054839290612e6c908490615552565b90915550505b6000888152601460205260408120600301805491612e8f83615539565b90915550503360009081526018602090815260408083209a835299905297909720805460ff1916600117905550505050505050565b60138181548110610f0957600080fd5b60009182526009602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6015602090815260009283526040808420909152908252902080546001820154600283018054929360ff808416946101008504909116936201000090046001600160a01b03169290612f50906155a6565b80601f0160208091040260200160405190810160405280929190818152602001828054612f7c906155a6565b8015612fc95780601f10612f9e57610100808354040283529160200191612fc9565b820191906000526020600020905b815481529060010190602001808311612fac57829003601f168201915b5050506003840154600485018054949560ff909216949193509150612fed906155a6565b80601f0160208091040260200160405190810160405280929190818152602001828054613019906155a6565b80156130665780601f1061303b57610100808354040283529160200191613066565b820191906000526020600020905b81548152906001019060200180831161304957829003601f168201915b50505050509080600501805461307b906155a6565b80601f01602080910402602001604051908101604052809291908181526020018280546130a7906155a6565b80156130f45780601f106130c9576101008083540402835291602001916130f4565b820191906000526020600020905b8154815290600101906020018083116130d757829003601f168201915b505050505090806006018054613109906155a6565b80601f0160208091040260200160405190810160405280929190818152602001828054613135906155a6565b80156131825780601f1061315757610100808354040283529160200191613182565b820191906000526020600020905b81548152906001019060200180831161316557829003601f168201915b5050505050905089565b6040805160208082019092526000905281519101207fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4701490565b60008051602061596b8339815191526131df8133614523565b606060008660010361328a576131f58633611635565b600087815260106020908152604091829020805483518184028101840190945280845293955061325c9386939283018282801561325157602002820191906000526020600020905b81548152602001906001019080831161323d575b505050505086612c34565b3360009081526018602090815260408083208a84529091529020805461ff00191661010017905590506133c8565b8660020361332b5761329d8686336140dc565b6000868152600e6020908152604091829020805483518184028101840190945280845293955061330293869392830182828015613251576020028201919060005260206000209081548152602001906001019080831161323d57505050505086612c34565b3360009081526019602090815260408220805460018101825590835291200186905590506133c8565b866003036133c85761333e86863361132c565b6000868152600f602090815260409182902080548351818402810184019094528084529395506133a393869392830182828015613251576020028201919060005260206000209081548152602001906001019080831161323d57505050505086612c34565b336000908152601a602090815260408220805460018101825590835291200186905590505b806113235760405162461bcd60e51b815260206004820152602760248201527f536f6d65206f6620796f75722070726f766964656420616e7377657273206172604482015266652077726f6e6760c81b60648201526084015b60405180910390fd5b600f60205281600052604060002081815481106117c057600080fd5b600e60205281600052604060002081815481106117c057600080fd5b60168181548110610f0957600080fd5b60008051602061592b83398151915261348b8133614523565b60008381526014602052604090206004015483906001600160a01b03166134c557604051636afad3d960e01b815260040160405180910390fd5b6000848152601460205260409020600901611961848261563b565b60008051602061592b8339815191526134f98133614523565b816000805b336000908152600560205260409020548110156135735733600090815260056020526040902080546001600160a01b03851691908390811061354257613542615523565b6000918252602090912001546001600160a01b03160361356157600191505b8061356b81615539565b9150506134fe565b508015613593576040516301624e0d60e21b815260040160405180910390fd5b33600090815260056020908152604080832080546001810182559084528284200180546001600160a01b0319166001600160a01b0389169081179091558352600690915281208054916135e583615539565b9091555050600154158061363457506136006032600a615565565b6001546001600160a01b038616600090815260066020526040902054613628906103e8615565565b6136329190615592565b115b1561379a576001600160a01b038416600090815260066020526040812080549161365d83615539565b919050555060005b600154811015613736576001600160a01b0385166000908152600560205260409020600180548390811061369b5761369b615523565b600091825260208083209091015483546001818101865594845291832090910180546001600160a01b0319166001600160a01b03909216919091179055815460069290849081106136ee576136ee615523565b60009182526020808320909101546001600160a01b03168352820192909252604001812080549161371e83615539565b9190505550808061372e90615539565b915050613665565b5061374f60008051602061592b83398151915285614757565b6001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0386161790555b50505050565b6001600160a01b03811660009081526019602052604081205460059082808080805b85811015613b155760008a81526015602090815260408083206001600160a01b038d1684526019909252822080548391908590811061380357613803615523565b6000918252602080832091909101548352828101939093526040918201902081516101208101835281548152600182015460ff8082161515958301959095526101008104909416151592810192909252620100009092046001600160a01b03166060820152600282018054919291608084019190613880906155a6565b80601f01602080910402602001604051908101604052809291908181526020018280546138ac906155a6565b80156138f95780601f106138ce576101008083540402835291602001916138f9565b820191906000526020600020905b8154815290600101906020018083116138dc57829003601f168201915b5050509183525050600382015460ff1615156020820152600482018054604090920191613925906155a6565b80601f0160208091040260200160405190810160405280929190818152602001828054613951906155a6565b801561399e5780601f106139735761010080835404028352916020019161399e565b820191906000526020600020905b81548152906001019060200180831161398157829003601f168201915b505050505081526020016005820180546139b7906155a6565b80601f01602080910402602001604051908101604052809291908181526020018280546139e3906155a6565b8015613a305780601f10613a0557610100808354040283529160200191613a30565b820191906000526020600020905b815481529060010190602001808311613a1357829003601f168201915b50505050508152602001600682018054613a49906155a6565b80601f0160208091040260200160405190810160405280929190818152602001828054613a75906155a6565b8015613ac25780601f10613a9757610100808354040283529160200191613ac2565b820191906000526020600020905b815481529060010190602001808311613aa557829003601f168201915b50505050508152505090508a816000015103613b02578060a0015115613af457613aed600187615552565b9550613b02565b613aff600186615552565b94505b5080613b0d81615539565b9150506137c2565b506001600160a01b0388166000908152601a6020526040812054905b81811015613e845760008b81526015602090815260408083206001600160a01b038e168452601a9092528220805483919085908110613b7257613b72615523565b6000918252602080832091909101548352828101939093526040918201902081516101208101835281548152600182015460ff8082161515958301959095526101008104909416151592810192909252620100009092046001600160a01b03166060820152600282018054919291608084019190613bef906155a6565b80601f0160208091040260200160405190810160405280929190818152602001828054613c1b906155a6565b8015613c685780601f10613c3d57610100808354040283529160200191613c68565b820191906000526020600020905b815481529060010190602001808311613c4b57829003601f168201915b5050509183525050600382015460ff1615156020820152600482018054604090920191613c94906155a6565b80601f0160208091040260200160405190810160405280929190818152602001828054613cc0906155a6565b8015613d0d5780601f10613ce257610100808354040283529160200191613d0d565b820191906000526020600020905b815481529060010190602001808311613cf057829003601f168201915b50505050508152602001600582018054613d26906155a6565b80601f0160208091040260200160405190810160405280929190818152602001828054613d52906155a6565b8015613d9f5780601f10613d7457610100808354040283529160200191613d9f565b820191906000526020600020905b815481529060010190602001808311613d8257829003601f168201915b50505050508152602001600682018054613db8906155a6565b80601f0160208091040260200160405190810160405280929190818152602001828054613de4906155a6565b8015613e315780601f10613e0657610100808354040283529160200191613e31565b820191906000526020600020905b815481529060010190602001808311613e1457829003601f168201915b50505050508152505090508b816000015103613e71578060a0015115613e6357613e5c600186615552565b9450613e71565b613e6e600185615552565b93505b5080613e7c81615539565b915050613b31565b50600084861115613ea057613e998587615510565b9050613ead565b613eaa8686615510565b90505b613eb8816005615565565b600282613ec5888a615552565b613ecf9190615510565b613ed99190615592565b613ee4906019615565565b613eee9190615552565b613ef89089615552565b9750600083851115613f1557613f0e8486615510565b9050613f22565b613f1f8585615510565b90505b613f2d816002615565565b600282613f3a8789615552565b613f449190615510565b613f4e9190615592565b613f5990600a615565565b613f639190615552565b613f6d908a615552565b9c9b505050505050505050505050565b60056020528160005260406000208181548110613f9957600080fd5b6000918252602090912001546001600160a01b03169150829050565b60008051602061594b833981519152613fce8133614523565b8133613fd982611e27565b60a001516001600160a01b03161461400457604051635e5c61fb60e01b815260040160405180910390fd5b82614010816001611153565b61402d57604051630a48771960e21b815260040160405180910390fd5b60003361403986611e27565b60600151604051600081818185875af1925050503d8060008114614079576040519150601f19603f3d011682016040523d82523d6000602084013e61407e565b606091505b505090508061408c57600080fd5b50505060009182525060146020526040812060020155565b600061179b8284612ed4565b601b8181548110610ebf57600080fd5b601960205281600052604060002081815481106117c057600080fd5b6000838152601560209081526040808320858452909152902060050180546060916114ab9161410a906155a6565b80601f0160208091040260200160405190810160405280929190818152602001828054614136906155a6565b80156141835780601f1061415857610100808354040283529160200191614183565b820191906000526020600020905b81548152906001019060200180831161416657829003601f168201915b50505060008881526015602090815260408083208a8452909152902060020180549092506141b191506155a6565b80601f01602080910402602001604051908101604052809291908181526020018280546141dd906155a6565b801561422a5780601f106141ff5761010080835404028352916020019161422a565b820191906000526020600020905b81548152906001019060200180831161420d57829003601f168201915b5050506000898152601460209081526040808320600601548b8452600e909252909120549092509050600587614578565b60008051602061594b8339815191526142748133614523565b3360009081526003602090815260408083205460128352818420888552909252909120548591116142b857604051631e3fcdc960e31b815260040160405180910390fd5b60004233866040516020016142cf9392919061584b565b60408051601f1981840301815282825280516020918201206101208401835289845260008483018181528585018281523360608801908152608088018d81528c151560a08a01528751808801895285815260c08a01528751808801895285815260e08a015287518088018952858152610100808b01919091528f86526015885288862087875290975296909320875181559151600183018054925194516001600160a01b0316620100000262010000600160b01b031995151590970261ff00199215159290921661ffff1990931692909217179290921693909317905591519193509060028201906143c1908261563b565b5060a082015160038201805460ff191691151591909117905560c082015160048201906143ee908261563b565b5060e08201516005820190614403908261563b565b506101008201516006820190614419908261563b565b505060178054600181019091557fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c150182905550336000908152601260209081526040808320898452909152812080549161447283615539565b9190505550505050505050565b60008051602061592b8339815191526144988133614523565b6000838152601460205260409020600901805484916144ba91611b75906155a6565b156144d85760405163121415cf60e01b815260040160405180910390fd5b82600a815110156144fc57604051639f14e9bf60e01b815260040160405180910390fd5b6000858152601060209081526040909120855161451b92870190614b86565b505050505050565b60008281526009602090815260408083206001600160a01b038516845290915290205460ff166124d55760405163043c588360e11b81526001600160a01b038216600482015260248101839052604401613421565b6060600087878460405160200161459193929190615884565b60408051601f1981840301815291905280516020909101209050846000856001600160401b038111156145c6576145c6614c8c565b6040519080825280602002602001820160405280156145ef578160200160208202803683370190505b5090506000806145ff848b6158ca565b90505b878210156146d35760008486836020811061461f5761461f615523565b61462b9291901a6158ca565b614636906001615552565b905060005b8185828151811061464e5761464e615523565b60200260200101510361467e578161466581615539565b925050600090508582111561467957600191505b61468c565b8061468881615539565b9150505b83811061463b57818585815181106146a6576146a6615523565b6020908102919091010152836146bb81615539565b945050505080806146cb90615539565b915050614602565b50909a9950505050505050505050565b6146ed8282614523565b60008281526009602090815260408083206001600160a01b038516845290915290819020805460ff19169055517ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9061474b908490849033906158de565b60405180910390a15050565b60008281526009602090815260408083206001600160a01b038516845290915290819020805460ff19166001179055517f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9061474b908490849033906158de565b60005b6001600160a01b038316600090815260056020526040902054811015614b1c576001600160a01b0383811660009081526005602052604090208054918416918390811061480a5761480a615523565b6000918252602090912001546001600160a01b031603614b0a576001600160a01b038316600090815260056020526040902080548290811061484e5761484e615523565b6000918252602080832090910180546001600160a01b03191690556001600160a01b03841682526006905260408120805491614889836158fd565b9091555061489b90506032600a615565565b6001546001600160a01b0384166000908152600660205260409020546148c3906103e8615565565b6148cd9190615592565b1015614b0a576001600160a01b03821660009081526006602052604081208054916148f7836158fd565b919050555061491460008051602061592b833981519152836146e3565b60005b600154811015614a4757826001600160a01b03166001828154811061493e5761493e615523565b6000918252602090912001546001600160a01b031603614a35576001818154811061496b5761496b615523565b600091825260209091200180546001600160a01b031916905560018054614993908290615510565b815481106149a3576149a3615523565b600091825260209091200154600180546001600160a01b0390921691839081106149cf576149cf615523565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506001805480614a0e57614a0e615914565b600082815260209020810160001990810180546001600160a01b0319169055019055614a47565b80614a3f81615539565b915050614917565b5060005b6001600160a01b03831660009081526005602052604090205481101561379a576001600160a01b03831660009081526005602052604090208054614ab591859184908110614a9b57614a9b615523565b6000918252602090912001546001600160a01b03166147b8565b6001600160a01b0383166000908152600560205260409020805482908110614adf57614adf615523565b600091825260209091200180546001600160a01b031916905580614b0281615539565b915050614a4b565b80614b1481615539565b9150506147bb565b505050565b828054828255906000526020600020908101928215614b76579160200282015b82811115614b7657825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190614b41565b50614b82929150614bc1565b5090565b828054828255906000526020600020908101928215614b76579160200282015b82811115614b76578251825591602001919060010190614ba6565b5b80821115614b825760008155600101614bc2565b600060208284031215614be857600080fd5b5035919050565b80356001600160a01b0381168114614c0657600080fd5b919050565b60008060408385031215614c1e57600080fd5b614c2783614bef565b946020939093013593505050565b600060208284031215614c4757600080fd5b61179b82614bef565b80358015158114614c0657600080fd5b60008060408385031215614c7357600080fd5b82359150614c8360208401614c50565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715614cca57614cca614c8c565b604052919050565b600082601f830112614ce357600080fd5b81356001600160401b03811115614cfc57614cfc614c8c565b614d0f601f8201601f1916602001614ca2565b818152846020838601011115614d2457600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060808587031215614d5757600080fd5b843593506020850135925060408501356001600160401b03811115614d7b57600080fd5b614d8787828801614cd2565b925050614d9660608601614c50565b905092959194509250565b600080600060608486031215614db657600080fd5b8335925060208401359150614dcd60408501614bef565b90509250925092565b6020808252825182820181905260009190848201906040850190845b81811015614e0e57835183529284019291840191600101614df2565b50909695505050505050565b60005b83811015614e35578181015183820152602001614e1d565b50506000910152565b60008151808452614e56816020860160208601614e1a565b601f01601f19169290920160200192915050565b60006101608d151583528c151560208401528b60408401528a606084015289608084015260018060a01b03891660a08401528060c0840152614eae81840189614e3e565b90508660e08401528561010084015284610120840152828103610140840152614ed78185614e3e565b9e9d5050505050505050505050505050565b60008060408385031215614efc57600080fd5b82359150614c8360208401614bef565b60008060408385031215614f1f57600080fd5b50508035926020909101359150565b600080600060608486031215614f4357600080fd5b833592506020840135915060408401356001600160401b03811115614f6757600080fd5b614f7386828701614cd2565b9150509250925092565b60006001600160401b03821115614f9657614f96614c8c565b5060051b60200190565b600082601f830112614fb157600080fd5b81356020614fc6614fc183614f7d565b614ca2565b82815260059290921b84018101918181019086841115614fe557600080fd5b8286015b848110156150005780358352918301918301614fe9565b509695505050505050565b60008060006060848603121561502057600080fd5b833592506020840135915060408401356001600160401b0381111561504457600080fd5b614f7386828701614fa0565b6020815261506360208201835115159052565b60006020830151615078604084018215159052565b506040830151606083015260608301516080830152608083015160a083015260a08301516150b160c08401826001600160a01b03169052565b5060c08301516101608060e08501526150ce610180850183614e3e565b60e0860151610100868101919091528601516101208087019190915286015161014080870191909152860151858203601f1901838701529092506151128382614e3e565b9695505050505050565b6000806000806060858703121561513257600080fd5b84356001600160401b038082111561514957600080fd5b818701915087601f83011261515d57600080fd5b81358181111561516c57600080fd5b88602082850101111561517e57600080fd5b6020928301999098509187013596604001359550909350505050565b6000806000606084860312156151af57600080fd5b6151b884614bef565b925060208401359150614dcd60408501614c50565b600082601f8301126151de57600080fd5b813560206151ee614fc183614f7d565b82815260059290921b8401810191818101908684111561520d57600080fd5b8286015b848110156150005780356001600160401b038111156152305760008081fd5b61523e8986838b0101614cd2565b845250918301918301615211565b60008060006060848603121561526157600080fd5b83356001600160401b038082111561527857600080fd5b818601915086601f83011261528c57600080fd5b8135602061529c614fc183614f7d565b82815260059290921b8401810191818101908a8411156152bb57600080fd5b948201945b838610156152d9578535825294820194908201906152c0565b975050870135925050808211156152ef57600080fd5b6152fb87838801614fa0565b9350604086013591508082111561531157600080fd5b50614f73868287016151cd565b898152881515602082015287151560408201526001600160a01b03871660608201526101206080820181905260009061535983820189614e3e565b905086151560a084015282810360c08401526153758187614e3e565b905082810360e08401526153898186614e3e565b9050828103610100840152613f6d8185614e3e565b6000602082840312156153b057600080fd5b81356001600160401b038111156153c657600080fd5b6114ab84828501614cd2565b600080600080608085870312156153e857600080fd5b84359350602085013592506040850135915060608501356001600160401b0381111561541357600080fd5b61541f878288016151cd565b91505092959194509250565b6000806040838503121561543e57600080fd5b8235915060208301356001600160401b0381111561545b57600080fd5b61546785828601614cd2565b9150509250929050565b60008060006060848603121561548657600080fd5b8335925060208401356001600160401b038111156154a357600080fd5b6154af86828701614cd2565b925050614dcd60408501614c50565b600080604083850312156154d157600080fd5b8235915060208301356001600160401b038111156154ee57600080fd5b61546785828601614fa0565b634e487b7160e01b600052601160045260246000fd5b8181038181111561179e5761179e6154fa565b634e487b7160e01b600052603260045260246000fd5b60006001820161554b5761554b6154fa565b5060010190565b8082018082111561179e5761179e6154fa565b808202811582820484141761179e5761179e6154fa565b634e487b7160e01b600052601260045260246000fd5b6000826155a1576155a161557c565b500490565b600181811c908216806155ba57607f821691505b6020821081036155da57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115614b1c57600081815260208120601f850160051c810160208610156156075750805b601f850160051c820191505b8181101561451b57828155600101615613565b600019600383901b1c191660019190911b1790565b81516001600160401b0381111561565457615654614c8c565b6156688161566284546155a6565b846155e0565b602080601f83116001811461569757600084156156855750858301515b61568f8582615626565b86555061451b565b600085815260208120601f198616915b828110156156c6578886015182559484019460019091019084016156a7565b50858210156156e45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600063ffffffff80831681810361570d5761570d6154fa565b6001019392505050565b63ffffffff828116828216039080821115615734576157346154fa565b5092915050565b63ffffffff81811683821602808216919082811461575b5761575b6154fa565b505092915050565b848152606084901b6001600160601b031916602082015281836034830137600091016034019081529392505050565b6001600160401b038311156157a9576157a9614c8c565b6157bd836157b783546155a6565b836155e0565b6000601f8411600181146157eb57600085156157d95750838201355b6157e38682615626565b845550611961565b600083815260209020601f19861690835b8281101561581c57868501358255602094850194600190920191016157fc565b50868210156158395760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b83815260018060601b03198360601b16602082015260008251615875816034850160208701614e1a565b91909101603401949350505050565b60008451615896818460208901614e1a565b8451908301906158aa818360208901614e1a565b60609490941b6001600160601b0319169301928352505060140192915050565b6000826158d9576158d961557c565b500690565b9283526001600160a01b03918216602084015216604082015260600190565b60008161590c5761590c6154fa565b506000190190565b634e487b7160e01b600052603160045260246000fdfeb346b2ddc13f08bd9685b83a95304a79a2caac0aa7aa64129e1ae9f4361b46619f70d138cbbd87297896478196b4493d9dceaca01f5883ecbd7bee66d300348d313691be6e710b5e9c97c695d02c9e24926f986402f826152f3b2970694f72c9a2646970667358221220a1c14e0ca89117fdf2952829728c75d5f6de05d94372edd4358568654952970064736f6c63430008130033",
  "deployedBytecode": "0x6080604052600436106103ea5760003560e01c806305b34410146103f657806309a34f001461043d57806309d39b791461047557806314bfd6d01461049557806314e00b6d146104b557806314e55bd0146104ca57806319a8fb1c146104df57806319d3cfd4146104ff5780631db5ade8146105145780631db6d1061461056f5780631f0317b4146105a5578063206f0af4146105bb57806323559c57146105f3578063257de3971461063b5780632bad9a921461065d5780632c23da781461067d5780632d3f3e88146106925780632e5371e8146106c25780632f2deba3146106d75780632f3ddb8f146106f7578063300637ce1461070c5780633224caf9146107395780633378f39e146107705780633550644d1461079057806337e3f71c146107b05780633ad4ecee146107d05780633d61f033146107e35780633ea29d75146108035780633f691cb314610830578063407135f114610850578063424ae2b7146108585780634337b84514610878578063445cb2df14610898578063466dff58146104ca57806349900c0f146108c55780634c3cc1bc146108da5780634cb401a614610912578063509779d614610929578063532da8e3146109495780635657d7cc1461096b5780635675d8981461098b57806359fe7279146109ab5780635a0c7d4b146106c25780635d3d05f3146109cd57806367fadfd9146109ed57806369d2a73314610a0f5780636c5140bd14610a2f578063713257c414610a4f578063727b81a314610a6f5780637b7c5d5714610a855780637d7c591b14610abd5780638043e65914610add57806387ceff0914610af45780638ce3885114610b0757806391d1485414610b2757806395f808c014610b475780639aa2d819146106c25780639c5a985014610b5d578063a1f8316514610b74578063a438d20814610ba9578063a45f379e14610bc0578063a880aa31146106c2578063a9914e9914610be0578063ae12f8ab14610bf5578063afbfea7f14610c15578063b0f8b42a14610c42578063b128744c14610c62578063b1a03aed14610c82578063bbc3912814610ca2578063bcc36be714610cb7578063c06b62ea14610cd7578063c202583814610cf7578063c84d221414610d17578063c8c99cc314610d2d578063cab1eee414610d4d578063cad1043b14610add578063cfaf234a14610d62578063cff7b24214610d77578063d77a603c14610d97578063d9b1962214610db7578063e3ab974614610dcc578063e64ae4bd14610de2578063eb0ce58914610e02578063f10e098414610e22578063f4388c6b146104ca578063f8785b4f146104ca578063fbd7082714610e42578063fda490d914610e62578063fe3fd17514610e8257600080fd5b366103f157005b600080fd5b34801561040257600080fd5b5061042a7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b34801561044957600080fd5b5061045d610458366004614bd6565b610eaf565b6040516001600160a01b039091168152602001610434565b34801561048157600080fd5b5061045d610490366004614bd6565b610ed9565b3480156104a157600080fd5b5061045d6104b0366004614bd6565b610ee9565b3480156104c157600080fd5b50601e5461042a565b3480156104d657600080fd5b5061042a600581565b3480156104eb57600080fd5b5061042a6104fa366004614bd6565b610ef9565b34801561050b57600080fd5b5060045461042a565b34801561052057600080fd5b5061055861052f366004614c0b565b601860209081526000928352604080842090915290825290205460ff8082169161010090041682565b604080519215158352901515602083015201610434565b34801561057b57600080fd5b5061045d61058a366004614c35565b601d602052600090815260409020546001600160a01b031681565b3480156105b157600080fd5b5061042a600c5481565b3480156105c757600080fd5b5061042a6105d6366004614c0b565b600760209081526000928352604080842090915290825290205481565b3480156105ff57600080fd5b5061062661060e366004614c35565b601c6020526000908152604090205463ffffffff1681565b60405163ffffffff9091168152602001610434565b34801561064757600080fd5b5061065b610656366004614bd6565b610f1a565b005b34801561066957600080fd5b5061065b610678366004614bd6565b610f39565b34801561068957600080fd5b5060175461042a565b34801561069e57600080fd5b506106b26106ad366004614c60565b611153565b6040519015158152602001610434565b3480156106ce57600080fd5b5061042a600a81565b3480156106e357600080fd5b5061065b6106f2366004614d41565b611263565b34801561070357600080fd5b5060135461042a565b34801561071857600080fd5b5061072c610727366004614da1565b61132c565b6040516104349190614dd6565b34801561074557600080fd5b50610759610754366004614bd6565b6114b3565b6040516104349b9a99989796959493929190614e6a565b34801561077c57600080fd5b5061045d61078b366004614bd6565b611625565b34801561079c57600080fd5b5061072c6107ab366004614ee9565b611635565b3480156107bc57600080fd5b5061042a6107cb366004614f0c565b6117a4565b61065b6107de366004614bd6565b6117d5565b3480156107ef57600080fd5b5061065b6107fe366004614f0c565b61180a565b34801561080f57600080fd5b5061042a61081e366004614c35565b60066020526000908152604090205481565b34801561083c57600080fd5b5061065b61084b366004614f2e565b611968565b61065b611a2e565b34801561086457600080fd5b5061065b61087336600461500b565b611b2c565b34801561088457600080fd5b5061065b610893366004614c35565b611c78565b3480156108a457600080fd5b506108b86108b3366004614bd6565b611e27565b6040516104349190615050565b3480156108d157600080fd5b5061065b61204e565b3480156108e657600080fd5b5061042a6108f5366004614c0b565b601260209081526000928352604080842090915290825290205481565b34801561091e57600080fd5b5061042a620d2f0081565b34801561093557600080fd5b5061042a610944366004614c0b565b6122e5565b34801561095557600080fd5b5061042a60008051602061594b83398151915281565b34801561097757600080fd5b5061065b61098636600461500b565b612301565b34801561099757600080fd5b5061065b6109a6366004614c35565b6124b2565b3480156109b757600080fd5b5061042a60008051602061592b83398151915281565b3480156109d957600080fd5b5061065b6109e8366004614bd6565b6124d9565b3480156109f957600080fd5b5061042a60008051602061596b83398151915281565b348015610a1b57600080fd5b5061065b610a2a36600461511c565b6125e3565b348015610a3b57600080fd5b5061065b610a4a36600461519a565b6128b3565b348015610a5b57600080fd5b506106b2610a6a36600461524c565b612c34565b348015610a7b57600080fd5b5061042a60005481565b348015610a9157600080fd5b5061042a610aa0366004614ee9565b601160209081526000928352604080842090915290825290205481565b348015610ac957600080fd5b5061065b610ad8366004614c60565b612ce3565b348015610ae957600080fd5b5061042a62278d0081565b348015610b0057600080fd5b504261042a565b348015610b1357600080fd5b5061042a610b22366004614bd6565b612ec4565b348015610b3357600080fd5b506106b2610b42366004614ee9565b612ed4565b348015610b5357600080fd5b5061042a600b5481565b348015610b6957600080fd5b5061042a6203f48081565b348015610b8057600080fd5b50610b94610b8f366004614f0c565b612eff565b6040516104349998979695949392919061531e565b348015610bb557600080fd5b5061042a6212750081565b348015610bcc57600080fd5b506106b2610bdb36600461539e565b61318c565b348015610bec57600080fd5b50601b5461042a565b348015610c0157600080fd5b5061065b610c103660046153d2565b6131c6565b348015610c2157600080fd5b5061042a610c30366004614c35565b60086020526000908152604090205481565b348015610c4e57600080fd5b5061042a610c5d366004614f0c565b61342a565b348015610c6e57600080fd5b5061042a610c7d366004614f0c565b613446565b348015610c8e57600080fd5b5061042a610c9d366004614bd6565b613462565b348015610cae57600080fd5b5060025461042a565b348015610cc357600080fd5b5061065b610cd236600461542b565b613472565b348015610ce357600080fd5b5061065b610cf2366004614c35565b6134e0565b348015610d0357600080fd5b5061042a610d12366004614ee9565b6137a0565b348015610d2357600080fd5b5061042a600d5481565b348015610d3957600080fd5b5061045d610d48366004614c0b565b613f7d565b348015610d5957600080fd5b5060165461042a565b348015610d6e57600080fd5b5061042a603281565b348015610d8357600080fd5b5061065b610d92366004614bd6565b613fb5565b348015610da357600080fd5b506106b2610db2366004614c0b565b6140a4565b348015610dc357600080fd5b5060015461042a565b348015610dd857600080fd5b5061042a600a5481565b348015610dee57600080fd5b5061045d610dfd366004614bd6565b6140b0565b348015610e0e57600080fd5b5061042a610e1d366004614c0b565b6140c0565b348015610e2e57600080fd5b5061072c610e3d366004614da1565b6140dc565b348015610e4e57600080fd5b5061065b610e5d366004615471565b61425b565b348015610e6e57600080fd5b5061065b610e7d3660046154be565b61447f565b348015610e8e57600080fd5b5061042a610e9d366004614c35565b60036020526000908152604090205481565b60048181548110610ebf57600080fd5b6000918252602090912001546001600160a01b0316905081565b60028181548110610ebf57600080fd5b60018181548110610ebf57600080fd5b60178181548110610f0957600080fd5b600091825260209091200154905081565b60008051602061592b833981519152610f338133614523565b50600055565b60008051602061592b833981519152610f528133614523565b6000828152601460205260409020600601548290421115610f86576040516301da8d1f60e51b815260040160405180910390fd5b60008381526014602052604090206006015483904290610faa906203f48090615510565b1115610fc957604051639aaaf57560e01b815260040160405180910390fd5b6000848152601060209081526040918290208054835181840281018401909452808452909183018282801561101d57602002820191906000526020600020905b815481526020019060010190808311611009575b5050505050600a8151101561104557604051639f14e9bf60e01b815260040160405180910390fd5b601754859060019060005b81811015611112576000848152601560205260408120601780549192918490811061107d5761107d615523565b6000918252602080832090910154835282019290925260400190206001015460ff161561110057600084815260156020526040812060178054919291849081106110c9576110c9615523565b9060005260206000200154815260200190815260200160002060010160019054906101000a900460ff166111005760009250611112565b8061110a81615539565b915050611050565b508161113157604051630632790560e51b815260040160405180910390fd5b505050600094855250506014602052505060409020805460ff19166001179055565b60008281526014602052604081206006015483904290611177906212750090615552565b1115611196576040516368cd2a8560e01b815260040160405180910390fd5b600084815260146020526040902054849060ff166111c757604051633f2151bd60e21b815260040160405180910390fd5b6004546000868152601460205260409020600301548691600a916111ec906064615565565b6111f69190615592565b1015611215576040516333722a1360e21b815260040160405180910390fd5b841561123d57600086815260146020526040902060088101546007909101541015935061125a565b600086815260146020526040902060078101546008909101541193505b50505092915050565b60008051602061592b83398151915261127c8133614523565b6000858152601560209081526040808320878452909152902060010154859085906201000090046001600160a01b03166112c957604051636fdc2add60e11b815260040160405180910390fd5b83156112fb57600087815260156020908152604080832089845290915290206005016112f5868261563b565b50611323565b60008781526015602090815260408083208984529091529020600601611321868261563b565b505b50505050505050565b6000838152601560209081526040808320858452909152902060060180546060916114ab9161135a906155a6565b80601f0160208091040260200160405190810160405280929190818152602001828054611386906155a6565b80156113d35780601f106113a8576101008083540402835291602001916113d3565b820191906000526020600020905b8154815290600101906020018083116113b657829003601f168201915b50505060008881526015602090815260408083208a84529091529020600401805490925061140191506155a6565b80601f016020809104026020016040519081016040528092919081815260200182805461142d906155a6565b801561147a5780601f1061144f5761010080835404028352916020019161147a565b820191906000526020600020905b81548152906001019060200180831161145d57829003601f168201915b5050506000898152601460209081526040808320600601548b8452600f909252909120549092509050600587614578565b949350505050565b60146020526000908152604090208054600182015460028301546003840154600485015460058601805460ff8088169861010090980416966001600160a01b03909316929190611502906155a6565b80601f016020809104026020016040519081016040528092919081815260200182805461152e906155a6565b801561157b5780601f106115505761010080835404028352916020019161157b565b820191906000526020600020905b81548152906001019060200180831161155e57829003601f168201915b5050505050908060060154908060070154908060080154908060090180546115a2906155a6565b80601f01602080910402602001604051908101604052809291908181526020018280546115ce906155a6565b801561161b5780601f106115f05761010080835404028352916020019161161b565b820191906000526020600020905b8154815290600101906020018083116115fe57829003601f168201915b505050505090508b565b601e8181548110610ebf57600080fd5b6000828152601460205260409020600901805460609161179b91611658906155a6565b80601f0160208091040260200160405190810160405280929190818152602001828054611684906155a6565b80156116d15780601f106116a6576101008083540402835291602001916116d1565b820191906000526020600020905b8154815290600101906020018083116116b457829003601f168201915b505050600087815260146020526040902060050180549092506116f491506155a6565b80601f0160208091040260200160405190810160405280929190818152602001828054611720906155a6565b801561176d5780601f106117425761010080835404028352916020019161176d565b820191906000526020600020905b81548152906001019060200180831161175057829003601f168201915b5050506000888152601460209081526040808320600601546010909252909120549092509050600587614578565b90505b92915050565b601060205281600052604060002081815481106117c057600080fd5b90600052602060002001600091509150505481565b6000543410156117f85760405163529c3ec360e11b815260040160405180910390fd5b33600090815260086020526040902055565b60008051602061592b8339815191526118238133614523565b600c5415611844576040516306f17dd960e01b815260040160405180910390fd5b8261185262278d0042615552565b81101561187257604051635311b60360e01b815260040160405180910390fd5b600c849055600d83905560005b600254811015611943576118c860008051602061594b833981519152600283815481106118ae576118ae615523565b6000918252602090912001546001600160a01b03166146e3565b60036000600283815481106118df576118df615523565b60009182526020808320909101546001600160a01b03168352820192909252604001812055600280548290811061191857611918615523565b600091825260209091200180546001600160a01b03191690558061193b81615539565b91505061187f565b50604080516000815260208101918290525161196191600291614b21565b5050505050565b60008051602061594b8339815191526119818133614523565b60008481526014602052604090206006015484904211156119b5576040516301da8d1f60e51b815260040160405180910390fd5b600085815260156020908152604080832087845282528083205483526014909152902060040154859085906001600160a01b03163314611a0857604051634f2161f960e01b815260040160405180910390fd5b60008781526015602090815260408083208984529091529020600401611321868261563b565b60008051602061596b833981519152611a478133614523565b600b54341015611a6a5760405163529c3ec360e11b815260040160405180910390fd5b600c541580611a7a575042600c54105b15611a9857604051630bd094bd60e21b815260040160405180910390fd5b336000908152601c602052604090205463ffffffff1615611acc57604051634cc9446360e11b815260040160405180910390fd5b50601b805460018181019092557f3ad8aa4f87544323a9d1e5dd902f40c356527a7955687113db5f9a85ad579dc10180546001600160a01b031916339081179091556000908152601c60205260409020805463ffffffff19169091179055565b60008051602061592b833981519152611b458133614523565b60008481526015602090815260408083208684529091529020600501805485918591611bf89190611b75906155a6565b80601f0160208091040260200160405190810160405280929190818152602001828054611ba1906155a6565b8015611bee5780601f10611bc357610100808354040283529160200191611bee565b820191906000526020600020905b815481529060010190602001808311611bd157829003601f168201915b505050505061318c565b15611c165760405163e88eb9cf60e01b815260040160405180910390fd5b83600a81511015611c3a57604051639f14e9bf60e01b815260040160405180910390fd5b600087815260156020908152604080832089845282528083206001908101805460ff19169091179055600e8252909120865161132192880190614b86565b60008051602061596b833981519152611c918133614523565b81600c54421080611ca25750600c54155b15611cc05760405163071620af60e01b815260040160405180910390fd5b600d54421115611ce357604051630cf0edd160e01b815260040160405180910390fd5b6001600160a01b0381163303611d0b5760405162b5d96560e51b815260040160405180910390fd5b6001600160a01b0381166000908152601c602052604081205463ffffffff169003611d49576040516311bb144160e01b815260040160405180910390fd5b336000908152601d60205260409020546001600160a01b031615611d805760405163b9ef1a7560e01b815260040160405180910390fd5b336000818152601d6020908152604080832080546001600160a01b0389166001600160a01b03199182168117909255601e8054600181019091557f50bb669a95c7b50b7e8a6f09454034b2b14cf2b85c730dca9a539ca82cb6e350018054909116909517909455928252601c9052908120805463ffffffff1691611e03836156f4565b91906101000a81548163ffffffff021916908363ffffffff16021790555050505050565b611e9460405180610160016040528060001515815260200160001515815260200160008019168152602001600081526020016000815260200160006001600160a01b0316815260200160608152602001600081526020016000815260200160008152602001606081525090565b600082815260146020908152604091829020825161016081018452815460ff8082161515835261010090910416151592810192909252600181015492820192909252600282015460608201526003820154608082015260048201546001600160a01b031660a082015260058201805491929160c084019190611f15906155a6565b80601f0160208091040260200160405190810160405280929190818152602001828054611f41906155a6565b8015611f8e5780601f10611f6357610100808354040283529160200191611f8e565b820191906000526020600020905b815481529060010190602001808311611f7157829003601f168201915b50505050508152602001600682015481526020016007820154815260200160088201548152602001600982018054611fc5906155a6565b80601f0160208091040260200160405190810160405280929190818152602001828054611ff1906155a6565b801561203e5780601f106120135761010080835404028352916020019161203e565b820191906000526020600020905b81548152906001019060200180831161202157829003601f168201915b5050505050815250509050919050565b60008051602061592b8339815191526120678133614523565b600c5460000361208a5760405163530c5b4f60e11b815260040160405180910390fd5b42600d5462093a8061209c9190615552565b11156120bb57604051631967d9a160e11b815260040160405180910390fd5b601e5460005b601b5481101561229f576000826001601c6000601b86815481106120e7576120e7615523565b60009182526020808320909101546001600160a01b0316835282019290925260400190205461211c919063ffffffff16615717565b612128906103e861573b565b63ffffffff166121389190615592565b9050600a8111156122465760006064612152600a80615565565b61215c9084615510565b6121669190615592565b612171906001615552565b90506121b260008051602061594b833981519152601b858154811061219857612198615523565b6000918252602090912001546001600160a01b0316614757565b6002601b84815481106121c7576121c7615523565b6000918252602080832090910154835460018101855593835290822090920180546001600160a01b0319166001600160a01b0390931692909217909155601b8054839260039290918790811061221f5761221f615523565b60009182526020808320909101546001600160a01b03168352820192909252604001902055505b601c6000601b848154811061225d5761225d615523565b60009182526020808320909101546001600160a01b031683528201929092526040019020805463ffffffff19169055508061229781615539565b9150506120c1565b5060408051600081526020810191829052516122bd91601b91614b21565b5060408051600081526020810191829052516122db91601e91614b21565b50506000600c5550565b601a60205281600052604060002081815481106117c057600080fd5b60008051602061592b83398151915261231a8133614523565b6000848152601560209081526040808320868452909152902060010154849084906201000090046001600160a01b031661236757604051636fdc2add60e11b815260040160405180910390fd5b600086815260156020908152604080832088845290915290206004018054879187916123979190611b75906155a6565b156123b55760405163279a7c4360e11b815260040160405180910390fd5b60008881526015602090815260408083208a845290915290206006018054899189916123e59190611b75906155a6565b15612403576040516323120adf60e21b815260040160405180910390fd5b60008a8152601460205260409020600601548a90421115612437576040516301da8d1f60e51b815260040160405180910390fd5b88600a8151101561245b57604051639f14e9bf60e01b815260040160405180910390fd5b60008b8152600f602090815260409091208b5161247a928d0190614b86565b5050506000998a525050601560209081526040808a20988a5297905250505092909320600101805461ff001916610100179055505050565b60008051602061592b8339815191526124cb8133614523565b6124d533836147b8565b5050565b60008051602061592b8339815191526124f28133614523565b8142811015612514576040516321ff628560e11b815260040160405180910390fd5b60005b6013548110156125bd5760005b6002548110156125aa57601160006013848154811061254557612545615523565b9060005260206000200154815260200190815260200160002060006002838154811061257357612573615523565b60009182526020808320909101546001600160a01b03168352820192909252604001812055806125a281615539565b915050612524565b50806125b581615539565b915050612517565b5060408051600081526020810191829052516125db91601391614b86565b505050600a55565b60008051602061594b8339815191526125fc8133614523565b42600a54118061260c5750600a54155b1561262a576040516359c6f10760e11b815260040160405180910390fd5b82612638620d2f0042615552565b8110156126585760405163f401736760e01b815260040160405180910390fd5b8361266662278d0042615552565b81111561268657604051630e8eaa6b60e31b815260040160405180910390fd5b6000600a54426126969190615510565b905060006126a762278d0083615592565b90506126b9620d2f0062278d00615510565b6126c662278d0083615565565b6126d09084615510565b11156126ef576040516317a0acc960e31b815260040160405180910390fd5b60008181526011602090815260408083203384528252808320546003909252909120541161273057604051638ea9835b60e01b815260040160405180910390fd5b6000818152601160209081526040808320338452909152812080549161275583615539565b9190505550600042338b8b6040516020016127739493929190615763565b60408051601f19818403018152918152815160209283012060008181526014909352912060028101899055600181018290556004810180546001600160a01b031916331790559091506005016127ca8a8c83615792565b506000818152601460205260408120600681018a905560078101829055600801819055805b601354811015612838576013818154811061280c5761280c615523565b906000526020600020015484036128265760019150612838565b8061283081615539565b9150506127ef565b508061287457601380546001810182556000919091527f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090018390555b50601680546001810182556000919091527fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b51242890155505050505050505050565b60008051602061592b8339815191526128cc8133614523565b8382801580156128ef57506128ef60008051602061596b83398151915283612ed4565b1561290d5760405163bf6368b960e01b815260040160405180910390fd5b80801561292f575061292d60008051602061596b83398151915283612ed4565b155b1561294d57604051635cb2b5e560e11b815260040160405180910390fd5b60006018603c8061297e7f000000000000000000000000000000000000000000000000000000000000000042615510565b6129889190615592565b6129929190615592565b61299c9190615592565b6001546004549192506000916129b490600a90615592565b6129be9190615592565b9050600081116129cf5760016129d1565b805b3360009081526007602090815260408083208684529091529020549091508111612a0e576040516340b21b6d60e11b815260040160405180910390fd5b6001600160a01b0388166000908152600860205260409020548890889088908214801590612a3a575080155b15612a58576040516309ea00b960e01b815260040160405180910390fd5b60006018603c80612a897f000000000000000000000000000000000000000000000000000000000000000042615510565b612a939190615592565b612a9d9190615592565b612aa79190615592565b3360009081526007602090815260408083208484529091528120805492935090612ad083615539565b919050555089612b4f57612af260008051602061596b8339815191528d614757565b60048054600181019091557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b038e16908117909155600090815260086020526040812055612c26565b612b6760008051602061596b8339815191528d612ed4565b15612b8457612b8460008051602061596b8339815191528d6146e3565b6001600160a01b038c1660009081526008602052604081208190555b600454811015612c24578c6001600160a01b031660048281548110612bc757612bc7615523565b6000918252602090912001546001600160a01b031603612c125760048181548110612bf457612bf4615523565b600091825260209091200180546001600160a01b0319169055612c24565b80612c1c81615539565b915050612ba0565b505b505050505050505050505050565b600060008051602061596b833981519152612c4f8133614523565b600160005b8651811015612cd957848181518110612c6f57612c6f615523565b602002602001015180519060200120866001898481518110612c9357612c93615523565b6020026020010151612ca59190615510565b81518110612cb557612cb5615523565b602002602001015114612cc757600091505b80612cd181615539565b915050612c54565b5095945050505050565b60008051602061596b833981519152612cfc8133614523565b6000838152601460205260409020600601548390421080612d3c57506000818152601460205260409020600601544290612d3a906212750090615552565b105b15612d5a57604051630266984960e61b815260040160405180910390fd5b600084815260146020526040902054849060ff16612d8b57604051633f2151bd60e21b815260040160405180910390fd5b3360009081526018602090815260408083208884529091529020548590610100900460ff16612dcd57604051630e139ddb60e01b815260040160405180910390fd5b336000908152601860209081526040808320898452909152902054869060ff1615612e0b5760405163a61a461160e01b815260040160405180910390fd5b6000612e1788336137a0565b90508615612e4b5760008881526014602052604081206007018054839290612e40908490615552565b90915550612e729050565b60008881526014602052604081206008018054839290612e6c908490615552565b90915550505b6000888152601460205260408120600301805491612e8f83615539565b90915550503360009081526018602090815260408083209a835299905297909720805460ff1916600117905550505050505050565b60138181548110610f0957600080fd5b60009182526009602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6015602090815260009283526040808420909152908252902080546001820154600283018054929360ff808416946101008504909116936201000090046001600160a01b03169290612f50906155a6565b80601f0160208091040260200160405190810160405280929190818152602001828054612f7c906155a6565b8015612fc95780601f10612f9e57610100808354040283529160200191612fc9565b820191906000526020600020905b815481529060010190602001808311612fac57829003601f168201915b5050506003840154600485018054949560ff909216949193509150612fed906155a6565b80601f0160208091040260200160405190810160405280929190818152602001828054613019906155a6565b80156130665780601f1061303b57610100808354040283529160200191613066565b820191906000526020600020905b81548152906001019060200180831161304957829003601f168201915b50505050509080600501805461307b906155a6565b80601f01602080910402602001604051908101604052809291908181526020018280546130a7906155a6565b80156130f45780601f106130c9576101008083540402835291602001916130f4565b820191906000526020600020905b8154815290600101906020018083116130d757829003601f168201915b505050505090806006018054613109906155a6565b80601f0160208091040260200160405190810160405280929190818152602001828054613135906155a6565b80156131825780601f1061315757610100808354040283529160200191613182565b820191906000526020600020905b81548152906001019060200180831161316557829003601f168201915b5050505050905089565b6040805160208082019092526000905281519101207fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4701490565b60008051602061596b8339815191526131df8133614523565b606060008660010361328a576131f58633611635565b600087815260106020908152604091829020805483518184028101840190945280845293955061325c9386939283018282801561325157602002820191906000526020600020905b81548152602001906001019080831161323d575b505050505086612c34565b3360009081526018602090815260408083208a84529091529020805461ff00191661010017905590506133c8565b8660020361332b5761329d8686336140dc565b6000868152600e6020908152604091829020805483518184028101840190945280845293955061330293869392830182828015613251576020028201919060005260206000209081548152602001906001019080831161323d57505050505086612c34565b3360009081526019602090815260408220805460018101825590835291200186905590506133c8565b866003036133c85761333e86863361132c565b6000868152600f602090815260409182902080548351818402810184019094528084529395506133a393869392830182828015613251576020028201919060005260206000209081548152602001906001019080831161323d57505050505086612c34565b336000908152601a602090815260408220805460018101825590835291200186905590505b806113235760405162461bcd60e51b815260206004820152602760248201527f536f6d65206f6620796f75722070726f766964656420616e7377657273206172604482015266652077726f6e6760c81b60648201526084015b60405180910390fd5b600f60205281600052604060002081815481106117c057600080fd5b600e60205281600052604060002081815481106117c057600080fd5b60168181548110610f0957600080fd5b60008051602061592b83398151915261348b8133614523565b60008381526014602052604090206004015483906001600160a01b03166134c557604051636afad3d960e01b815260040160405180910390fd5b6000848152601460205260409020600901611961848261563b565b60008051602061592b8339815191526134f98133614523565b816000805b336000908152600560205260409020548110156135735733600090815260056020526040902080546001600160a01b03851691908390811061354257613542615523565b6000918252602090912001546001600160a01b03160361356157600191505b8061356b81615539565b9150506134fe565b508015613593576040516301624e0d60e21b815260040160405180910390fd5b33600090815260056020908152604080832080546001810182559084528284200180546001600160a01b0319166001600160a01b0389169081179091558352600690915281208054916135e583615539565b9091555050600154158061363457506136006032600a615565565b6001546001600160a01b038616600090815260066020526040902054613628906103e8615565565b6136329190615592565b115b1561379a576001600160a01b038416600090815260066020526040812080549161365d83615539565b919050555060005b600154811015613736576001600160a01b0385166000908152600560205260409020600180548390811061369b5761369b615523565b600091825260208083209091015483546001818101865594845291832090910180546001600160a01b0319166001600160a01b03909216919091179055815460069290849081106136ee576136ee615523565b60009182526020808320909101546001600160a01b03168352820192909252604001812080549161371e83615539565b9190505550808061372e90615539565b915050613665565b5061374f60008051602061592b83398151915285614757565b6001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0386161790555b50505050565b6001600160a01b03811660009081526019602052604081205460059082808080805b85811015613b155760008a81526015602090815260408083206001600160a01b038d1684526019909252822080548391908590811061380357613803615523565b6000918252602080832091909101548352828101939093526040918201902081516101208101835281548152600182015460ff8082161515958301959095526101008104909416151592810192909252620100009092046001600160a01b03166060820152600282018054919291608084019190613880906155a6565b80601f01602080910402602001604051908101604052809291908181526020018280546138ac906155a6565b80156138f95780601f106138ce576101008083540402835291602001916138f9565b820191906000526020600020905b8154815290600101906020018083116138dc57829003601f168201915b5050509183525050600382015460ff1615156020820152600482018054604090920191613925906155a6565b80601f0160208091040260200160405190810160405280929190818152602001828054613951906155a6565b801561399e5780601f106139735761010080835404028352916020019161399e565b820191906000526020600020905b81548152906001019060200180831161398157829003601f168201915b505050505081526020016005820180546139b7906155a6565b80601f01602080910402602001604051908101604052809291908181526020018280546139e3906155a6565b8015613a305780601f10613a0557610100808354040283529160200191613a30565b820191906000526020600020905b815481529060010190602001808311613a1357829003601f168201915b50505050508152602001600682018054613a49906155a6565b80601f0160208091040260200160405190810160405280929190818152602001828054613a75906155a6565b8015613ac25780601f10613a9757610100808354040283529160200191613ac2565b820191906000526020600020905b815481529060010190602001808311613aa557829003601f168201915b50505050508152505090508a816000015103613b02578060a0015115613af457613aed600187615552565b9550613b02565b613aff600186615552565b94505b5080613b0d81615539565b9150506137c2565b506001600160a01b0388166000908152601a6020526040812054905b81811015613e845760008b81526015602090815260408083206001600160a01b038e168452601a9092528220805483919085908110613b7257613b72615523565b6000918252602080832091909101548352828101939093526040918201902081516101208101835281548152600182015460ff8082161515958301959095526101008104909416151592810192909252620100009092046001600160a01b03166060820152600282018054919291608084019190613bef906155a6565b80601f0160208091040260200160405190810160405280929190818152602001828054613c1b906155a6565b8015613c685780601f10613c3d57610100808354040283529160200191613c68565b820191906000526020600020905b815481529060010190602001808311613c4b57829003601f168201915b5050509183525050600382015460ff1615156020820152600482018054604090920191613c94906155a6565b80601f0160208091040260200160405190810160405280929190818152602001828054613cc0906155a6565b8015613d0d5780601f10613ce257610100808354040283529160200191613d0d565b820191906000526020600020905b815481529060010190602001808311613cf057829003601f168201915b50505050508152602001600582018054613d26906155a6565b80601f0160208091040260200160405190810160405280929190818152602001828054613d52906155a6565b8015613d9f5780601f10613d7457610100808354040283529160200191613d9f565b820191906000526020600020905b815481529060010190602001808311613d8257829003601f168201915b50505050508152602001600682018054613db8906155a6565b80601f0160208091040260200160405190810160405280929190818152602001828054613de4906155a6565b8015613e315780601f10613e0657610100808354040283529160200191613e31565b820191906000526020600020905b815481529060010190602001808311613e1457829003601f168201915b50505050508152505090508b816000015103613e71578060a0015115613e6357613e5c600186615552565b9450613e71565b613e6e600185615552565b93505b5080613e7c81615539565b915050613b31565b50600084861115613ea057613e998587615510565b9050613ead565b613eaa8686615510565b90505b613eb8816005615565565b600282613ec5888a615552565b613ecf9190615510565b613ed99190615592565b613ee4906019615565565b613eee9190615552565b613ef89089615552565b9750600083851115613f1557613f0e8486615510565b9050613f22565b613f1f8585615510565b90505b613f2d816002615565565b600282613f3a8789615552565b613f449190615510565b613f4e9190615592565b613f5990600a615565565b613f639190615552565b613f6d908a615552565b9c9b505050505050505050505050565b60056020528160005260406000208181548110613f9957600080fd5b6000918252602090912001546001600160a01b03169150829050565b60008051602061594b833981519152613fce8133614523565b8133613fd982611e27565b60a001516001600160a01b03161461400457604051635e5c61fb60e01b815260040160405180910390fd5b82614010816001611153565b61402d57604051630a48771960e21b815260040160405180910390fd5b60003361403986611e27565b60600151604051600081818185875af1925050503d8060008114614079576040519150601f19603f3d011682016040523d82523d6000602084013e61407e565b606091505b505090508061408c57600080fd5b50505060009182525060146020526040812060020155565b600061179b8284612ed4565b601b8181548110610ebf57600080fd5b601960205281600052604060002081815481106117c057600080fd5b6000838152601560209081526040808320858452909152902060050180546060916114ab9161410a906155a6565b80601f0160208091040260200160405190810160405280929190818152602001828054614136906155a6565b80156141835780601f1061415857610100808354040283529160200191614183565b820191906000526020600020905b81548152906001019060200180831161416657829003601f168201915b50505060008881526015602090815260408083208a8452909152902060020180549092506141b191506155a6565b80601f01602080910402602001604051908101604052809291908181526020018280546141dd906155a6565b801561422a5780601f106141ff5761010080835404028352916020019161422a565b820191906000526020600020905b81548152906001019060200180831161420d57829003601f168201915b5050506000898152601460209081526040808320600601548b8452600e909252909120549092509050600587614578565b60008051602061594b8339815191526142748133614523565b3360009081526003602090815260408083205460128352818420888552909252909120548591116142b857604051631e3fcdc960e31b815260040160405180910390fd5b60004233866040516020016142cf9392919061584b565b60408051601f1981840301815282825280516020918201206101208401835289845260008483018181528585018281523360608801908152608088018d81528c151560a08a01528751808801895285815260c08a01528751808801895285815260e08a015287518088018952858152610100808b01919091528f86526015885288862087875290975296909320875181559151600183018054925194516001600160a01b0316620100000262010000600160b01b031995151590970261ff00199215159290921661ffff1990931692909217179290921693909317905591519193509060028201906143c1908261563b565b5060a082015160038201805460ff191691151591909117905560c082015160048201906143ee908261563b565b5060e08201516005820190614403908261563b565b506101008201516006820190614419908261563b565b505060178054600181019091557fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c150182905550336000908152601260209081526040808320898452909152812080549161447283615539565b9190505550505050505050565b60008051602061592b8339815191526144988133614523565b6000838152601460205260409020600901805484916144ba91611b75906155a6565b156144d85760405163121415cf60e01b815260040160405180910390fd5b82600a815110156144fc57604051639f14e9bf60e01b815260040160405180910390fd5b6000858152601060209081526040909120855161451b92870190614b86565b505050505050565b60008281526009602090815260408083206001600160a01b038516845290915290205460ff166124d55760405163043c588360e11b81526001600160a01b038216600482015260248101839052604401613421565b6060600087878460405160200161459193929190615884565b60408051601f1981840301815291905280516020909101209050846000856001600160401b038111156145c6576145c6614c8c565b6040519080825280602002602001820160405280156145ef578160200160208202803683370190505b5090506000806145ff848b6158ca565b90505b878210156146d35760008486836020811061461f5761461f615523565b61462b9291901a6158ca565b614636906001615552565b905060005b8185828151811061464e5761464e615523565b60200260200101510361467e578161466581615539565b925050600090508582111561467957600191505b61468c565b8061468881615539565b9150505b83811061463b57818585815181106146a6576146a6615523565b6020908102919091010152836146bb81615539565b945050505080806146cb90615539565b915050614602565b50909a9950505050505050505050565b6146ed8282614523565b60008281526009602090815260408083206001600160a01b038516845290915290819020805460ff19169055517ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9061474b908490849033906158de565b60405180910390a15050565b60008281526009602090815260408083206001600160a01b038516845290915290819020805460ff19166001179055517f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9061474b908490849033906158de565b60005b6001600160a01b038316600090815260056020526040902054811015614b1c576001600160a01b0383811660009081526005602052604090208054918416918390811061480a5761480a615523565b6000918252602090912001546001600160a01b031603614b0a576001600160a01b038316600090815260056020526040902080548290811061484e5761484e615523565b6000918252602080832090910180546001600160a01b03191690556001600160a01b03841682526006905260408120805491614889836158fd565b9091555061489b90506032600a615565565b6001546001600160a01b0384166000908152600660205260409020546148c3906103e8615565565b6148cd9190615592565b1015614b0a576001600160a01b03821660009081526006602052604081208054916148f7836158fd565b919050555061491460008051602061592b833981519152836146e3565b60005b600154811015614a4757826001600160a01b03166001828154811061493e5761493e615523565b6000918252602090912001546001600160a01b031603614a35576001818154811061496b5761496b615523565b600091825260209091200180546001600160a01b031916905560018054614993908290615510565b815481106149a3576149a3615523565b600091825260209091200154600180546001600160a01b0390921691839081106149cf576149cf615523565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506001805480614a0e57614a0e615914565b600082815260209020810160001990810180546001600160a01b0319169055019055614a47565b80614a3f81615539565b915050614917565b5060005b6001600160a01b03831660009081526005602052604090205481101561379a576001600160a01b03831660009081526005602052604090208054614ab591859184908110614a9b57614a9b615523565b6000918252602090912001546001600160a01b03166147b8565b6001600160a01b0383166000908152600560205260409020805482908110614adf57614adf615523565b600091825260209091200180546001600160a01b031916905580614b0281615539565b915050614a4b565b80614b1481615539565b9150506147bb565b505050565b828054828255906000526020600020908101928215614b76579160200282015b82811115614b7657825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190614b41565b50614b82929150614bc1565b5090565b828054828255906000526020600020908101928215614b76579160200282015b82811115614b76578251825591602001919060010190614ba6565b5b80821115614b825760008155600101614bc2565b600060208284031215614be857600080fd5b5035919050565b80356001600160a01b0381168114614c0657600080fd5b919050565b60008060408385031215614c1e57600080fd5b614c2783614bef565b946020939093013593505050565b600060208284031215614c4757600080fd5b61179b82614bef565b80358015158114614c0657600080fd5b60008060408385031215614c7357600080fd5b82359150614c8360208401614c50565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715614cca57614cca614c8c565b604052919050565b600082601f830112614ce357600080fd5b81356001600160401b03811115614cfc57614cfc614c8c565b614d0f601f8201601f1916602001614ca2565b818152846020838601011115614d2457600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060808587031215614d5757600080fd5b843593506020850135925060408501356001600160401b03811115614d7b57600080fd5b614d8787828801614cd2565b925050614d9660608601614c50565b905092959194509250565b600080600060608486031215614db657600080fd5b8335925060208401359150614dcd60408501614bef565b90509250925092565b6020808252825182820181905260009190848201906040850190845b81811015614e0e57835183529284019291840191600101614df2565b50909695505050505050565b60005b83811015614e35578181015183820152602001614e1d565b50506000910152565b60008151808452614e56816020860160208601614e1a565b601f01601f19169290920160200192915050565b60006101608d151583528c151560208401528b60408401528a606084015289608084015260018060a01b03891660a08401528060c0840152614eae81840189614e3e565b90508660e08401528561010084015284610120840152828103610140840152614ed78185614e3e565b9e9d5050505050505050505050505050565b60008060408385031215614efc57600080fd5b82359150614c8360208401614bef565b60008060408385031215614f1f57600080fd5b50508035926020909101359150565b600080600060608486031215614f4357600080fd5b833592506020840135915060408401356001600160401b03811115614f6757600080fd5b614f7386828701614cd2565b9150509250925092565b60006001600160401b03821115614f9657614f96614c8c565b5060051b60200190565b600082601f830112614fb157600080fd5b81356020614fc6614fc183614f7d565b614ca2565b82815260059290921b84018101918181019086841115614fe557600080fd5b8286015b848110156150005780358352918301918301614fe9565b509695505050505050565b60008060006060848603121561502057600080fd5b833592506020840135915060408401356001600160401b0381111561504457600080fd5b614f7386828701614fa0565b6020815261506360208201835115159052565b60006020830151615078604084018215159052565b506040830151606083015260608301516080830152608083015160a083015260a08301516150b160c08401826001600160a01b03169052565b5060c08301516101608060e08501526150ce610180850183614e3e565b60e0860151610100868101919091528601516101208087019190915286015161014080870191909152860151858203601f1901838701529092506151128382614e3e565b9695505050505050565b6000806000806060858703121561513257600080fd5b84356001600160401b038082111561514957600080fd5b818701915087601f83011261515d57600080fd5b81358181111561516c57600080fd5b88602082850101111561517e57600080fd5b6020928301999098509187013596604001359550909350505050565b6000806000606084860312156151af57600080fd5b6151b884614bef565b925060208401359150614dcd60408501614c50565b600082601f8301126151de57600080fd5b813560206151ee614fc183614f7d565b82815260059290921b8401810191818101908684111561520d57600080fd5b8286015b848110156150005780356001600160401b038111156152305760008081fd5b61523e8986838b0101614cd2565b845250918301918301615211565b60008060006060848603121561526157600080fd5b83356001600160401b038082111561527857600080fd5b818601915086601f83011261528c57600080fd5b8135602061529c614fc183614f7d565b82815260059290921b8401810191818101908a8411156152bb57600080fd5b948201945b838610156152d9578535825294820194908201906152c0565b975050870135925050808211156152ef57600080fd5b6152fb87838801614fa0565b9350604086013591508082111561531157600080fd5b50614f73868287016151cd565b898152881515602082015287151560408201526001600160a01b03871660608201526101206080820181905260009061535983820189614e3e565b905086151560a084015282810360c08401526153758187614e3e565b905082810360e08401526153898186614e3e565b9050828103610100840152613f6d8185614e3e565b6000602082840312156153b057600080fd5b81356001600160401b038111156153c657600080fd5b6114ab84828501614cd2565b600080600080608085870312156153e857600080fd5b84359350602085013592506040850135915060608501356001600160401b0381111561541357600080fd5b61541f878288016151cd565b91505092959194509250565b6000806040838503121561543e57600080fd5b8235915060208301356001600160401b0381111561545b57600080fd5b61546785828601614cd2565b9150509250929050565b60008060006060848603121561548657600080fd5b8335925060208401356001600160401b038111156154a357600080fd5b6154af86828701614cd2565b925050614dcd60408501614c50565b600080604083850312156154d157600080fd5b8235915060208301356001600160401b038111156154ee57600080fd5b61546785828601614fa0565b634e487b7160e01b600052601160045260246000fd5b8181038181111561179e5761179e6154fa565b634e487b7160e01b600052603260045260246000fd5b60006001820161554b5761554b6154fa565b5060010190565b8082018082111561179e5761179e6154fa565b808202811582820484141761179e5761179e6154fa565b634e487b7160e01b600052601260045260246000fd5b6000826155a1576155a161557c565b500490565b600181811c908216806155ba57607f821691505b6020821081036155da57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115614b1c57600081815260208120601f850160051c810160208610156156075750805b601f850160051c820191505b8181101561451b57828155600101615613565b600019600383901b1c191660019190911b1790565b81516001600160401b0381111561565457615654614c8c565b6156688161566284546155a6565b846155e0565b602080601f83116001811461569757600084156156855750858301515b61568f8582615626565b86555061451b565b600085815260208120601f198616915b828110156156c6578886015182559484019460019091019084016156a7565b50858210156156e45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600063ffffffff80831681810361570d5761570d6154fa565b6001019392505050565b63ffffffff828116828216039080821115615734576157346154fa565b5092915050565b63ffffffff81811683821602808216919082811461575b5761575b6154fa565b505092915050565b848152606084901b6001600160601b031916602082015281836034830137600091016034019081529392505050565b6001600160401b038311156157a9576157a9614c8c565b6157bd836157b783546155a6565b836155e0565b6000601f8411600181146157eb57600085156157d95750838201355b6157e38682615626565b845550611961565b600083815260209020601f19861690835b8281101561581c57868501358255602094850194600190920191016157fc565b50868210156158395760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b83815260018060601b03198360601b16602082015260008251615875816034850160208701614e1a565b91909101603401949350505050565b60008451615896818460208901614e1a565b8451908301906158aa818360208901614e1a565b60609490941b6001600160601b0319169301928352505060140192915050565b6000826158d9576158d961557c565b500690565b9283526001600160a01b03918216602084015216604082015260600190565b60008161590c5761590c6154fa565b506000190190565b634e487b7160e01b600052603160045260246000fdfeb346b2ddc13f08bd9685b83a95304a79a2caac0aa7aa64129e1ae9f4361b46619f70d138cbbd87297896478196b4493d9dceaca01f5883ecbd7bee66d300348d313691be6e710b5e9c97c695d02c9e24926f986402f826152f3b2970694f72c9a2646970667358221220a1c14e0ca89117fdf2952829728c75d5f6de05d94372edd4358568654952970064736f6c63430008130033",
  "devdoc": {
    "author": "Márton Sándor Horváth, email: hmartonsandor{@}gmail.com",
    "kind": "dev",
    "methods": {},
    "title": "Balanced Voting System: Voting contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "@dev",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 26,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "citizenRoleApplicationFee",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 29,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "admins",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 32,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "politicalActors",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 36,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "politicalActorVotingCredits",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 39,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "citizens",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 46,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "adminApprovalSentToAccount",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 50,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "adminRoleGrantApprovals",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 56,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "dailyCitizenRoleModifyCredit",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 60,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "citizenshipApplications",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_bytes32)"
      },
      {
        "astId": 66,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "_hasRole",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 896,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "firstVotingCycleStartDate",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 899,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "electionsCandidateApplicationFee",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 901,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "electionsStartDate",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 903,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "electionsEndDate",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      },
      {
        "astId": 955,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "articleContentReadCheckAnswers",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)"
      },
      {
        "astId": 960,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "articleContentResponseReadCheckAnswers",
        "offset": 0,
        "slot": "15",
        "type": "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)"
      },
      {
        "astId": 965,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "votingContentReadCheckAnswers",
        "offset": 0,
        "slot": "16",
        "type": "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)"
      },
      {
        "astId": 971,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "votingCycleStartVoteCount",
        "offset": 0,
        "slot": "17",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 977,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "publishArticleToVotingsCount",
        "offset": 0,
        "slot": "18",
        "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))"
      },
      {
        "astId": 980,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "votingCycleIndexes",
        "offset": 0,
        "slot": "19",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 985,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "votings",
        "offset": 0,
        "slot": "20",
        "type": "t_mapping(t_bytes32,t_struct(Voting)945_storage)"
      },
      {
        "astId": 992,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "proConArticles",
        "offset": 0,
        "slot": "21",
        "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_struct(ProConArticle)922_storage))"
      },
      {
        "astId": 995,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "votingKeys",
        "offset": 0,
        "slot": "22",
        "type": "t_array(t_bytes32)dyn_storage"
      },
      {
        "astId": 998,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "articleKeys",
        "offset": 0,
        "slot": "23",
        "type": "t_array(t_bytes32)dyn_storage"
      },
      {
        "astId": 1005,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "votes",
        "offset": 0,
        "slot": "24",
        "type": "t_mapping(t_address,t_mapping(t_bytes32,t_struct(Vote)950_storage))"
      },
      {
        "astId": 1010,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "articlesCompleted",
        "offset": 0,
        "slot": "25",
        "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)"
      },
      {
        "astId": 1015,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "articlesResponseCompleted",
        "offset": 0,
        "slot": "26",
        "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)"
      },
      {
        "astId": 1018,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "electionCandidates",
        "offset": 0,
        "slot": "27",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 1022,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "electionCandidateScores",
        "offset": 0,
        "slot": "28",
        "type": "t_mapping(t_address,t_uint32)"
      },
      {
        "astId": 1026,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "electionVotes",
        "offset": 0,
        "slot": "29",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 1029,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "electionVoters",
        "offset": 0,
        "slot": "30",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bytes32[])",
        "numberOfBytes": "32",
        "value": "t_array(t_bytes32)dyn_storage"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_bytes32)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bytes32)",
        "numberOfBytes": "32",
        "value": "t_bytes32"
      },
      "t_mapping(t_address,t_mapping(t_bytes32,t_struct(Vote)950_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes32 => struct BVS_Voting.Vote))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_struct(Vote)950_storage)"
      },
      "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes32 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_uint256)"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_address,t_uint32)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint32)",
        "numberOfBytes": "32",
        "value": "t_uint32"
      },
      "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bytes32[])",
        "numberOfBytes": "32",
        "value": "t_array(t_bytes32)dyn_storage"
      },
      "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_bytes32,t_mapping(t_bytes32,t_struct(ProConArticle)922_storage))": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => mapping(bytes32 => struct BVS_Voting.ProConArticle))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_struct(ProConArticle)922_storage)"
      },
      "t_mapping(t_bytes32,t_struct(ProConArticle)922_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct BVS_Voting.ProConArticle)",
        "numberOfBytes": "32",
        "value": "t_struct(ProConArticle)922_storage"
      },
      "t_mapping(t_bytes32,t_struct(Vote)950_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct BVS_Voting.Vote)",
        "numberOfBytes": "32",
        "value": "t_struct(Vote)950_storage"
      },
      "t_mapping(t_bytes32,t_struct(Voting)945_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct BVS_Voting.Voting)",
        "numberOfBytes": "32",
        "value": "t_struct(Voting)945_storage"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(ProConArticle)922_storage": {
        "encoding": "inplace",
        "label": "struct BVS_Voting.ProConArticle",
        "members": [
          {
            "astId": 905,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "votingKey",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 907,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "isArticleApproved",
            "offset": 0,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 909,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "isResponseApproved",
            "offset": 1,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 911,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "publisher",
            "offset": 2,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 913,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "articleIpfsHash",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 915,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "isVoteOnA",
            "offset": 0,
            "slot": "3",
            "type": "t_bool"
          },
          {
            "astId": 917,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "responseStatementIpfsHash",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 919,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "articleContentCheckQuizIpfsHash",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          },
          {
            "astId": 921,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "responseContentCheckQuizIpfsHash",
            "offset": 0,
            "slot": "6",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(Vote)950_storage": {
        "encoding": "inplace",
        "label": "struct BVS_Voting.Vote",
        "members": [
          {
            "astId": 947,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "voted",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 949,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "isContentCompleted",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(Voting)945_storage": {
        "encoding": "inplace",
        "label": "struct BVS_Voting.Voting",
        "members": [
          {
            "astId": 924,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "approved",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 926,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "cancelled",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 928,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "key",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          },
          {
            "astId": 930,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "budget",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 932,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "voteCount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 934,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "creator",
            "offset": 0,
            "slot": "4",
            "type": "t_address"
          },
          {
            "astId": 936,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "contentIpfsHash",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          },
          {
            "astId": 938,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "startDate",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 940,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "voteOnAScore",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 942,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "voteOnBScore",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 944,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "votingContentCheckQuizIpfsHash",
            "offset": 0,
            "slot": "9",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}