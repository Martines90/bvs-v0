{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AccountAlreadyAppliedForElections",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AccountAlreadyVoted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AccountCantVoteOnItself",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AccountRanOutOfVotingCreditsForThisVotingCycle",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AdminRoleGrantApprovalAlreadySent",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AlreadyVotedOnThisVoting",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ArticleNotExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ArticleNotRelatedToYourVoting",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CantStartNewVointg10daysOrLessBeforeEndOfCycle",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CitizenRoleAlreadyGranted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CitizenRoleAlreadyRevokedOrNotGranted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ContentCheckIpfsNotAssigned",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ElectionStartDateHasToBe30DaysAhead",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ElectionsAlreadyClosedOrNotYetScheduled",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ElectionsAlreadyFinished",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ElectionsCanOnlyClose7DaysAfterTheirEndDate",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ElectionsNotScheduledOrAlreadyStarted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FirstVotingCycleStartDateHasToBeInTheFuture",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MinimumApplicationFeeNotCovered",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NewVotingHasToBeScheduled10DaysAhead",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NewVotingHasToBeScheduledLessThan30daysAhead",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoArticleContentCheckIpfsAssignedToThisArticle",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoArticleResponseAssigned",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoArticleResponseContentCheckIpfsAssigned",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoEnoughContentReadQuizAnswerAdded",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoEnoughVotesReceived",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoMorePublishArticleCreditsRelatedToThisVoting",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoOngoingVotingPeriod",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotAppliedForCitizenRole",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "PermissionsUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RunOutOfDailyCitizenRoleGrantCredit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ThereIsAnOngoingElections",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ThereIsNoOngoingElections",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VoteOnAccountNotBelongToAnyCandidate",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VotingAlreadyStarted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VotingCanBeApproved3DaysOrLessBeforeItsStart",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VotingContentCheckQuizNotAssigned",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VotingContentCheckQuizNotCompleted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VotingDidNotWon",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VotingNotApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VotingNotBelongsToSender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VotingNotExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VotingNotFinished",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VotingNotYetStartedOrAlreadyFinished",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VotingOwnerNotRespondedOnAllArticles",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        }
      ],
      "name": "CitizenshipRoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "executer",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "executer",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ADMINISTRATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "APPROVE_VOTING_BEFORE_IT_STARTS_LIMIT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ARTICLE_CHECK_ASKED_NUM_OF_QUESTIONS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ARTICLE_RESPONSE_CHECK_ASKED_NUM_OF_QUESTIONS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CITIZEN",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ELECTION_START_END_INTERVAL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_DAILY_NEW_CITIZENS_CAN_ADD_PERCENTAGE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINIMUM_PERCENTAGE_OF_ELECTION_VOTES",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_PERCENTAGE_GRANT_ADMIN_APPROVALS_REQUIRED",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_PERCENTAGE_OF_VOTES",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_TOTAL_CONTENT_READ_CHECK_ANSWER",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_VOTE_SCORE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NEW_VOTING_PERIOD_MIN_SCHEDULE_AHEAD_TIME",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "POLITICAL_ACTOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VOTING_CHECK_ASKED_NUM_OF_QUESTIONS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VOTING_CYCLE_INTERVAL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VOTING_DURATION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_articleKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "_keccak256HashedAnswers",
          "type": "bytes32[]"
        }
      ],
      "name": "addKeccak256HashedAnswersToArticle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_articleKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "_keccak256HashedAnswers",
          "type": "bytes32[]"
        }
      ],
      "name": "addKeccak256HashedAnswersToArticleResponse",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "_keccak256HashedAnswers",
          "type": "bytes32[]"
        }
      ],
      "name": "addKeccak256HashedAnswersToVotingContent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "adminApprovalSentToAccount",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "adminRoleGrantApprovals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "admins",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_emailAddress",
          "type": "string"
        }
      ],
      "name": "applyForCitizenshipRole",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "applyForElections",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        }
      ],
      "name": "approveVoting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "articleContentReadCheckAnswers",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "articleContentResponseReadCheckAnswers",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "articleKeys",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "articlesCompleted",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "articlesResponseCompleted",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_articleKey",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_quizIpfsHash",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "assignToArticleContent",
          "type": "bool"
        }
      ],
      "name": "assignQuizIpfsHashToArticleOrResponse",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_quizIpfsHash",
          "type": "string"
        }
      ],
      "name": "assignQuizIpfsHashToVoting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "calculateVoteScore",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_role",
          "type": "bytes32"
        }
      ],
      "name": "checkIfAccounthasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "citizenRoleApplicationFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "citizens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "citizenshipApplications",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closeElections",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "contentType",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_articleKey",
          "type": "bytes32"
        },
        {
          "internalType": "string[]",
          "name": "_answers",
          "type": "string[]"
        }
      ],
      "name": "completeContentReadQuiz",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creationDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dailyCitizenRoleModifyCredit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "electionCandidateScores",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "electionCandidates",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "electionVoters",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "electionVotes",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "electionsCandidateApplicationFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "electionsEndDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "electionsStartDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "firstVotingCycleStartDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_articleKey",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getAccountArticleQuizAnswerIndexes",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_articleKey",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getAccountArticleResponseQuizAnswerIndexes",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getAccountVotingQuizAnswerIndexes",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdminsSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getArticleKeysLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCitizensSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getElectionCandidatesSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getElectionVotersSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPoliticalActorsSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVotinCycleIndexesSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        }
      ],
      "name": "getVoting",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "cancelled",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "key",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "budget",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "voteCount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "contentIpfsHash",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "voteOnAScore",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "voteOnBScore",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "votingContentCheckQuizIpfsHash",
              "type": "string"
            }
          ],
          "internalType": "struct BVS_Voting.Voting",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVotingKeysLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_revokeCitizenRole",
          "type": "bool"
        }
      ],
      "name": "grantCitizenRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_answerIndexes",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "_readCheckAnswers",
          "type": "bytes32[]"
        },
        {
          "internalType": "string[]",
          "name": "_answers",
          "type": "string[]"
        }
      ],
      "name": "isContentReadQuizCorrect",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_string",
          "type": "string"
        }
      ],
      "name": "isEmptyString",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "_isAWinExpected",
          "type": "bool"
        }
      ],
      "name": "isVotingWon",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "politicalActorVotingCredits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "politicalActors",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "proConArticles",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "isArticleApproved",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isResponseApproved",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "publisher",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "articleIpfsHash",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "isVoteOnA",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "responseStatementIpfsHash",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "articleContentCheckQuizIpfsHash",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "responseContentCheckQuizIpfsHash",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "publishArticleToVotingsCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_ipfsHash",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_isVoteOnA",
          "type": "bool"
        }
      ],
      "name": "publishProConArticle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_proConArticleKey",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_ipfsHash",
          "type": "string"
        }
      ],
      "name": "publishProConArticleResponse",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "revokedAccount",
          "type": "address"
        }
      ],
      "name": "revokeAdminRoleApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_contentIpfsHash",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_startDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_budget",
          "type": "uint256"
        }
      ],
      "name": "scheduleNewVoting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_electionsStartDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_electionsEndDate",
          "type": "uint256"
        }
      ],
      "name": "scheduleNextElections",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "sendGrantAdministratorRoleApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_firstVotingCycleStartDate",
          "type": "uint256"
        }
      ],
      "name": "setFirstVotingCycleStartDate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        }
      ],
      "name": "unlockVotingBudget",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "updateCitizenshipRoleApplicationFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "voteOnAddress",
          "type": "address"
        }
      ],
      "name": "voteOnElections",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "_voteOnA",
          "type": "bool"
        }
      ],
      "name": "voteOnVoting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "votes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "voted",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isContentCompleted",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "votingContentReadCheckAnswers",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "votingCycleIndexes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "votingCycleStartVoteCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "votingKeys",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "votings",
      "outputs": [
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "cancelled",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "budget",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "voteCount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contentIpfsHash",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "startDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "voteOnAScore",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "voteOnBScore",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "votingContentCheckQuizIpfsHash",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x23e0f9cfa046f0660dde6d36f8ffa9979e1936d80503f448c4e01b2bdc1dacda",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "5238205",
    "logsBloom": "0x
    "blockHash": "0xcede0e6e21896fc48f2b6b4e6e0d792347d5c09f9d3eb7bc45bf990ecd733270",
    "transactionHash": "0x23e0f9cfa046f0660dde6d36f8ffa9979e1936d80503f448c4e01b2bdc1dacda",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 1,
        "transactionHash": "0x23e0f9cfa046f0660dde6d36f8ffa9979e1936d80503f448c4e01b2bdc1dacda",
        "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d"
        ],
        "data": "0xb346b2ddc13f08bd9685b83a95304a79a2caac0aa7aa64129e1ae9f4361b4661000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266",
        "logIndex": 0,
        "blockHash": "0xcede0e6e21896fc48f2b6b4e6e0d792347d5c09f9d3eb7bc45bf990ecd733270"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 1,
        "transactionHash": "0x23e0f9cfa046f0660dde6d36f8ffa9979e1936d80503f448c4e01b2bdc1dacda",
        "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d"
        ],
        "data": "0x313691be6e710b5e9c97c695d02c9e24926f986402f826152f3b2970694f72c9000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266",
        "logIndex": 1,
        "blockHash": "0xcede0e6e21896fc48f2b6b4e6e0d792347d5c09f9d3eb7bc45bf990ecd733270"
      }
    ],
    "blockNumber": 1,
    "cumulativeGasUsed": "5238205",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "1521ad82d06c7b006312796de4076354",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccountAlreadyAppliedForElections\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AccountAlreadyVoted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AccountCantVoteOnItself\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AccountRanOutOfVotingCreditsForThisVotingCycle\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AdminRoleGrantApprovalAlreadySent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyVotedOnThisVoting\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ArticleNotExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ArticleNotRelatedToYourVoting\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CantStartNewVointg10daysOrLessBeforeEndOfCycle\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CitizenRoleAlreadyGranted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CitizenRoleAlreadyRevokedOrNotGranted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ContentCheckIpfsNotAssigned\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ElectionStartDateHasToBe30DaysAhead\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ElectionsAlreadyClosedOrNotYetScheduled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ElectionsAlreadyFinished\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ElectionsCanOnlyClose7DaysAfterTheirEndDate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ElectionsNotScheduledOrAlreadyStarted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FirstVotingCycleStartDateHasToBeInTheFuture\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MinimumApplicationFeeNotCovered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NewVotingHasToBeScheduled10DaysAhead\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NewVotingHasToBeScheduledLessThan30daysAhead\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoArticleContentCheckIpfsAssignedToThisArticle\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoArticleResponseAssigned\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoArticleResponseContentCheckIpfsAssigned\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoEnoughContentReadQuizAnswerAdded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoEnoughVotesReceived\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoMorePublishArticleCreditsRelatedToThisVoting\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoOngoingVotingPeriod\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAppliedForCitizenRole\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"PermissionsUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RunOutOfDailyCitizenRoleGrantCredit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ThereIsAnOngoingElections\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ThereIsNoOngoingElections\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VoteOnAccountNotBelongToAnyCandidate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingAlreadyStarted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingCanBeApproved3DaysOrLessBeforeItsStart\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingContentCheckQuizNotAssigned\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingContentCheckQuizNotCompleted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingDidNotWon\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingNotApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingNotBelongsToSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingNotExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingNotFinished\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingNotYetStartedOrAlreadyFinished\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingOwnerNotRespondedOnAllArticles\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"CitizenshipRoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"executer\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"executer\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMINISTRATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"APPROVE_VOTING_BEFORE_IT_STARTS_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ARTICLE_CHECK_ASKED_NUM_OF_QUESTIONS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ARTICLE_RESPONSE_CHECK_ASKED_NUM_OF_QUESTIONS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CITIZEN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ELECTION_START_END_INTERVAL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_DAILY_NEW_CITIZENS_CAN_ADD_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_PERCENTAGE_OF_ELECTION_VOTES\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_PERCENTAGE_GRANT_ADMIN_APPROVALS_REQUIRED\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_PERCENTAGE_OF_VOTES\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_TOTAL_CONTENT_READ_CHECK_ANSWER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_VOTE_SCORE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NEW_VOTING_PERIOD_MIN_SCHEDULE_AHEAD_TIME\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POLITICAL_ACTOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VOTING_CHECK_ASKED_NUM_OF_QUESTIONS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VOTING_CYCLE_INTERVAL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VOTING_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_articleKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"_keccak256HashedAnswers\",\"type\":\"bytes32[]\"}],\"name\":\"addKeccak256HashedAnswersToArticle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_articleKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"_keccak256HashedAnswers\",\"type\":\"bytes32[]\"}],\"name\":\"addKeccak256HashedAnswersToArticleResponse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"_keccak256HashedAnswers\",\"type\":\"bytes32[]\"}],\"name\":\"addKeccak256HashedAnswersToVotingContent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"adminApprovalSentToAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"adminRoleGrantApprovals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_emailAddress\",\"type\":\"string\"}],\"name\":\"applyForCitizenshipRole\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"applyForElections\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"}],\"name\":\"approveVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"articleContentReadCheckAnswers\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"articleContentResponseReadCheckAnswers\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"articleKeys\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"articlesCompleted\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"articlesResponseCompleted\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_articleKey\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_quizIpfsHash\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"assignToArticleContent\",\"type\":\"bool\"}],\"name\":\"assignQuizIpfsHashToArticleOrResponse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_quizIpfsHash\",\"type\":\"string\"}],\"name\":\"assignQuizIpfsHashToVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"calculateVoteScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_role\",\"type\":\"bytes32\"}],\"name\":\"checkIfAccounthasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"citizenRoleApplicationFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"citizens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"citizenshipApplications\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closeElections\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"contentType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_articleKey\",\"type\":\"bytes32\"},{\"internalType\":\"string[]\",\"name\":\"_answers\",\"type\":\"string[]\"}],\"name\":\"completeContentReadQuiz\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creationDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dailyCitizenRoleModifyCredit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"electionCandidateScores\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"electionCandidates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"electionVoters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"electionVotes\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"electionsCandidateApplicationFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"electionsEndDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"electionsStartDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"firstVotingCycleStartDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_articleKey\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getAccountArticleQuizAnswerIndexes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_articleKey\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getAccountArticleResponseQuizAnswerIndexes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getAccountVotingQuizAnswerIndexes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdminsSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getArticleKeysLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCitizensSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getElectionCandidatesSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getElectionVotersSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoliticalActorsSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVotinCycleIndexesSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"}],\"name\":\"getVoting\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"cancelled\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"budget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentIpfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voteOnAScore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voteOnBScore\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"votingContentCheckQuizIpfsHash\",\"type\":\"string\"}],\"internalType\":\"struct BVS_Voting.Voting\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVotingKeysLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_revokeCitizenRole\",\"type\":\"bool\"}],\"name\":\"grantCitizenRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_answerIndexes\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"_readCheckAnswers\",\"type\":\"bytes32[]\"},{\"internalType\":\"string[]\",\"name\":\"_answers\",\"type\":\"string[]\"}],\"name\":\"isContentReadQuizCorrect\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_string\",\"type\":\"string\"}],\"name\":\"isEmptyString\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"_isAWinExpected\",\"type\":\"bool\"}],\"name\":\"isVotingWon\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"politicalActorVotingCredits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"politicalActors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"proConArticles\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isArticleApproved\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isResponseApproved\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"publisher\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"articleIpfsHash\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isVoteOnA\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"responseStatementIpfsHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"articleContentCheckQuizIpfsHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"responseContentCheckQuizIpfsHash\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"publishArticleToVotingsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"_isVoteOnA\",\"type\":\"bool\"}],\"name\":\"publishProConArticle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_proConArticleKey\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"}],\"name\":\"publishProConArticleResponse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"revokedAccount\",\"type\":\"address\"}],\"name\":\"revokeAdminRoleApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_contentIpfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_budget\",\"type\":\"uint256\"}],\"name\":\"scheduleNewVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_electionsStartDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_electionsEndDate\",\"type\":\"uint256\"}],\"name\":\"scheduleNextElections\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"sendGrantAdministratorRoleApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_firstVotingCycleStartDate\",\"type\":\"uint256\"}],\"name\":\"setFirstVotingCycleStartDate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"}],\"name\":\"unlockVotingBudget\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"updateCitizenshipRoleApplicationFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voteOnAddress\",\"type\":\"address\"}],\"name\":\"voteOnElections\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"_voteOnA\",\"type\":\"bool\"}],\"name\":\"voteOnVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"votes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"voted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isContentCompleted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"votingContentReadCheckAnswers\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"votingCycleIndexes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"votingCycleStartVoteCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"votingKeys\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"votings\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"cancelled\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"budget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentIpfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voteOnAScore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voteOnBScore\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"votingContentCheckQuizIpfsHash\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"M\\u00e1rton S\\u00e1ndor Horv\\u00e1th, email: hmartonsandor{@}gmail.com\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Balanced Voting System: Voting contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"@dev\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BVS_Voting.sol\":\"BVS_Voting\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/BVS_Roles.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// pragma\\npragma solidity ^0.8.9;\\n\\n/**\\n * @title Balanced Voting System:Roles - contract\\n * @author M\\u00e1rton S\\u00e1ndor Horv\\u00e1th, email: hmartonsandor{@}gmail.com\\n * @notice\\n * @dev\\n */\\n\\ncontract BVS_Roles {\\n    uint public constant MIN_PERCENTAGE_GRANT_ADMIN_APPROVALS_REQUIRED = 50;\\n    uint public constant MAX_DAILY_NEW_CITIZENS_CAN_ADD_PERCENTAGE = 10;\\n\\n    bytes32 public constant ADMINISTRATOR = keccak256(\\\"ADMINISTRATOR\\\");\\n    bytes32 public constant POLITICAL_ACTOR = keccak256(\\\"POLITICAL_ACTOR\\\");\\n    bytes32 public constant CITIZEN = keccak256(\\\"CITIZEN\\\");\\n\\n    uint public citizenRoleApplicationFee = 10000;\\n\\n    address[] public admins;\\n    address[] public politicalActors;\\n    mapping(address => uint) public politicalActorVotingCredits;\\n    address[] public citizens;\\n\\n    uint public immutable creationDate;\\n\\n    mapping(address => address[]) public adminApprovalSentToAccount;\\n    mapping(address => uint) public adminRoleGrantApprovals;\\n\\n    mapping(address => mapping(uint => uint))\\n        public dailyCitizenRoleModifyCredit;\\n\\n    mapping(address => string) public citizenshipApplications;\\n\\n    mapping(bytes32 => mapping(address => bool)) private _hasRole;\\n\\n    // Events\\n\\n    event RoleGranted(bytes32 role, address account, address executer);\\n\\n    event RoleRevoked(bytes32 role, address account, address executer);\\n\\n    // Errors\\n    error CitizenRoleAlreadyGranted();\\n    error CitizenRoleAlreadyRevokedOrNotGranted();\\n    error NotAppliedForCitizenRole();\\n    error RunOutOfDailyCitizenRoleGrantCredit();\\n    error AdminRoleGrantApprovalAlreadySent();\\n\\n    error MinimumApplicationFeeNotCovered();\\n\\n    error PermissionsUnauthorizedAccount(address account, bytes32 role);\\n\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role, msg.sender);\\n        _;\\n    }\\n\\n    modifier minCitizenshipApplicationFeeCovered() {\\n        if (msg.value < citizenRoleApplicationFee) {\\n            revert MinimumApplicationFeeNotCovered();\\n        }\\n        _;\\n    }\\n\\n    modifier appliedForCitizenRole(address _account) {\\n        if (isEmptyString(citizenshipApplications[_account])) {\\n            revert NotAppliedForCitizenRole();\\n        }\\n        _;\\n    }\\n\\n    modifier hasRoleToModify(address _account, bool isRevoke) {\\n        if (!isRevoke && hasRole(CITIZEN, _account))\\n            revert CitizenRoleAlreadyGranted();\\n        if (isRevoke && !hasRole(CITIZEN, _account))\\n            revert CitizenRoleAlreadyRevokedOrNotGranted();\\n        _;\\n    }\\n\\n    modifier hasCitizenRoleGrantCredit() {\\n        uint daysPassed = (block.timestamp - creationDate) / 60 / 60 / 24;\\n\\n        uint maxCitizensCanBeAddPerAdmin = (citizens.length /\\n            MAX_DAILY_NEW_CITIZENS_CAN_ADD_PERCENTAGE) / admins.length;\\n        maxCitizensCanBeAddPerAdmin = maxCitizensCanBeAddPerAdmin > 0\\n            ? maxCitizensCanBeAddPerAdmin\\n            : 1;\\n\\n        if (\\n            dailyCitizenRoleModifyCredit[msg.sender][daysPassed] >=\\n            maxCitizensCanBeAddPerAdmin\\n        ) revert RunOutOfDailyCitizenRoleGrantCredit();\\n        _;\\n    }\\n\\n    modifier adminRoleGrantApprovalNotSent(address _account) {\\n        bool adminRoleGrantApprovalAlreadySent = false;\\n        for (\\n            uint i = 0;\\n            i < adminApprovalSentToAccount[msg.sender].length;\\n            i++\\n        ) {\\n            if (adminApprovalSentToAccount[msg.sender][i] == _account) {\\n                adminRoleGrantApprovalAlreadySent = true;\\n            }\\n        }\\n\\n        if (adminRoleGrantApprovalAlreadySent)\\n            revert AdminRoleGrantApprovalAlreadySent();\\n        _;\\n    }\\n\\n    constructor() {\\n        admins.push(msg.sender);\\n        adminRoleGrantApprovals[msg.sender] = 1;\\n        citizens.push(msg.sender);\\n        creationDate = block.timestamp;\\n        _setupRole(ADMINISTRATOR, msg.sender);\\n        _setupRole(CITIZEN, msg.sender);\\n    }\\n\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _hasRole[role][account] = true;\\n        emit RoleGranted(role, account, msg.sender);\\n    }\\n\\n    function _revokeRole(bytes32 role, address account) internal virtual {\\n        _checkRole(role, account);\\n        delete _hasRole[role][account];\\n        emit RoleRevoked(role, account, msg.sender);\\n    }\\n\\n    /// @dev Checks `role` for `account`. Reverts with a message including the required role.\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!_hasRole[role][account]) {\\n            revert PermissionsUnauthorizedAccount(account, role);\\n        }\\n    }\\n\\n    function hasRole(bytes32 role, address account) public view returns (bool) {\\n        return _hasRole[role][account];\\n    }\\n\\n    function applyForCitizenshipRole(\\n        string memory _emailAddress\\n    ) public payable minCitizenshipApplicationFeeCovered {\\n        citizenshipApplications[msg.sender] = _emailAddress;\\n    }\\n\\n    function sendGrantAdministratorRoleApproval(\\n        address _account\\n    ) public onlyRole(ADMINISTRATOR) adminRoleGrantApprovalNotSent(_account) {\\n        adminApprovalSentToAccount[msg.sender].push(_account);\\n        adminRoleGrantApprovals[_account]++;\\n\\n        if (\\n            admins.length == 0 ||\\n            (adminRoleGrantApprovals[_account] * 1000) / admins.length >\\n            MIN_PERCENTAGE_GRANT_ADMIN_APPROVALS_REQUIRED * 10\\n        ) {\\n            adminRoleGrantApprovals[_account]++;\\n            // also new admin has to automatically send his approvals to the already existing admins\\n            for (uint i = 0; i < admins.length; i++) {\\n                adminApprovalSentToAccount[_account].push(admins[i]);\\n                adminRoleGrantApprovals[admins[i]]++;\\n            }\\n            _setupRole(ADMINISTRATOR, _account);\\n            admins.push(_account);\\n        }\\n    }\\n\\n    function revokeAdminRoleApproval(\\n        address revokedAccount\\n    ) public onlyRole(ADMINISTRATOR) {\\n        _revokeAdminRoleApproval(msg.sender, revokedAccount);\\n    }\\n\\n    function _revokeAdminRoleApproval(\\n        address admin,\\n        address revokedAccount\\n    ) internal {\\n        for (uint i = 0; i < adminApprovalSentToAccount[admin].length; i++) {\\n            if (adminApprovalSentToAccount[admin][i] == revokedAccount) {\\n                delete adminApprovalSentToAccount[admin][i];\\n                adminRoleGrantApprovals[revokedAccount]--;\\n                if (\\n                    (adminRoleGrantApprovals[revokedAccount] * 1000) /\\n                        admins.length <\\n                    MIN_PERCENTAGE_GRANT_ADMIN_APPROVALS_REQUIRED * 10\\n                ) {\\n                    adminRoleGrantApprovals[revokedAccount]--;\\n                    _revokeRole(ADMINISTRATOR, revokedAccount);\\n                    for (uint u = 0; u < admins.length; u++) {\\n                        if (admins[u] == revokedAccount) {\\n                            delete admins[u];\\n                            admins[u] = admins[admins.length - 1];\\n                            admins.pop();\\n                            break;\\n                        }\\n                    }\\n                    // make sure all the other admins get revoked their approval receieved from this admin\\n                    for (\\n                        uint k = 0;\\n                        k < adminApprovalSentToAccount[revokedAccount].length;\\n                        k++\\n                    ) {\\n                        _revokeAdminRoleApproval(\\n                            revokedAccount,\\n                            adminApprovalSentToAccount[revokedAccount][k]\\n                        );\\n                        delete adminApprovalSentToAccount[revokedAccount][k];\\n                    }\\n                    break;\\n                }\\n            }\\n        }\\n    }\\n\\n    function grantCitizenRole(\\n        address _account,\\n        bool _revokeCitizenRole\\n    )\\n        public\\n        onlyRole(ADMINISTRATOR)\\n        hasRoleToModify(_account, _revokeCitizenRole)\\n        hasCitizenRoleGrantCredit\\n        appliedForCitizenRole(_account)\\n    {\\n        uint daysPassed = (block.timestamp - creationDate) / 60 / 60 / 24;\\n        dailyCitizenRoleModifyCredit[msg.sender][daysPassed]++;\\n        if (!_revokeCitizenRole) {\\n            _setupRole(CITIZEN, _account);\\n            citizens.push(_account);\\n        } else {\\n            _revokeRole(CITIZEN, _account);\\n            for (uint i; i < citizens.length; i++) {\\n                if (citizens[i] == _account) {\\n                    delete citizens[i];\\n                    break;\\n                }\\n            }\\n        }\\n    }\\n\\n    function updateCitizenshipRoleApplicationFee(\\n        uint value\\n    ) public onlyRole(ADMINISTRATOR) {\\n        citizenRoleApplicationFee = value;\\n    }\\n\\n    function checkIfAccounthasRole(\\n        address _account,\\n        bytes32 _role\\n    ) public view returns (bool) {\\n        return hasRole(_role, _account);\\n    }\\n\\n    function getAdminsSize() public view returns (uint) {\\n        return admins.length;\\n    }\\n\\n    function getCitizensSize() public view returns (uint) {\\n        return citizens.length;\\n    }\\n\\n    function getPoliticalActorsSize() public view returns (uint) {\\n        return politicalActors.length;\\n    }\\n\\n    function isEmptyString(string memory _string) public pure returns (bool) {\\n        return keccak256(bytes(_string)) == keccak256(bytes(\\\"\\\"));\\n    }\\n}\\n\",\"keccak256\":\"0x7e5f4d4339caab502431933b45ead242a95beac7db73b9c156dafa0ad3da4229\",\"license\":\"MIT\"},\"contracts/BVS_Voting.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// pragma\\npragma solidity ^0.8.9;\\n\\nimport \\\"./BVS_Roles.sol\\\";\\n\\n/**\\n * @title Balanced Voting System: Voting contract\\n * @author M\\u00e1rton S\\u00e1ndor Horv\\u00e1th, email: hmartonsandor{@}gmail.com\\n * @notice\\n * @dev\\n */\\n\\ncontract BVS_Voting is BVS_Roles {\\n    // CONSTANTS\\n    uint public constant ELECTION_START_END_INTERVAL = 30 days;\\n    uint public constant MINIMUM_PERCENTAGE_OF_ELECTION_VOTES = 10;\\n\\n    uint public constant VOTING_CYCLE_INTERVAL = 30 days;\\n    uint public constant VOTING_DURATION = 14 days;\\n    uint public constant APPROVE_VOTING_BEFORE_IT_STARTS_LIMIT = 3 days;\\n    uint public constant NEW_VOTING_PERIOD_MIN_SCHEDULE_AHEAD_TIME = 10 days;\\n\\n    uint public constant MIN_TOTAL_CONTENT_READ_CHECK_ANSWER = 10;\\n    uint public constant VOTING_CHECK_ASKED_NUM_OF_QUESTIONS = 5;\\n    uint public constant ARTICLE_CHECK_ASKED_NUM_OF_QUESTIONS = 5;\\n    uint public constant ARTICLE_RESPONSE_CHECK_ASKED_NUM_OF_QUESTIONS = 5;\\n\\n    uint public constant MIN_VOTE_SCORE = 5;\\n    uint public constant MIN_PERCENTAGE_OF_VOTES = 10;\\n\\n    // globals\\n\\n    uint public firstVotingCycleStartDate;\\n    uint public electionsCandidateApplicationFee = 10000000;\\n\\n    uint public electionsStartDate;\\n    uint public electionsEndDate;\\n\\n    // DATA OBJECTS\\n\\n    struct ProConArticle {\\n        bytes32 votingKey;\\n        bool isArticleApproved; // admin approves\\n        bool isResponseApproved; // admin approves\\n        address publisher;\\n        string articleIpfsHash;\\n        bool isVoteOnA;\\n        string responseStatementIpfsHash; // addeed by the creator of the related voting\\n        string articleContentCheckQuizIpfsHash; // added by admin\\n        string responseContentCheckQuizIpfsHash; // added by admin\\n    }\\n\\n    struct Voting {\\n        bool approved;\\n        bool cancelled;\\n        bytes32 key;\\n        uint budget;\\n        uint voteCount;\\n        address creator;\\n        string contentIpfsHash;\\n        uint startDate; // 10 days before start date critics can appear\\n        uint voteOnAScore;\\n        uint voteOnBScore;\\n        string votingContentCheckQuizIpfsHash;\\n    }\\n\\n    struct Vote {\\n        bool voted;\\n        bool isContentCompleted;\\n    }\\n\\n    // mapping(address => uint) public funders;\\n\\n    // article content check answers\\n    mapping(bytes32 => bytes32[]) public articleContentReadCheckAnswers; // article key => answers\\n\\n    mapping(bytes32 => bytes32[]) public articleContentResponseReadCheckAnswers; // article key => answers\\n\\n    mapping(bytes32 => bytes32[]) public votingContentReadCheckAnswers; // voting key => answers\\n\\n    // track the number of votes political actors created during voting cycles\\n    mapping(uint => mapping(address => uint)) public votingCycleStartVoteCount;\\n\\n    // track the number of articles published related to scheduled votings\\n    mapping(address => mapping(bytes32 => uint)) // political_actor =>  voting key => published articles count\\n        public publishArticleToVotingsCount;\\n\\n    // register the voting cycle indexes in order to clear votingCycleStartVoteCount data\\n    uint[] public votingCycleIndexes;\\n\\n    // store votings\\n    mapping(bytes32 => Voting) public votings;\\n\\n    // store pro/con articles\\n    mapping(bytes32 => mapping(bytes32 => ProConArticle)) public proConArticles; // voting key => article key => article\\n\\n    // register voting and article keys\\n    bytes32[] public votingKeys;\\n    bytes32[] public articleKeys;\\n\\n    mapping(address => mapping(bytes32 => Vote)) public votes;\\n\\n    mapping(address => bytes32[]) public articlesCompleted;\\n    mapping(address => bytes32[]) public articlesResponseCompleted;\\n\\n    // elections\\n\\n    address[] public electionCandidates;\\n    mapping(address => uint32) public electionCandidateScores;\\n\\n    mapping(address => address) public electionVotes;\\n    address[] public electionVoters;\\n\\n    // EVENTS\\n    event CitizenshipRoleGranted(address to, address from);\\n\\n    // ERRORS **************************************************************\\n\\n    error VotingAlreadyStarted();\\n    error VotingCanBeApproved3DaysOrLessBeforeItsStart();\\n\\n    error CantStartNewVointg10daysOrLessBeforeEndOfCycle();\\n    error AccountRanOutOfVotingCreditsForThisVotingCycle();\\n\\n    error ArticleNotExists();\\n    error ArticleNotRelatedToYourVoting();\\n    error ContentCheckIpfsNotAssigned();\\n    error NoArticleContentCheckIpfsAssignedToThisArticle();\\n\\n    error NoArticleResponseAssigned();\\n    error NoArticleResponseContentCheckIpfsAssigned();\\n    error NoMorePublishArticleCreditsRelatedToThisVoting();\\n\\n    error NoEnoughContentReadQuizAnswerAdded();\\n\\n    error FirstVotingCycleStartDateHasToBeInTheFuture();\\n    error NoOngoingVotingPeriod();\\n    error NewVotingHasToBeScheduled10DaysAhead();\\n    error NewVotingHasToBeScheduledLessThan30daysAhead();\\n\\n    error VotingNotExists();\\n    error VotingNotYetStartedOrAlreadyFinished();\\n    error VotingNotBelongsToSender();\\n    error VotingDidNotWon();\\n    error VotingNotFinished();\\n    error VotingNotApproved();\\n    error VotingContentCheckQuizNotCompleted();\\n    error AlreadyVotedOnThisVoting();\\n    error NoEnoughVotesReceived();\\n    error VotingContentCheckQuizNotAssigned();\\n    error VotingOwnerNotRespondedOnAllArticles();\\n\\n    // elections\\n    error ThereIsAnOngoingElections();\\n    error ThereIsNoOngoingElections();\\n    error ElectionStartDateHasToBe30DaysAhead();\\n\\n    error ElectionsNotScheduledOrAlreadyStarted();\\n    error AccountAlreadyAppliedForElections();\\n    error ElectionsAlreadyFinished();\\n    error AccountCantVoteOnItself();\\n    error VoteOnAccountNotBelongToAnyCandidate();\\n    error AccountAlreadyVoted();\\n\\n    error ElectionsAlreadyClosedOrNotYetScheduled();\\n    error ElectionsCanOnlyClose7DaysAfterTheirEndDate();\\n\\n    modifier criticisedArticleRelatedToYourVoting(\\n        bytes32 _votingKey,\\n        bytes32 _proConArticleKey\\n    ) {\\n        if (\\n            votings[proConArticles[_votingKey][_proConArticleKey].votingKey]\\n                .creator != msg.sender\\n        ) revert ArticleNotRelatedToYourVoting();\\n        _;\\n    }\\n\\n    modifier hasContentIpfs(bytes32 _votingKey, bytes32 _articleKey) {\\n        if (\\n            isEmptyString(\\n                proConArticles[_votingKey][_articleKey]\\n                    .responseContentCheckQuizIpfsHash\\n            )\\n        ) revert ContentCheckIpfsNotAssigned();\\n        _;\\n    }\\n\\n    modifier firstVotingCycleStartDateIsInTheFuture(\\n        uint _firstVotingCycleStartDate\\n    ) {\\n        if (_firstVotingCycleStartDate < block.timestamp) {\\n            revert FirstVotingCycleStartDateHasToBeInTheFuture();\\n        }\\n        _;\\n    }\\n\\n    modifier votingNotYetStarted(bytes32 _votingKey) {\\n        if (votings[_votingKey].startDate < block.timestamp) {\\n            revert VotingAlreadyStarted();\\n        }\\n        _;\\n    }\\n\\n    modifier votingWon(bytes32 _votingKey) {\\n        if (!isVotingWon(_votingKey, true)) {\\n            revert VotingDidNotWon();\\n        }\\n        _;\\n    }\\n\\n    modifier votingBelongsToSender(bytes32 _votingKey) {\\n        if (getVoting(_votingKey).creator != msg.sender) {\\n            revert VotingNotBelongsToSender();\\n        }\\n        _;\\n    }\\n\\n    modifier votingNotFinished(bytes32 _votingKey) {\\n        if (votings[_votingKey].startDate + VOTING_DURATION > block.timestamp) {\\n            revert VotingNotFinished();\\n        }\\n        _;\\n    }\\n\\n    modifier votingApproved(bytes32 _votingKey) {\\n        if (!votings[_votingKey].approved) {\\n            revert VotingNotApproved();\\n        }\\n        _;\\n    }\\n\\n    modifier enoughVotesArrived(bytes32 _votingKey) {\\n        if (\\n            (votings[_votingKey].voteCount * 100) / citizens.length <\\n            MIN_PERCENTAGE_OF_VOTES\\n        ) {\\n            revert NoEnoughVotesReceived();\\n        }\\n        _;\\n    }\\n\\n    modifier votingExists(bytes32 _votingKey) {\\n        if (votings[_votingKey].creator == address(0)) {\\n            revert VotingNotExists();\\n        }\\n        _;\\n    }\\n\\n    modifier votingPeriodIsActive() {\\n        if (\\n            firstVotingCycleStartDate > block.timestamp ||\\n            firstVotingCycleStartDate == 0\\n        ) {\\n            revert NoOngoingVotingPeriod();\\n        }\\n        _;\\n    }\\n\\n    modifier votingIsOngoing(bytes32 _votingKey) {\\n        if (\\n            votings[_votingKey].startDate > block.timestamp ||\\n            votings[_votingKey].startDate + VOTING_DURATION < block.timestamp\\n        ) {\\n            revert VotingNotYetStartedOrAlreadyFinished();\\n        }\\n        _;\\n    }\\n\\n    modifier contentCheckQuizCompleted(bytes32 _votingKey) {\\n        if (!votes[msg.sender][_votingKey].isContentCompleted) {\\n            revert VotingContentCheckQuizNotCompleted();\\n        }\\n        _;\\n    }\\n\\n    modifier notVotedYetOnThisVoting(bytes32 _votingKey) {\\n        if (votes[msg.sender][_votingKey].voted) {\\n            revert AlreadyVotedOnThisVoting();\\n        }\\n        _;\\n    }\\n\\n    modifier newVotingScheduledAtLeast10daysAhead(uint _startDate) {\\n        if (\\n            _startDate <\\n            block.timestamp + NEW_VOTING_PERIOD_MIN_SCHEDULE_AHEAD_TIME\\n        ) {\\n            revert NewVotingHasToBeScheduled10DaysAhead();\\n        }\\n        _;\\n    }\\n\\n    modifier newVotingScheduledMaximum30daysAhead(uint _startDate) {\\n        if (_startDate > block.timestamp + VOTING_CYCLE_INTERVAL) {\\n            revert NewVotingHasToBeScheduledLessThan30daysAhead();\\n        }\\n        _;\\n    }\\n\\n    modifier votingContentQuizIpfsAssigned(bytes32 _votingKey) {\\n        if (isEmptyString(votings[_votingKey].votingContentCheckQuizIpfsHash)) {\\n            revert VotingContentCheckQuizNotAssigned();\\n        }\\n        _;\\n    }\\n\\n    modifier creatorOfVotingRespondedOnArticles(bytes32 _votingKey) {\\n        bool isRespondedAllTheCritics = true;\\n        uint articleKeysLength = articleKeys.length;\\n\\n        for (uint i = 0; i < articleKeysLength; i++) {\\n            if (proConArticles[_votingKey][articleKeys[i]].isArticleApproved) {\\n                if (\\n                    !proConArticles[_votingKey][articleKeys[i]]\\n                        .isResponseApproved\\n                ) {\\n                    isRespondedAllTheCritics = false;\\n                    break;\\n                }\\n            }\\n        }\\n        if (!isRespondedAllTheCritics) {\\n            revert VotingOwnerNotRespondedOnAllArticles();\\n        }\\n        _;\\n    }\\n\\n    modifier approveAttempt3DaysBeforeVotingStarts(bytes32 _votingKey) {\\n        if (\\n            votings[_votingKey].startDate -\\n                APPROVE_VOTING_BEFORE_IT_STARTS_LIMIT >\\n            block.timestamp\\n        ) {\\n            revert VotingCanBeApproved3DaysOrLessBeforeItsStart();\\n        }\\n        _;\\n    }\\n\\n    modifier enoughContentReadQuizAnswerAdded(\\n        bytes32[] memory _keccak256HashedAnswers\\n    ) {\\n        if (\\n            _keccak256HashedAnswers.length < MIN_TOTAL_CONTENT_READ_CHECK_ANSWER\\n        ) {\\n            revert NoEnoughContentReadQuizAnswerAdded();\\n        }\\n        _;\\n    }\\n\\n    modifier hasArticleContentIpfsHashAssigned(\\n        bytes32 _votingKey,\\n        bytes32 _articleKey\\n    ) {\\n        if (\\n            isEmptyString(\\n                proConArticles[_votingKey][_articleKey]\\n                    .articleContentCheckQuizIpfsHash\\n            )\\n        ) {\\n            revert NoArticleContentCheckIpfsAssignedToThisArticle();\\n        }\\n        _;\\n    }\\n\\n    modifier articleShouldExists(bytes32 _votingKey, bytes32 _articleKey) {\\n        if (proConArticles[_votingKey][_articleKey].publisher == address(0)) {\\n            revert ArticleNotExists();\\n        }\\n        _;\\n    }\\n\\n    modifier hasArticleReponseAssigned(\\n        bytes32 _votingKey,\\n        bytes32 _articleKey\\n    ) {\\n        if (\\n            isEmptyString(\\n                proConArticles[_votingKey][_articleKey]\\n                    .responseStatementIpfsHash\\n            )\\n        ) {\\n            revert NoArticleResponseAssigned();\\n        }\\n        _;\\n    }\\n\\n    modifier hasArticleResponseContentCheckIpfsHash(\\n        bytes32 _votingKey,\\n        bytes32 _articleKey\\n    ) {\\n        if (\\n            isEmptyString(\\n                proConArticles[_votingKey][_articleKey]\\n                    .responseContentCheckQuizIpfsHash\\n            )\\n        ) {\\n            revert NoArticleResponseContentCheckIpfsAssigned();\\n        }\\n        _;\\n    }\\n\\n    modifier hasCreditsLeftToPublishArticle(bytes32 _votingKey) {\\n        if (\\n            publishArticleToVotingsCount[msg.sender][_votingKey] >=\\n            politicalActorVotingCredits[msg.sender]\\n        ) {\\n            revert NoMorePublishArticleCreditsRelatedToThisVoting();\\n        }\\n        _;\\n    }\\n\\n    // elections\\n\\n    modifier noUnclosedElections() {\\n        if (electionsStartDate != 0) {\\n            revert ThereIsAnOngoingElections();\\n        }\\n        _;\\n    }\\n\\n    modifier validApplication() {\\n        if (electionsStartDate == 0 || electionsStartDate < block.timestamp) {\\n            revert ElectionsNotScheduledOrAlreadyStarted();\\n        } else if (electionCandidateScores[msg.sender] > 0) {\\n            revert AccountAlreadyAppliedForElections();\\n        }\\n        _;\\n    }\\n\\n    modifier newElectionsStartDateIs30DaysAhead(uint _electionsStartDate) {\\n        if (\\n            _electionsStartDate < block.timestamp + ELECTION_START_END_INTERVAL\\n        ) {\\n            revert ElectionStartDateHasToBe30DaysAhead();\\n        }\\n        _;\\n    }\\n\\n    modifier validVote(address _voteOnAddress) {\\n        if (block.timestamp < electionsStartDate || electionsStartDate == 0) {\\n            revert ThereIsNoOngoingElections();\\n        } else if (block.timestamp > electionsEndDate) {\\n            revert ElectionsAlreadyFinished();\\n        } else if (msg.sender == _voteOnAddress) {\\n            revert AccountCantVoteOnItself();\\n        } else if (electionCandidateScores[_voteOnAddress] == 0) {\\n            revert VoteOnAccountNotBelongToAnyCandidate();\\n        } else if (electionVotes[msg.sender] != address(0)) {\\n            revert AccountAlreadyVoted();\\n        }\\n        _;\\n    }\\n\\n    modifier canCloseElections() {\\n        if (electionsStartDate == 0) {\\n            revert ElectionsAlreadyClosedOrNotYetScheduled();\\n        } else if (electionsEndDate + 7 days > block.timestamp) {\\n            revert ElectionsCanOnlyClose7DaysAfterTheirEndDate();\\n        }\\n        _;\\n    }\\n\\n    modifier minCandidateApplicationFeeCovered() {\\n        if (msg.value < electionsCandidateApplicationFee) {\\n            revert MinimumApplicationFeeNotCovered();\\n        }\\n        _;\\n    }\\n\\n    // CONTRACT LOGIC *****************************************************************\\n\\n    constructor() BVS_Roles() {}\\n\\n    receive() external payable {}\\n\\n    function scheduleNextElections(\\n        uint256 _electionsStartDate,\\n        uint256 _electionsEndDate\\n    )\\n        public\\n        onlyRole(ADMINISTRATOR)\\n        noUnclosedElections\\n        newElectionsStartDateIs30DaysAhead(_electionsStartDate)\\n    {\\n        electionsStartDate = _electionsStartDate;\\n        electionsEndDate = _electionsEndDate;\\n\\n        for (uint i = 0; i < politicalActors.length; i++) {\\n            _revokeRole(POLITICAL_ACTOR, politicalActors[i]);\\n            delete politicalActorVotingCredits[politicalActors[i]];\\n            delete politicalActors[i];\\n        }\\n        politicalActors = new address[](0);\\n    }\\n\\n    function applyForElections()\\n        public\\n        payable\\n        onlyRole(CITIZEN)\\n        minCandidateApplicationFeeCovered\\n        validApplication\\n    {\\n        electionCandidates.push(msg.sender);\\n        electionCandidateScores[msg.sender] = 1;\\n    }\\n\\n    function voteOnElections(\\n        address voteOnAddress\\n    ) public onlyRole(CITIZEN) validVote(voteOnAddress) {\\n        electionVotes[msg.sender] = voteOnAddress;\\n        electionVoters.push(msg.sender);\\n        electionCandidateScores[voteOnAddress]++;\\n    }\\n\\n    function closeElections() public onlyRole(ADMINISTRATOR) canCloseElections {\\n        // assign roles to the winners\\n        uint256 totalVotes = electionVoters.length;\\n        for (uint i = 0; i < electionCandidates.length; i++) {\\n            uint256 votesOwnedPercentage = ((electionCandidateScores[\\n                electionCandidates[i]\\n            ] - 1) * 1000) / totalVotes;\\n\\n            if (votesOwnedPercentage > MINIMUM_PERCENTAGE_OF_ELECTION_VOTES) {\\n                uint256 votingCycleTotalCredit = (votesOwnedPercentage -\\n                    MINIMUM_PERCENTAGE_OF_ELECTION_VOTES *\\n                    10) /\\n                    100 +\\n                    1;\\n\\n                _setupRole(POLITICAL_ACTOR, electionCandidates[i]);\\n                politicalActors.push(electionCandidates[i]);\\n                politicalActorVotingCredits[\\n                    electionCandidates[i]\\n                ] = votingCycleTotalCredit;\\n            }\\n\\n            delete electionCandidateScores[electionCandidates[i]];\\n        }\\n\\n        electionCandidates = new address[](0);\\n        electionVoters = new address[](0);\\n\\n        electionsStartDate = 0;\\n    }\\n\\n    function unlockVotingBudget(\\n        bytes32 _votingKey\\n    )\\n        public\\n        onlyRole(POLITICAL_ACTOR)\\n        votingBelongsToSender(_votingKey)\\n        votingWon(_votingKey)\\n    {\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: getVoting(_votingKey).budget\\n        }(\\\"\\\");\\n        if (!callSuccess) {\\n            revert();\\n        }\\n\\n        votings[_votingKey].budget = 0; // make sure no more money can be requested\\n    }\\n\\n    function setFirstVotingCycleStartDate(\\n        uint _firstVotingCycleStartDate\\n    )\\n        public\\n        onlyRole(ADMINISTRATOR)\\n        firstVotingCycleStartDateIsInTheFuture(_firstVotingCycleStartDate)\\n    {\\n        // reset votingCycleStartVoteCount;\\n        for (uint i = 0; i < votingCycleIndexes.length; i++) {\\n            for (uint u = 0; u < politicalActors.length; u++) {\\n                delete votingCycleStartVoteCount[votingCycleIndexes[i]][\\n                    politicalActors[u]\\n                ];\\n            }\\n        }\\n\\n        votingCycleIndexes = new uint[](0);\\n\\n        firstVotingCycleStartDate = _firstVotingCycleStartDate;\\n    }\\n\\n    function scheduleNewVoting(\\n        string calldata _contentIpfsHash,\\n        uint _startDate,\\n        uint _budget\\n    )\\n        public\\n        onlyRole(POLITICAL_ACTOR)\\n        votingPeriodIsActive\\n        newVotingScheduledAtLeast10daysAhead(_startDate)\\n        newVotingScheduledMaximum30daysAhead(_startDate)\\n    {\\n        uint timePassed = block.timestamp - firstVotingCycleStartDate;\\n        uint votingCycleCount = uint(timePassed / VOTING_CYCLE_INTERVAL);\\n\\n        if (\\n            timePassed - votingCycleCount * VOTING_CYCLE_INTERVAL >\\n            VOTING_CYCLE_INTERVAL - NEW_VOTING_PERIOD_MIN_SCHEDULE_AHEAD_TIME\\n        ) {\\n            revert CantStartNewVointg10daysOrLessBeforeEndOfCycle();\\n        }\\n\\n        if (\\n            politicalActorVotingCredits[msg.sender] <=\\n            votingCycleStartVoteCount[votingCycleCount][msg.sender]\\n        ) {\\n            revert AccountRanOutOfVotingCreditsForThisVotingCycle();\\n        }\\n\\n        votingCycleStartVoteCount[votingCycleCount][msg.sender]++;\\n\\n        bytes32 _votingKey = keccak256(\\n            abi.encodePacked(block.timestamp, msg.sender, _contentIpfsHash)\\n        );\\n\\n        votings[_votingKey].budget = _budget;\\n        votings[_votingKey].key = _votingKey;\\n        votings[_votingKey].creator = msg.sender;\\n        votings[_votingKey].contentIpfsHash = _contentIpfsHash;\\n        votings[_votingKey].startDate = _startDate;\\n        votings[_votingKey].voteOnAScore = 0;\\n        votings[_votingKey].voteOnBScore = 0;\\n\\n        bool votingCycleIndexAlreadyAdded = false;\\n        for (uint i = 0; i < votingCycleIndexes.length; i++) {\\n            if (votingCycleCount == votingCycleIndexes[i]) {\\n                votingCycleIndexAlreadyAdded = true;\\n                break;\\n            }\\n        }\\n\\n        if (!votingCycleIndexAlreadyAdded) {\\n            votingCycleIndexes.push(votingCycleCount);\\n        }\\n\\n        votingKeys.push(_votingKey);\\n    }\\n\\n    function assignQuizIpfsHashToVoting(\\n        bytes32 _votingKey,\\n        string memory _quizIpfsHash\\n    ) public onlyRole(ADMINISTRATOR) votingExists(_votingKey) {\\n        votings[_votingKey].votingContentCheckQuizIpfsHash = _quizIpfsHash;\\n    }\\n\\n    function addKeccak256HashedAnswersToVotingContent(\\n        bytes32 _votingKey,\\n        bytes32[] memory _keccak256HashedAnswers\\n    )\\n        public\\n        onlyRole(ADMINISTRATOR)\\n        votingContentQuizIpfsAssigned(_votingKey)\\n        enoughContentReadQuizAnswerAdded(_keccak256HashedAnswers)\\n    {\\n        votingContentReadCheckAnswers[_votingKey] = _keccak256HashedAnswers;\\n    }\\n\\n    function approveVoting(\\n        bytes32 _votingKey\\n    )\\n        public\\n        onlyRole(ADMINISTRATOR)\\n        votingNotYetStarted(_votingKey)\\n        approveAttempt3DaysBeforeVotingStarts(_votingKey)\\n        enoughContentReadQuizAnswerAdded(\\n            votingContentReadCheckAnswers[_votingKey]\\n        )\\n        creatorOfVotingRespondedOnArticles(_votingKey)\\n    {\\n        votings[_votingKey].approved = true;\\n    }\\n\\n    function publishProConArticle(\\n        bytes32 _votingKey,\\n        string memory _ipfsHash,\\n        bool _isVoteOnA\\n    )\\n        public\\n        onlyRole(POLITICAL_ACTOR)\\n        hasCreditsLeftToPublishArticle(_votingKey)\\n    {\\n        bytes32 articleKey = keccak256(\\n            abi.encodePacked(block.timestamp, msg.sender, _ipfsHash)\\n        );\\n\\n        proConArticles[_votingKey][articleKey] = ProConArticle(\\n            _votingKey,\\n            false,\\n            false,\\n            msg.sender,\\n            _ipfsHash,\\n            _isVoteOnA,\\n            \\\"\\\",\\n            \\\"\\\",\\n            \\\"\\\"\\n        );\\n        articleKeys.push(articleKey);\\n        publishArticleToVotingsCount[msg.sender][_votingKey]++;\\n    }\\n\\n    function assignQuizIpfsHashToArticleOrResponse(\\n        bytes32 _votingKey,\\n        bytes32 _articleKey,\\n        string memory _quizIpfsHash,\\n        bool assignToArticleContent\\n    )\\n        public\\n        onlyRole(ADMINISTRATOR)\\n        articleShouldExists(_votingKey, _articleKey)\\n    {\\n        if (assignToArticleContent) {\\n            proConArticles[_votingKey][_articleKey]\\n                .articleContentCheckQuizIpfsHash = _quizIpfsHash;\\n        } else {\\n            proConArticles[_votingKey][_articleKey]\\n                .responseContentCheckQuizIpfsHash = _quizIpfsHash;\\n        }\\n    }\\n\\n    function addKeccak256HashedAnswersToArticle(\\n        bytes32 _votingKey,\\n        bytes32 _articleKey,\\n        bytes32[] memory _keccak256HashedAnswers\\n    )\\n        public\\n        onlyRole(ADMINISTRATOR)\\n        hasArticleContentIpfsHashAssigned(_votingKey, _articleKey)\\n        enoughContentReadQuizAnswerAdded(_keccak256HashedAnswers)\\n    {\\n        proConArticles[_votingKey][_articleKey].isArticleApproved = true;\\n        articleContentReadCheckAnswers[_articleKey] = _keccak256HashedAnswers;\\n    }\\n\\n    function publishProConArticleResponse(\\n        bytes32 _votingKey,\\n        bytes32 _proConArticleKey,\\n        string memory _ipfsHash\\n    )\\n        public\\n        onlyRole(POLITICAL_ACTOR)\\n        votingNotYetStarted(_votingKey)\\n        criticisedArticleRelatedToYourVoting(_votingKey, _proConArticleKey)\\n    {\\n        proConArticles[_votingKey][_proConArticleKey]\\n            .responseStatementIpfsHash = _ipfsHash;\\n    }\\n\\n    function addKeccak256HashedAnswersToArticleResponse(\\n        bytes32 _votingKey,\\n        bytes32 _articleKey,\\n        bytes32[] memory _keccak256HashedAnswers\\n    )\\n        public\\n        onlyRole(ADMINISTRATOR)\\n        articleShouldExists(_votingKey, _articleKey)\\n        hasArticleReponseAssigned(_votingKey, _articleKey)\\n        hasArticleResponseContentCheckIpfsHash(_votingKey, _articleKey)\\n        votingNotYetStarted(_votingKey)\\n        enoughContentReadQuizAnswerAdded(_keccak256HashedAnswers)\\n    {\\n        articleContentResponseReadCheckAnswers[\\n            _articleKey\\n        ] = _keccak256HashedAnswers;\\n        proConArticles[_votingKey][_articleKey].isResponseApproved = true;\\n    }\\n\\n    function completeContentReadQuiz(\\n        uint contentType,\\n        bytes32 _votingKey,\\n        bytes32 _articleKey,\\n        string[] memory _answers\\n    ) public onlyRole(CITIZEN) {\\n        uint[] memory answerIndexes;\\n        bool isCorrect;\\n\\n        // voting\\n        if (contentType == 1) {\\n            answerIndexes = getAccountVotingQuizAnswerIndexes(\\n                _votingKey,\\n                msg.sender\\n            );\\n\\n            isCorrect = isContentReadQuizCorrect(\\n                answerIndexes,\\n                votingContentReadCheckAnswers[_votingKey],\\n                _answers\\n            );\\n            votes[msg.sender][_votingKey].isContentCompleted = true;\\n        }\\n        // article\\n        else if (contentType == 2) {\\n            answerIndexes = getAccountArticleQuizAnswerIndexes(\\n                _votingKey,\\n                _articleKey,\\n                msg.sender\\n            );\\n\\n            isCorrect = isContentReadQuizCorrect(\\n                answerIndexes,\\n                articleContentReadCheckAnswers[_articleKey],\\n                _answers\\n            );\\n            articlesCompleted[msg.sender].push(_articleKey);\\n            // article respond\\n        } else if (contentType == 3) {\\n            answerIndexes = getAccountArticleResponseQuizAnswerIndexes(\\n                _votingKey,\\n                _articleKey,\\n                msg.sender\\n            );\\n\\n            isCorrect = isContentReadQuizCorrect(\\n                answerIndexes,\\n                articleContentResponseReadCheckAnswers[_articleKey],\\n                _answers\\n            );\\n\\n            articlesResponseCompleted[msg.sender].push(_articleKey);\\n        }\\n\\n        require(isCorrect, \\\"Some of your provided answers are wrong\\\");\\n    }\\n\\n    function calculateVoteScore(\\n        bytes32 _votingKey,\\n        address _account\\n    ) public view returns (uint) {\\n        uint voteScore = MIN_VOTE_SCORE;\\n\\n        uint completedArticlesLength = articlesCompleted[_account].length;\\n\\n        uint numOfVoteOnACompletedArticleValue = 0;\\n        uint numOfVoteOnBCompletedArticleValue = 0;\\n\\n        uint numOfVoteOnACompletedResponseValue = 0;\\n        uint numOfVoteOnBCompletedResponseValue = 0;\\n\\n        for (uint i = 0; i < completedArticlesLength; i++) {\\n            ProConArticle memory completedProConArticle = proConArticles[\\n                _votingKey\\n            ][articlesCompleted[_account][i]];\\n            if (completedProConArticle.votingKey == _votingKey) {\\n                if (completedProConArticle.isVoteOnA) {\\n                    numOfVoteOnACompletedArticleValue += 1;\\n                } else {\\n                    numOfVoteOnBCompletedArticleValue += 1;\\n                }\\n            }\\n        }\\n\\n        uint completedArticlesResponseLength = articlesResponseCompleted[\\n            _account\\n        ].length;\\n        for (uint u = 0; u < completedArticlesResponseLength; u++) {\\n            ProConArticle\\n                memory completedProConArticleWithResponse = proConArticles[\\n                    _votingKey\\n                ][articlesResponseCompleted[_account][u]];\\n            if (completedProConArticleWithResponse.votingKey == _votingKey) {\\n                if (completedProConArticleWithResponse.isVoteOnA) {\\n                    numOfVoteOnACompletedResponseValue += 1;\\n                } else {\\n                    numOfVoteOnBCompletedResponseValue += 1;\\n                }\\n            }\\n        }\\n\\n        uint noPairArticleCompleteCount = 0;\\n\\n        if (\\n            numOfVoteOnACompletedArticleValue >\\n            numOfVoteOnBCompletedArticleValue\\n        ) {\\n            noPairArticleCompleteCount = (numOfVoteOnACompletedArticleValue -\\n                numOfVoteOnBCompletedArticleValue);\\n        } else {\\n            noPairArticleCompleteCount = (numOfVoteOnBCompletedArticleValue -\\n                numOfVoteOnACompletedArticleValue);\\n        }\\n\\n        voteScore +=\\n            ((numOfVoteOnACompletedArticleValue +\\n                numOfVoteOnBCompletedArticleValue -\\n                noPairArticleCompleteCount) / 2) *\\n            25 +\\n            (noPairArticleCompleteCount * 5);\\n\\n        // add the balanced way calculated scores after completed responses\\n        uint noPairResponseCompleteCount = 0;\\n\\n        if (\\n            numOfVoteOnACompletedResponseValue >\\n            numOfVoteOnBCompletedResponseValue\\n        ) {\\n            noPairResponseCompleteCount = (numOfVoteOnACompletedResponseValue -\\n                numOfVoteOnBCompletedResponseValue);\\n        } else {\\n            noPairResponseCompleteCount = (numOfVoteOnBCompletedResponseValue -\\n                numOfVoteOnACompletedResponseValue);\\n        }\\n\\n        voteScore +=\\n            ((numOfVoteOnACompletedResponseValue +\\n                numOfVoteOnBCompletedResponseValue -\\n                noPairResponseCompleteCount) / 2) *\\n            10 +\\n            (noPairResponseCompleteCount * 2);\\n\\n        return voteScore;\\n    }\\n\\n    function voteOnVoting(\\n        bytes32 _votingKey,\\n        bool _voteOnA\\n    )\\n        public\\n        onlyRole(CITIZEN)\\n        votingIsOngoing(_votingKey)\\n        votingApproved(_votingKey)\\n        contentCheckQuizCompleted(_votingKey)\\n        notVotedYetOnThisVoting(_votingKey)\\n    {\\n        // calculate vote score\\n        uint voteScore = calculateVoteScore(_votingKey, msg.sender);\\n\\n        // add new vote\\n        if (_voteOnA) {\\n            votings[_votingKey].voteOnAScore += voteScore;\\n        } else {\\n            votings[_votingKey].voteOnBScore += voteScore;\\n        }\\n\\n        votings[_votingKey].voteCount++;\\n        votes[msg.sender][_votingKey].voted = true;\\n    }\\n\\n    function getAccountVotingQuizAnswerIndexes(\\n        bytes32 _votingKey,\\n        address _account\\n    ) public view returns (uint[] memory) {\\n        return\\n            getAccountQuizAnswerIndexes(\\n                votings[_votingKey].votingContentCheckQuizIpfsHash,\\n                votings[_votingKey].contentIpfsHash,\\n                votings[_votingKey].startDate,\\n                votingContentReadCheckAnswers[_votingKey].length,\\n                VOTING_CHECK_ASKED_NUM_OF_QUESTIONS,\\n                _account\\n            );\\n    }\\n\\n    function getAccountArticleQuizAnswerIndexes(\\n        bytes32 _votingKey,\\n        bytes32 _articleKey,\\n        address _account\\n    ) public view returns (uint[] memory) {\\n        return\\n            getAccountQuizAnswerIndexes(\\n                proConArticles[_votingKey][_articleKey]\\n                    .articleContentCheckQuizIpfsHash,\\n                proConArticles[_votingKey][_articleKey].articleIpfsHash,\\n                votings[_votingKey].startDate,\\n                articleContentReadCheckAnswers[_articleKey].length,\\n                ARTICLE_CHECK_ASKED_NUM_OF_QUESTIONS,\\n                _account\\n            );\\n    }\\n\\n    function getAccountArticleResponseQuizAnswerIndexes(\\n        bytes32 _votingKey,\\n        bytes32 _articleKey,\\n        address _account\\n    ) public view returns (uint[] memory) {\\n        return\\n            getAccountQuizAnswerIndexes(\\n                proConArticles[_votingKey][_articleKey]\\n                    .responseContentCheckQuizIpfsHash,\\n                proConArticles[_votingKey][_articleKey]\\n                    .responseStatementIpfsHash,\\n                votings[_votingKey].startDate,\\n                articleContentResponseReadCheckAnswers[_articleKey].length,\\n                ARTICLE_RESPONSE_CHECK_ASKED_NUM_OF_QUESTIONS,\\n                _account\\n            );\\n    }\\n\\n    function isContentReadQuizCorrect(\\n        uint[] memory _answerIndexes,\\n        bytes32[] memory _readCheckAnswers,\\n        string[] memory _answers\\n    ) public view onlyRole(CITIZEN) returns (bool) {\\n        bool areAnswersCorrect = true;\\n\\n        for (uint i = 0; i < _answerIndexes.length; i++) {\\n            if (\\n                _readCheckAnswers[_answerIndexes[i] - 1] !=\\n                keccak256(bytes(_answers[i]))\\n            ) {\\n                areAnswersCorrect = false;\\n            }\\n        }\\n\\n        return areAnswersCorrect;\\n    }\\n\\n    function getAccountQuizAnswerIndexes(\\n        string memory ipfsHash1,\\n        string memory ipfsHash2,\\n        uint _date,\\n        uint _numOfTotalQuestions,\\n        uint _numOfQuiestionsToAsk,\\n        address _account\\n    ) internal pure returns (uint[] memory) {\\n        bytes32 hashCode = keccak256(\\n            abi.encodePacked(ipfsHash1, ipfsHash2, _account)\\n        );\\n\\n        uint numOfVotingQuizQuestions = uint(_numOfTotalQuestions);\\n\\n        uint[] memory questionsToAsk = new uint[](_numOfQuiestionsToAsk);\\n\\n        uint countAddedQuestions = 0;\\n        for (\\n            uint i = uint(_date % numOfVotingQuizQuestions);\\n            countAddedQuestions < _numOfQuiestionsToAsk;\\n            i++\\n        ) {\\n            uint questionNth = (uint8(hashCode[i]) % numOfVotingQuizQuestions) +\\n                1;\\n\\n            uint u = 0;\\n            do {\\n                if (questionsToAsk[u] == questionNth) {\\n                    questionNth++;\\n                    u = 0;\\n                    if (questionNth > numOfVotingQuizQuestions) {\\n                        questionNth = 1;\\n                    }\\n                } else {\\n                    u++;\\n                }\\n            } while (u < countAddedQuestions);\\n\\n            questionsToAsk[countAddedQuestions] = questionNth;\\n            countAddedQuestions++;\\n        }\\n\\n        return questionsToAsk;\\n    }\\n\\n    function isVotingWon(\\n        bytes32 _votingKey,\\n        bool _isAWinExpected\\n    )\\n        public\\n        view\\n        votingNotFinished(_votingKey)\\n        votingApproved(_votingKey)\\n        enoughVotesArrived(_votingKey)\\n        returns (bool)\\n    {\\n        if (_isAWinExpected) {\\n            return\\n                votings[_votingKey].voteOnAScore >=\\n                votings[_votingKey].voteOnBScore;\\n        } else {\\n            return\\n                votings[_votingKey].voteOnBScore >\\n                votings[_votingKey].voteOnAScore;\\n        }\\n    }\\n\\n    function getVoting(bytes32 _votingKey) public view returns (Voting memory) {\\n        return votings[_votingKey];\\n    }\\n\\n    function getVotingKeysLength() public view returns (uint) {\\n        return votingKeys.length;\\n    }\\n\\n    function getArticleKeysLength() public view returns (uint) {\\n        return articleKeys.length;\\n    }\\n\\n    function getVotinCycleIndexesSize() public view returns (uint) {\\n        return votingCycleIndexes.length;\\n    }\\n\\n    function getElectionCandidatesSize() public view returns (uint256) {\\n        return electionCandidates.length;\\n    }\\n\\n    function getElectionVotersSize() public view returns (uint256) {\\n        return electionVoters.length;\\n    }\\n}\\n\",\"keccak256\":\"0x151994c088af1ba3effe1354b4263a318f7ccf3e5825194c0ecde181f439be85\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405261271060005562989680600b553480156200001e57600080fd5b506001805480820182557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6018054336001600160a01b03199182168117909255600082815260066020526040812084905560048054948501815590527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9092018054909216811790915542608052620000d9907fb346b2ddc13f08bd9685b83a95304a79a2caac0aa7aa64129e1ae9f4361b4661906200010b565b620001057f313691be6e710b5e9c97c695d02c9e24926f986402f826152f3b2970694f72c9336200010b565b6200017d565b60008281526009602090815260408083206001600160a01b03851680855290835292819020805460ff19166001179055805185815291820192909252338183015290517f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d916060908290030190a15050565b608051615a04620001a7600039600081816103fd01528181610f81015261110c0152615a046000f3fe6080604052600436106103df5760003560e01c806305b34410146103eb57806309a34f001461043257806309d39b791461046a57806314bfd6d01461048a57806314daed28146104aa57806314e00b6d146104cc57806314e55bd0146104e157806319a8fb1c146104f657806319d3cfd4146105165780631db5ade81461052b5780631db6d106146105865780631f0317b4146105bc5780631fe642d4146105d2578063206f0af4146105e557806323559c571461061d578063257de397146106655780632bad9a92146106855780632c23da78146106a55780632d3f3e88146106ba5780632e5371e8146106ea5780632f2deba3146106ff5780632f3ddb8f1461071f578063300637ce146107345780633224caf9146107615780633378f39e146107985780633550644d146107b857806337e3f71c146107d85780633d61f033146107f85780633ea29d75146108185780633f691cb314610845578063407135f114610865578063424ae2b71461086d5780634337b8451461088d578063445cb2df146108ad578063466dff58146104e157806349900c0f146108da5780634c3cc1bc146108ef5780634cb401a614610927578063509779d61461093e578063532da8e31461095e5780635657d7cc146109805780635675d898146109a057806359fe7279146109c05780635a0c7d4b146106ea5780635d3d05f3146109e257806367fadfd914610a0257806369d2a73314610a24578063713257c414610a44578063727b81a314610a645780637b7c5d5714610a7a5780637d7c591b14610ab25780638043e65914610ad25780638ce3885114610ae957806391d1485414610b0957806395f808c014610b295780639aa2d819146106ea5780639c5a985014610b3f578063a1f8316514610b56578063a438d20814610b8b578063a45f379e14610ba2578063a880aa31146106ea578063a9914e9914610bc2578063ae12f8ab14610bd7578063afbfea7f14610bf7578063b0f8b42a14610c24578063b128744c14610c44578063b1a03aed14610c64578063bbc3912814610c84578063bcc36be714610c99578063c06b62ea14610cb9578063c202583814610cd9578063c84d221414610cf9578063c8c99cc314610d0f578063cab1eee414610d2f578063cad1043b14610ad2578063cfaf234a14610d44578063cff7b24214610d59578063d77a603c14610d79578063d9b1962214610d99578063e3ab974614610dae578063e64ae4bd14610dc4578063eb0ce58914610de4578063f10e098414610e04578063f4388c6b146104e1578063f8785b4f146104e1578063fbd7082714610e24578063fda490d914610e44578063fe3fd17514610e6457600080fd5b366103e657005b600080fd5b3480156103f757600080fd5b5061041f7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b34801561043e57600080fd5b5061045261044d366004614c10565b610e91565b6040516001600160a01b039091168152602001610429565b34801561047657600080fd5b50610452610485366004614c10565b610ebb565b34801561049657600080fd5b506104526104a5366004614c10565b610ecb565b3480156104b657600080fd5b506104ca6104c5366004614c55565b610edb565b005b3480156104d857600080fd5b50601e5461041f565b3480156104ed57600080fd5b5061041f600581565b34801561050257600080fd5b5061041f610511366004614c10565b611296565b34801561052257600080fd5b5060045461041f565b34801561053757600080fd5b5061056f610546366004614c88565b601860209081526000928352604080842090915290825290205460ff8082169161010090041682565b604080519215158352901515602083015201610429565b34801561059257600080fd5b506104526105a1366004614cb2565b601d602052600090815260409020546001600160a01b031681565b3480156105c857600080fd5b5061041f600c5481565b6104ca6105e0366004614d82565b6112b7565b3480156105f157600080fd5b5061041f610600366004614c88565b600760209081526000928352604080842090915290825290205481565b34801561062957600080fd5b50610650610638366004614cb2565b601c6020526000908152604090205463ffffffff1681565b60405163ffffffff9091168152602001610429565b34801561067157600080fd5b506104ca610680366004614c10565b6112f7565b34801561069157600080fd5b506104ca6106a0366004614c10565b611316565b3480156106b157600080fd5b5060175461041f565b3480156106c657600080fd5b506106da6106d5366004614db6565b611530565b6040519015158152602001610429565b3480156106f657600080fd5b5061041f600a81565b34801561070b57600080fd5b506104ca61071a366004614dd9565b611640565b34801561072b57600080fd5b5060135461041f565b34801561074057600080fd5b5061075461074f366004614e39565b611709565b6040516104299190614e6e565b34801561076d57600080fd5b5061078161077c366004614c10565b611890565b6040516104299b9a99989796959493929190614f02565b3480156107a457600080fd5b506104526107b3366004614c10565b611a02565b3480156107c457600080fd5b506107546107d3366004614f81565b611a12565b3480156107e457600080fd5b5061041f6107f3366004614fa4565b611b81565b34801561080457600080fd5b506104ca610813366004614fa4565b611bb2565b34801561082457600080fd5b5061041f610833366004614cb2565b60066020526000908152604090205481565b34801561085157600080fd5b506104ca610860366004614fc6565b611d10565b6104ca611dd6565b34801561087957600080fd5b506104ca6108883660046150a3565b611ed4565b34801561089957600080fd5b506104ca6108a8366004614cb2565b611f9d565b3480156108b957600080fd5b506108cd6108c8366004614c10565b61214c565b60405161042991906150e8565b3480156108e657600080fd5b506104ca612373565b3480156108fb57600080fd5b5061041f61090a366004614c88565b601260209081526000928352604080842090915290825290205481565b34801561093357600080fd5b5061041f620d2f0081565b34801561094a57600080fd5b5061041f610959366004614c88565b61260a565b34801561096a57600080fd5b5061041f60008051602061598f83398151915281565b34801561098c57600080fd5b506104ca61099b3660046150a3565b612626565b3480156109ac57600080fd5b506104ca6109bb366004614cb2565b6127d7565b3480156109cc57600080fd5b5061041f60008051602061596f83398151915281565b3480156109ee57600080fd5b506104ca6109fd366004614c10565b6127fa565b348015610a0e57600080fd5b5061041f6000805160206159af83398151915281565b348015610a3057600080fd5b506104ca610a3f3660046151b4565b612904565b348015610a5057600080fd5b506106da610a5f3660046152b1565b612bd4565b348015610a7057600080fd5b5061041f60005481565b348015610a8657600080fd5b5061041f610a95366004614f81565b601160209081526000928352604080842090915290825290205481565b348015610abe57600080fd5b506104ca610acd366004614db6565b612c83565b348015610ade57600080fd5b5061041f62278d0081565b348015610af557600080fd5b5061041f610b04366004614c10565b612e64565b348015610b1557600080fd5b506106da610b24366004614f81565b612e74565b348015610b3557600080fd5b5061041f600b5481565b348015610b4b57600080fd5b5061041f6203f48081565b348015610b6257600080fd5b50610b76610b71366004614fa4565b612e9f565b60405161042999989796959493929190615383565b348015610b9757600080fd5b5061041f6212750081565b348015610bae57600080fd5b506106da610bbd366004614d82565b61312c565b348015610bce57600080fd5b50601b5461041f565b348015610be357600080fd5b506104ca610bf2366004615403565b613166565b348015610c0357600080fd5b50610c17610c12366004614cb2565b6133ca565b604051610429919061545c565b348015610c3057600080fd5b5061041f610c3f366004614fa4565b613464565b348015610c5057600080fd5b5061041f610c5f366004614fa4565b613480565b348015610c7057600080fd5b5061041f610c7f366004614c10565b61349c565b348015610c9057600080fd5b5060025461041f565b348015610ca557600080fd5b506104ca610cb436600461546f565b6134ac565b348015610cc557600080fd5b506104ca610cd4366004614cb2565b61351a565b348015610ce557600080fd5b5061041f610cf4366004614f81565b6137da565b348015610d0557600080fd5b5061041f600d5481565b348015610d1b57600080fd5b50610452610d2a366004614c88565b613fb7565b348015610d3b57600080fd5b5060165461041f565b348015610d5057600080fd5b5061041f603281565b348015610d6557600080fd5b506104ca610d74366004614c10565b613fef565b348015610d8557600080fd5b506106da610d94366004614c88565b6140de565b348015610da557600080fd5b5060015461041f565b348015610dba57600080fd5b5061041f600a5481565b348015610dd057600080fd5b50610452610ddf366004614c10565b6140ea565b348015610df057600080fd5b5061041f610dff366004614c88565b6140fa565b348015610e1057600080fd5b50610754610e1f366004614e39565b614116565b348015610e3057600080fd5b506104ca610e3f3660046154b5565b614295565b348015610e5057600080fd5b506104ca610e5f366004615502565b6144b9565b348015610e7057600080fd5b5061041f610e7f366004614cb2565b60036020526000908152604090205481565b60048181548110610ea157600080fd5b6000918252602090912001546001600160a01b0316905081565b60028181548110610ea157600080fd5b60018181548110610ea157600080fd5b60008051602061596f833981519152610ef4813361455d565b828280158015610f175750610f176000805160206159af83398151915283612e74565b15610f355760405163bf6368b960e01b815260040160405180910390fd5b808015610f575750610f556000805160206159af83398151915283612e74565b155b15610f7557604051635cb2b5e560e11b815260040160405180910390fd5b60006018603c80610fa67f000000000000000000000000000000000000000000000000000000000000000042615554565b610fb0919061557d565b610fba919061557d565b610fc4919061557d565b600154600454919250600091610fdc90600a9061557d565b610fe6919061557d565b905060008111610ff7576001610ff9565b805b3360009081526007602090815260408083208684529091529020549091508111611036576040516340b21b6d60e11b815260040160405180910390fd5b6001600160a01b0387166000908152600860205260409020805488916110e29161105f90615591565b80601f016020809104026020016040519081016040528092919081815260200182805461108b90615591565b80156110d85780601f106110ad576101008083540402835291602001916110d8565b820191906000526020600020905b8154815290600101906020018083116110bb57829003601f168201915b505050505061312c565b15611100576040516309ea00b960e01b815260040160405180910390fd5b60006018603c806111317f000000000000000000000000000000000000000000000000000000000000000042615554565b61113b919061557d565b611145919061557d565b61114f919061557d565b3360009081526007602090815260408083208484529091528120805492935090611178836155cb565b9190505550876111ea5761119a6000805160206159af8339815191528a6145b2565b600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b038b1617905561128b565b6112026000805160206159af8339815191528a61461f565b60005b60045481101561128957896001600160a01b03166004828154811061122c5761122c6155e4565b6000918252602090912001546001600160a01b0316036112775760048181548110611259576112596155e4565b600091825260209091200180546001600160a01b0319169055611289565b80611281816155cb565b915050611205565b505b505050505050505050565b601781815481106112a657600080fd5b600091825260209091200154905081565b6000543410156112da5760405163529c3ec360e11b815260040160405180910390fd5b3360009081526008602052604090206112f38282615655565b5050565b60008051602061596f833981519152611310813361455d565b50600055565b60008051602061596f83398151915261132f813361455d565b6000828152601460205260409020600601548290421115611363576040516301da8d1f60e51b815260040160405180910390fd5b60008381526014602052604090206006015483904290611387906203f48090615554565b11156113a657604051639aaaf57560e01b815260040160405180910390fd5b600084815260106020908152604091829020805483518184028101840190945280845290918301828280156113fa57602002820191906000526020600020905b8154815260200190600101908083116113e6575b5050505050600a8151101561142257604051639f14e9bf60e01b815260040160405180910390fd5b601754859060019060005b818110156114ef576000848152601560205260408120601780549192918490811061145a5761145a6155e4565b6000918252602080832090910154835282019290925260400190206001015460ff16156114dd57600084815260156020526040812060178054919291849081106114a6576114a66155e4565b9060005260206000200154815260200190815260200160002060010160019054906101000a900460ff166114dd57600092506114ef565b806114e7816155cb565b91505061142d565b508161150e57604051630632790560e51b815260040160405180910390fd5b505050600094855250506014602052505060409020805460ff19166001179055565b6000828152601460205260408120600601548390429061155490621275009061570e565b1115611573576040516368cd2a8560e01b815260040160405180910390fd5b600084815260146020526040902054849060ff166115a457604051633f2151bd60e21b815260040160405180910390fd5b6004546000868152601460205260409020600301548691600a916115c9906064615721565b6115d3919061557d565b10156115f2576040516333722a1360e21b815260040160405180910390fd5b841561161a576000868152601460205260409020600881015460079091015410159350611637565b600086815260146020526040902060078101546008909101541193505b50505092915050565b60008051602061596f833981519152611659813361455d565b6000858152601560209081526040808320878452909152902060010154859085906201000090046001600160a01b03166116a657604051636fdc2add60e11b815260040160405180910390fd5b83156116d857600087815260156020908152604080832089845290915290206005016116d28682615655565b50611700565b600087815260156020908152604080832089845290915290206006016116fe8682615655565b505b50505050505050565b6000838152601560209081526040808320858452909152902060060180546060916118889161173790615591565b80601f016020809104026020016040519081016040528092919081815260200182805461176390615591565b80156117b05780601f10611785576101008083540402835291602001916117b0565b820191906000526020600020905b81548152906001019060200180831161179357829003601f168201915b50505060008881526015602090815260408083208a8452909152902060040180549092506117de9150615591565b80601f016020809104026020016040519081016040528092919081815260200182805461180a90615591565b80156118575780601f1061182c57610100808354040283529160200191611857565b820191906000526020600020905b81548152906001019060200180831161183a57829003601f168201915b5050506000898152601460209081526040808320600601548b8452600f909252909120549092509050600587614687565b949350505050565b60146020526000908152604090208054600182015460028301546003840154600485015460058601805460ff8088169861010090980416966001600160a01b039093169291906118df90615591565b80601f016020809104026020016040519081016040528092919081815260200182805461190b90615591565b80156119585780601f1061192d57610100808354040283529160200191611958565b820191906000526020600020905b81548152906001019060200180831161193b57829003601f168201915b50505050509080600601549080600701549080600801549080600901805461197f90615591565b80601f01602080910402602001604051908101604052809291908181526020018280546119ab90615591565b80156119f85780601f106119cd576101008083540402835291602001916119f8565b820191906000526020600020905b8154815290600101906020018083116119db57829003601f168201915b505050505090508b565b601e8181548110610ea157600080fd5b60008281526014602052604090206009018054606091611b7891611a3590615591565b80601f0160208091040260200160405190810160405280929190818152602001828054611a6190615591565b8015611aae5780601f10611a8357610100808354040283529160200191611aae565b820191906000526020600020905b815481529060010190602001808311611a9157829003601f168201915b50505060008781526014602052604090206005018054909250611ad19150615591565b80601f0160208091040260200160405190810160405280929190818152602001828054611afd90615591565b8015611b4a5780601f10611b1f57610100808354040283529160200191611b4a565b820191906000526020600020905b815481529060010190602001808311611b2d57829003601f168201915b5050506000888152601460209081526040808320600601546010909252909120549092509050600587614687565b90505b92915050565b60106020528160005260406000208181548110611b9d57600080fd5b90600052602060002001600091509150505481565b60008051602061596f833981519152611bcb813361455d565b600c5415611bec576040516306f17dd960e01b815260040160405180910390fd5b82611bfa62278d004261570e565b811015611c1a57604051635311b60360e01b815260040160405180910390fd5b600c849055600d83905560005b600254811015611ceb57611c7060008051602061598f83398151915260028381548110611c5657611c566155e4565b6000918252602090912001546001600160a01b031661461f565b6003600060028381548110611c8757611c876155e4565b60009182526020808320909101546001600160a01b031683528201929092526040018120556002805482908110611cc057611cc06155e4565b600091825260209091200180546001600160a01b031916905580611ce3816155cb565b915050611c27565b506040805160008152602081019182905251611d0991600291614b5b565b5050505050565b60008051602061598f833981519152611d29813361455d565b6000848152601460205260409020600601548490421115611d5d576040516301da8d1f60e51b815260040160405180910390fd5b600085815260156020908152604080832087845282528083205483526014909152902060040154859085906001600160a01b03163314611db057604051634f2161f960e01b815260040160405180910390fd5b600087815260156020908152604080832089845290915290206004016116fe8682615655565b6000805160206159af833981519152611def813361455d565b600b54341015611e125760405163529c3ec360e11b815260040160405180910390fd5b600c541580611e22575042600c54105b15611e4057604051630bd094bd60e21b815260040160405180910390fd5b336000908152601c602052604090205463ffffffff1615611e7457604051634cc9446360e11b815260040160405180910390fd5b50601b805460018181019092557f3ad8aa4f87544323a9d1e5dd902f40c356527a7955687113db5f9a85ad579dc10180546001600160a01b031916339081179091556000908152601c60205260409020805463ffffffff19169091179055565b60008051602061596f833981519152611eed813361455d565b60008481526015602090815260408083208684529091529020600501805485918591611f1d919061105f90615591565b15611f3b5760405163e88eb9cf60e01b815260040160405180910390fd5b83600a81511015611f5f57604051639f14e9bf60e01b815260040160405180910390fd5b600087815260156020908152604080832089845282528083206001908101805460ff19169091179055600e825290912086516116fe92880190614bc0565b6000805160206159af833981519152611fb6813361455d565b81600c54421080611fc75750600c54155b15611fe55760405163071620af60e01b815260040160405180910390fd5b600d5442111561200857604051630cf0edd160e01b815260040160405180910390fd5b6001600160a01b03811633036120305760405162b5d96560e51b815260040160405180910390fd5b6001600160a01b0381166000908152601c602052604081205463ffffffff16900361206e576040516311bb144160e01b815260040160405180910390fd5b336000908152601d60205260409020546001600160a01b0316156120a55760405163b9ef1a7560e01b815260040160405180910390fd5b336000818152601d6020908152604080832080546001600160a01b0389166001600160a01b03199182168117909255601e8054600181019091557f50bb669a95c7b50b7e8a6f09454034b2b14cf2b85c730dca9a539ca82cb6e350018054909116909517909455928252601c9052908120805463ffffffff169161212883615738565b91906101000a81548163ffffffff021916908363ffffffff16021790555050505050565b6121b960405180610160016040528060001515815260200160001515815260200160008019168152602001600081526020016000815260200160006001600160a01b0316815260200160608152602001600081526020016000815260200160008152602001606081525090565b600082815260146020908152604091829020825161016081018452815460ff8082161515835261010090910416151592810192909252600181015492820192909252600282015460608201526003820154608082015260048201546001600160a01b031660a082015260058201805491929160c08401919061223a90615591565b80601f016020809104026020016040519081016040528092919081815260200182805461226690615591565b80156122b35780601f10612288576101008083540402835291602001916122b3565b820191906000526020600020905b81548152906001019060200180831161229657829003601f168201915b505050505081526020016006820154815260200160078201548152602001600882015481526020016009820180546122ea90615591565b80601f016020809104026020016040519081016040528092919081815260200182805461231690615591565b80156123635780601f1061233857610100808354040283529160200191612363565b820191906000526020600020905b81548152906001019060200180831161234657829003601f168201915b5050505050815250509050919050565b60008051602061596f83398151915261238c813361455d565b600c546000036123af5760405163530c5b4f60e11b815260040160405180910390fd5b42600d5462093a806123c1919061570e565b11156123e057604051631967d9a160e11b815260040160405180910390fd5b601e5460005b601b548110156125c4576000826001601c6000601b868154811061240c5761240c6155e4565b60009182526020808320909101546001600160a01b03168352820192909252604001902054612441919063ffffffff1661575b565b61244d906103e861577f565b63ffffffff1661245d919061557d565b9050600a81111561256b5760006064612477600a80615721565b6124819084615554565b61248b919061557d565b61249690600161570e565b90506124d760008051602061598f833981519152601b85815481106124bd576124bd6155e4565b6000918252602090912001546001600160a01b03166145b2565b6002601b84815481106124ec576124ec6155e4565b6000918252602080832090910154835460018101855593835290822090920180546001600160a01b0319166001600160a01b0390931692909217909155601b80548392600392909187908110612544576125446155e4565b60009182526020808320909101546001600160a01b03168352820192909252604001902055505b601c6000601b8481548110612582576125826155e4565b60009182526020808320909101546001600160a01b031683528201929092526040019020805463ffffffff1916905550806125bc816155cb565b9150506123e6565b5060408051600081526020810191829052516125e291601b91614b5b565b50604080516000815260208101918290525161260091601e91614b5b565b50506000600c5550565b601a6020528160005260406000208181548110611b9d57600080fd5b60008051602061596f83398151915261263f813361455d565b6000848152601560209081526040808320868452909152902060010154849084906201000090046001600160a01b031661268c57604051636fdc2add60e11b815260040160405180910390fd5b600086815260156020908152604080832088845290915290206004018054879187916126bc919061105f90615591565b156126da5760405163279a7c4360e11b815260040160405180910390fd5b60008881526015602090815260408083208a8452909152902060060180548991899161270a919061105f90615591565b15612728576040516323120adf60e21b815260040160405180910390fd5b60008a8152601460205260409020600601548a9042111561275c576040516301da8d1f60e51b815260040160405180910390fd5b88600a8151101561278057604051639f14e9bf60e01b815260040160405180910390fd5b60008b8152600f602090815260409091208b5161279f928d0190614bc0565b5050506000998a525050601560209081526040808a20988a5297905250505092909320600101805461ff001916610100179055505050565b60008051602061596f8339815191526127f0813361455d565b6112f333836147f2565b60008051602061596f833981519152612813813361455d565b8142811015612835576040516321ff628560e11b815260040160405180910390fd5b60005b6013548110156128de5760005b6002548110156128cb576011600060138481548110612866576128666155e4565b90600052602060002001548152602001908152602001600020600060028381548110612894576128946155e4565b60009182526020808320909101546001600160a01b03168352820192909252604001812055806128c3816155cb565b915050612845565b50806128d6816155cb565b915050612838565b5060408051600081526020810191829052516128fc91601391614bc0565b505050600a55565b60008051602061598f83398151915261291d813361455d565b42600a54118061292d5750600a54155b1561294b576040516359c6f10760e11b815260040160405180910390fd5b82612959620d2f004261570e565b8110156129795760405163f401736760e01b815260040160405180910390fd5b8361298762278d004261570e565b8111156129a757604051630e8eaa6b60e31b815260040160405180910390fd5b6000600a54426129b79190615554565b905060006129c862278d008361557d565b90506129da620d2f0062278d00615554565b6129e762278d0083615721565b6129f19084615554565b1115612a10576040516317a0acc960e31b815260040160405180910390fd5b600081815260116020908152604080832033845282528083205460039092529091205411612a5157604051638ea9835b60e01b815260040160405180910390fd5b60008181526011602090815260408083203384529091528120805491612a76836155cb565b9190505550600042338b8b604051602001612a9494939291906157a7565b60408051601f19818403018152918152815160209283012060008181526014909352912060028101899055600181018290556004810180546001600160a01b03191633179055909150600501612aeb8a8c836157d6565b506000818152601460205260408120600681018a905560078101829055600801819055805b601354811015612b595760138181548110612b2d57612b2d6155e4565b90600052602060002001548403612b475760019150612b59565b80612b51816155cb565b915050612b10565b5080612b9557601380546001810182556000919091527f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090018390555b50601680546001810182556000919091527fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b51242890155505050505050505050565b60006000805160206159af833981519152612bef813361455d565b600160005b8651811015612c7957848181518110612c0f57612c0f6155e4565b602002602001015180519060200120866001898481518110612c3357612c336155e4565b6020026020010151612c459190615554565b81518110612c5557612c556155e4565b602002602001015114612c6757600091505b80612c71816155cb565b915050612bf4565b5095945050505050565b6000805160206159af833981519152612c9c813361455d565b6000838152601460205260409020600601548390421080612cdc57506000818152601460205260409020600601544290612cda90621275009061570e565b105b15612cfa57604051630266984960e61b815260040160405180910390fd5b600084815260146020526040902054849060ff16612d2b57604051633f2151bd60e21b815260040160405180910390fd5b3360009081526018602090815260408083208884529091529020548590610100900460ff16612d6d57604051630e139ddb60e01b815260040160405180910390fd5b336000908152601860209081526040808320898452909152902054869060ff1615612dab5760405163a61a461160e01b815260040160405180910390fd5b6000612db788336137da565b90508615612deb5760008881526014602052604081206007018054839290612de090849061570e565b90915550612e129050565b60008881526014602052604081206008018054839290612e0c90849061570e565b90915550505b6000888152601460205260408120600301805491612e2f836155cb565b90915550503360009081526018602090815260408083209a835299905297909720805460ff1916600117905550505050505050565b601381815481106112a657600080fd5b60009182526009602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6015602090815260009283526040808420909152908252902080546001820154600283018054929360ff808416946101008504909116936201000090046001600160a01b03169290612ef090615591565b80601f0160208091040260200160405190810160405280929190818152602001828054612f1c90615591565b8015612f695780601f10612f3e57610100808354040283529160200191612f69565b820191906000526020600020905b815481529060010190602001808311612f4c57829003601f168201915b5050506003840154600485018054949560ff909216949193509150612f8d90615591565b80601f0160208091040260200160405190810160405280929190818152602001828054612fb990615591565b80156130065780601f10612fdb57610100808354040283529160200191613006565b820191906000526020600020905b815481529060010190602001808311612fe957829003601f168201915b50505050509080600501805461301b90615591565b80601f016020809104026020016040519081016040528092919081815260200182805461304790615591565b80156130945780601f1061306957610100808354040283529160200191613094565b820191906000526020600020905b81548152906001019060200180831161307757829003601f168201915b5050505050908060060180546130a990615591565b80601f01602080910402602001604051908101604052809291908181526020018280546130d590615591565b80156131225780601f106130f757610100808354040283529160200191613122565b820191906000526020600020905b81548152906001019060200180831161310557829003601f168201915b5050505050905089565b6040805160208082019092526000905281519101207fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4701490565b6000805160206159af83398151915261317f813361455d565b606060008660010361322a576131958633611a12565b60008781526010602090815260409182902080548351818402810184019094528084529395506131fc938693928301828280156131f157602002820191906000526020600020905b8154815260200190600101908083116131dd575b505050505086612bd4565b3360009081526018602090815260408083208a84529091529020805461ff0019166101001790559050613368565b866002036132cb5761323d868633614116565b6000868152600e602090815260409182902080548351818402810184019094528084529395506132a2938693928301828280156131f157602002820191906000526020600020908154815260200190600101908083116131dd57505050505086612bd4565b336000908152601960209081526040822080546001810182559083529120018690559050613368565b86600303613368576132de868633611709565b6000868152600f60209081526040918290208054835181840281018401909452808452939550613343938693928301828280156131f157602002820191906000526020600020908154815260200190600101908083116131dd57505050505086612bd4565b336000908152601a602090815260408220805460018101825590835291200186905590505b806117005760405162461bcd60e51b815260206004820152602760248201527f536f6d65206f6620796f75722070726f766964656420616e7377657273206172604482015266652077726f6e6760c81b60648201526084015b60405180910390fd5b600860205260009081526040902080546133e390615591565b80601f016020809104026020016040519081016040528092919081815260200182805461340f90615591565b801561345c5780601f106134315761010080835404028352916020019161345c565b820191906000526020600020905b81548152906001019060200180831161343f57829003601f168201915b505050505081565b600f6020528160005260406000208181548110611b9d57600080fd5b600e6020528160005260406000208181548110611b9d57600080fd5b601681815481106112a657600080fd5b60008051602061596f8339815191526134c5813361455d565b60008381526014602052604090206004015483906001600160a01b03166134ff57604051636afad3d960e01b815260040160405180910390fd5b6000848152601460205260409020600901611d098482615655565b60008051602061596f833981519152613533813361455d565b816000805b336000908152600560205260409020548110156135ad5733600090815260056020526040902080546001600160a01b03851691908390811061357c5761357c6155e4565b6000918252602090912001546001600160a01b03160361359b57600191505b806135a5816155cb565b915050613538565b5080156135cd576040516301624e0d60e21b815260040160405180910390fd5b33600090815260056020908152604080832080546001810182559084528284200180546001600160a01b0319166001600160a01b03891690811790915583526006909152812080549161361f836155cb565b9091555050600154158061366e575061363a6032600a615721565b6001546001600160a01b038616600090815260066020526040902054613662906103e8615721565b61366c919061557d565b115b156137d4576001600160a01b0384166000908152600660205260408120805491613697836155cb565b919050555060005b600154811015613770576001600160a01b038516600090815260056020526040902060018054839081106136d5576136d56155e4565b600091825260208083209091015483546001818101865594845291832090910180546001600160a01b0319166001600160a01b0390921691909117905581546006929084908110613728576137286155e4565b60009182526020808320909101546001600160a01b031683528201929092526040018120805491613758836155cb565b91905055508080613768906155cb565b91505061369f565b5061378960008051602061596f833981519152856145b2565b6001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0386161790555b50505050565b6001600160a01b03811660009081526019602052604081205460059082808080805b85811015613b4f5760008a81526015602090815260408083206001600160a01b038d1684526019909252822080548391908590811061383d5761383d6155e4565b6000918252602080832091909101548352828101939093526040918201902081516101208101835281548152600182015460ff8082161515958301959095526101008104909416151592810192909252620100009092046001600160a01b031660608201526002820180549192916080840191906138ba90615591565b80601f01602080910402602001604051908101604052809291908181526020018280546138e690615591565b80156139335780601f1061390857610100808354040283529160200191613933565b820191906000526020600020905b81548152906001019060200180831161391657829003601f168201915b5050509183525050600382015460ff161515602082015260048201805460409092019161395f90615591565b80601f016020809104026020016040519081016040528092919081815260200182805461398b90615591565b80156139d85780601f106139ad576101008083540402835291602001916139d8565b820191906000526020600020905b8154815290600101906020018083116139bb57829003601f168201915b505050505081526020016005820180546139f190615591565b80601f0160208091040260200160405190810160405280929190818152602001828054613a1d90615591565b8015613a6a5780601f10613a3f57610100808354040283529160200191613a6a565b820191906000526020600020905b815481529060010190602001808311613a4d57829003601f168201915b50505050508152602001600682018054613a8390615591565b80601f0160208091040260200160405190810160405280929190818152602001828054613aaf90615591565b8015613afc5780601f10613ad157610100808354040283529160200191613afc565b820191906000526020600020905b815481529060010190602001808311613adf57829003601f168201915b50505050508152505090508a816000015103613b3c578060a0015115613b2e57613b2760018761570e565b9550613b3c565b613b3960018661570e565b94505b5080613b47816155cb565b9150506137fc565b506001600160a01b0388166000908152601a6020526040812054905b81811015613ebe5760008b81526015602090815260408083206001600160a01b038e168452601a9092528220805483919085908110613bac57613bac6155e4565b6000918252602080832091909101548352828101939093526040918201902081516101208101835281548152600182015460ff8082161515958301959095526101008104909416151592810192909252620100009092046001600160a01b03166060820152600282018054919291608084019190613c2990615591565b80601f0160208091040260200160405190810160405280929190818152602001828054613c5590615591565b8015613ca25780601f10613c7757610100808354040283529160200191613ca2565b820191906000526020600020905b815481529060010190602001808311613c8557829003601f168201915b5050509183525050600382015460ff1615156020820152600482018054604090920191613cce90615591565b80601f0160208091040260200160405190810160405280929190818152602001828054613cfa90615591565b8015613d475780601f10613d1c57610100808354040283529160200191613d47565b820191906000526020600020905b815481529060010190602001808311613d2a57829003601f168201915b50505050508152602001600582018054613d6090615591565b80601f0160208091040260200160405190810160405280929190818152602001828054613d8c90615591565b8015613dd95780601f10613dae57610100808354040283529160200191613dd9565b820191906000526020600020905b815481529060010190602001808311613dbc57829003601f168201915b50505050508152602001600682018054613df290615591565b80601f0160208091040260200160405190810160405280929190818152602001828054613e1e90615591565b8015613e6b5780601f10613e4057610100808354040283529160200191613e6b565b820191906000526020600020905b815481529060010190602001808311613e4e57829003601f168201915b50505050508152505090508b816000015103613eab578060a0015115613e9d57613e9660018661570e565b9450613eab565b613ea860018561570e565b93505b5080613eb6816155cb565b915050613b6b565b50600084861115613eda57613ed38587615554565b9050613ee7565b613ee48686615554565b90505b613ef2816005615721565b600282613eff888a61570e565b613f099190615554565b613f13919061557d565b613f1e906019615721565b613f28919061570e565b613f32908961570e565b9750600083851115613f4f57613f488486615554565b9050613f5c565b613f598585615554565b90505b613f67816002615721565b600282613f74878961570e565b613f7e9190615554565b613f88919061557d565b613f9390600a615721565b613f9d919061570e565b613fa7908a61570e565b9c9b505050505050505050505050565b60056020528160005260406000208181548110613fd357600080fd5b6000918252602090912001546001600160a01b03169150829050565b60008051602061598f833981519152614008813361455d565b81336140138261214c565b60a001516001600160a01b03161461403e57604051635e5c61fb60e01b815260040160405180910390fd5b8261404a816001611530565b61406757604051630a48771960e21b815260040160405180910390fd5b6000336140738661214c565b60600151604051600081818185875af1925050503d80600081146140b3576040519150601f19603f3d011682016040523d82523d6000602084013e6140b8565b606091505b50509050806140c657600080fd5b50505060009182525060146020526040812060020155565b6000611b788284612e74565b601b8181548110610ea157600080fd5b60196020528160005260406000208181548110611b9d57600080fd5b6000838152601560209081526040808320858452909152902060050180546060916118889161414490615591565b80601f016020809104026020016040519081016040528092919081815260200182805461417090615591565b80156141bd5780601f10614192576101008083540402835291602001916141bd565b820191906000526020600020905b8154815290600101906020018083116141a057829003601f168201915b50505060008881526015602090815260408083208a8452909152902060020180549092506141eb9150615591565b80601f016020809104026020016040519081016040528092919081815260200182805461421790615591565b80156142645780601f1061423957610100808354040283529160200191614264565b820191906000526020600020905b81548152906001019060200180831161424757829003601f168201915b5050506000898152601460209081526040808320600601548b8452600e909252909120549092509050600587614687565b60008051602061598f8339815191526142ae813361455d565b3360009081526003602090815260408083205460128352818420888552909252909120548591116142f257604051631e3fcdc960e31b815260040160405180910390fd5b60004233866040516020016143099392919061588f565b60408051601f1981840301815282825280516020918201206101208401835289845260008483018181528585018281523360608801908152608088018d81528c151560a08a01528751808801895285815260c08a01528751808801895285815260e08a015287518088018952858152610100808b01919091528f86526015885288862087875290975296909320875181559151600183018054925194516001600160a01b0316620100000262010000600160b01b031995151590970261ff00199215159290921661ffff1990931692909217179290921693909317905591519193509060028201906143fb9082615655565b5060a082015160038201805460ff191691151591909117905560c082015160048201906144289082615655565b5060e0820151600582019061443d9082615655565b5061010082015160068201906144539082615655565b505060178054600181019091557fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c15018290555033600090815260126020908152604080832089845290915281208054916144ac836155cb565b9190505550505050505050565b60008051602061596f8339815191526144d2813361455d565b6000838152601460205260409020600901805484916144f49161105f90615591565b156145125760405163121415cf60e01b815260040160405180910390fd5b82600a8151101561453657604051639f14e9bf60e01b815260040160405180910390fd5b6000858152601060209081526040909120855161455592870190614bc0565b505050505050565b60008281526009602090815260408083206001600160a01b038516845290915290205460ff166112f35760405163043c588360e11b81526001600160a01b0382166004820152602481018390526044016133c1565b60008281526009602090815260408083206001600160a01b038516845290915290819020805460ff19166001179055517f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d90614613908490849033906158c8565b60405180910390a15050565b614629828261455d565b60008281526009602090815260408083206001600160a01b038516845290915290819020805460ff19169055517ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b90614613908490849033906158c8565b606060008787846040516020016146a0939291906158e7565b60408051601f1981840301815291905280516020909101209050846000856001600160401b038111156146d5576146d5614ccd565b6040519080825280602002602001820160405280156146fe578160200160208202803683370190505b50905060008061470e848b61592d565b90505b878210156147e25760008486836020811061472e5761472e6155e4565b61473a9291901a61592d565b61474590600161570e565b905060005b8185828151811061475d5761475d6155e4565b60200260200101510361478d5781614774816155cb565b925050600090508582111561478857600191505b61479b565b80614797816155cb565b9150505b83811061474a57818585815181106147b5576147b56155e4565b6020908102919091010152836147ca816155cb565b945050505080806147da906155cb565b915050614711565b50909a9950505050505050505050565b60005b6001600160a01b038316600090815260056020526040902054811015614b56576001600160a01b03838116600090815260056020526040902080549184169183908110614844576148446155e4565b6000918252602090912001546001600160a01b031603614b44576001600160a01b0383166000908152600560205260409020805482908110614888576148886155e4565b6000918252602080832090910180546001600160a01b03191690556001600160a01b038416825260069052604081208054916148c383615941565b909155506148d590506032600a615721565b6001546001600160a01b0384166000908152600660205260409020546148fd906103e8615721565b614907919061557d565b1015614b44576001600160a01b038216600090815260066020526040812080549161493183615941565b919050555061494e60008051602061596f8339815191528361461f565b60005b600154811015614a8157826001600160a01b031660018281548110614978576149786155e4565b6000918252602090912001546001600160a01b031603614a6f57600181815481106149a5576149a56155e4565b600091825260209091200180546001600160a01b0319169055600180546149cd908290615554565b815481106149dd576149dd6155e4565b600091825260209091200154600180546001600160a01b039092169183908110614a0957614a096155e4565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506001805480614a4857614a48615958565b600082815260209020810160001990810180546001600160a01b0319169055019055614a81565b80614a79816155cb565b915050614951565b5060005b6001600160a01b0383166000908152600560205260409020548110156137d4576001600160a01b03831660009081526005602052604090208054614aef91859184908110614ad557614ad56155e4565b6000918252602090912001546001600160a01b03166147f2565b6001600160a01b0383166000908152600560205260409020805482908110614b1957614b196155e4565b600091825260209091200180546001600160a01b031916905580614b3c816155cb565b915050614a85565b80614b4e816155cb565b9150506147f5565b505050565b828054828255906000526020600020908101928215614bb0579160200282015b82811115614bb057825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190614b7b565b50614bbc929150614bfb565b5090565b828054828255906000526020600020908101928215614bb0579160200282015b82811115614bb0578251825591602001919060010190614be0565b5b80821115614bbc5760008155600101614bfc565b600060208284031215614c2257600080fd5b5035919050565b80356001600160a01b0381168114614c4057600080fd5b919050565b80358015158114614c4057600080fd5b60008060408385031215614c6857600080fd5b614c7183614c29565b9150614c7f60208401614c45565b90509250929050565b60008060408385031215614c9b57600080fd5b614ca483614c29565b946020939093013593505050565b600060208284031215614cc457600080fd5b611b7882614c29565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715614d0b57614d0b614ccd565b604052919050565b600082601f830112614d2457600080fd5b81356001600160401b03811115614d3d57614d3d614ccd565b614d50601f8201601f1916602001614ce3565b818152846020838601011115614d6557600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215614d9457600080fd5b81356001600160401b03811115614daa57600080fd5b61188884828501614d13565b60008060408385031215614dc957600080fd5b82359150614c7f60208401614c45565b60008060008060808587031215614def57600080fd5b843593506020850135925060408501356001600160401b03811115614e1357600080fd5b614e1f87828801614d13565b925050614e2e60608601614c45565b905092959194509250565b600080600060608486031215614e4e57600080fd5b8335925060208401359150614e6560408501614c29565b90509250925092565b6020808252825182820181905260009190848201906040850190845b81811015614ea657835183529284019291840191600101614e8a565b50909695505050505050565b60005b83811015614ecd578181015183820152602001614eb5565b50506000910152565b60008151808452614eee816020860160208601614eb2565b601f01601f19169290920160200192915050565b60006101608d151583528c151560208401528b60408401528a606084015289608084015260018060a01b03891660a08401528060c0840152614f4681840189614ed6565b90508660e08401528561010084015284610120840152828103610140840152614f6f8185614ed6565b9e9d5050505050505050505050505050565b60008060408385031215614f9457600080fd5b82359150614c7f60208401614c29565b60008060408385031215614fb757600080fd5b50508035926020909101359150565b600080600060608486031215614fdb57600080fd5b833592506020840135915060408401356001600160401b03811115614fff57600080fd5b61500b86828701614d13565b9150509250925092565b60006001600160401b0382111561502e5761502e614ccd565b5060051b60200190565b600082601f83011261504957600080fd5b8135602061505e61505983615015565b614ce3565b82815260059290921b8401810191818101908684111561507d57600080fd5b8286015b848110156150985780358352918301918301615081565b509695505050505050565b6000806000606084860312156150b857600080fd5b833592506020840135915060408401356001600160401b038111156150dc57600080fd5b61500b86828701615038565b602081526150fb60208201835115159052565b60006020830151615110604084018215159052565b506040830151606083015260608301516080830152608083015160a083015260a083015161514960c08401826001600160a01b03169052565b5060c08301516101608060e0850152615166610180850183614ed6565b60e0860151610100868101919091528601516101208087019190915286015161014080870191909152860151858203601f1901838701529092506151aa8382614ed6565b9695505050505050565b600080600080606085870312156151ca57600080fd5b84356001600160401b03808211156151e157600080fd5b818701915087601f8301126151f557600080fd5b81358181111561520457600080fd5b88602082850101111561521657600080fd5b6020928301999098509187013596604001359550909350505050565b600082601f83011261524357600080fd5b8135602061525361505983615015565b82815260059290921b8401810191818101908684111561527257600080fd5b8286015b848110156150985780356001600160401b038111156152955760008081fd5b6152a38986838b0101614d13565b845250918301918301615276565b6000806000606084860312156152c657600080fd5b83356001600160401b03808211156152dd57600080fd5b818601915086601f8301126152f157600080fd5b8135602061530161505983615015565b82815260059290921b8401810191818101908a84111561532057600080fd5b948201945b8386101561533e57853582529482019490820190615325565b9750508701359250508082111561535457600080fd5b61536087838801615038565b9350604086013591508082111561537657600080fd5b5061500b86828701615232565b898152881515602082015287151560408201526001600160a01b0387166060820152610120608082018190526000906153be83820189614ed6565b905086151560a084015282810360c08401526153da8187614ed6565b905082810360e08401526153ee8186614ed6565b9050828103610100840152613fa78185614ed6565b6000806000806080858703121561541957600080fd5b84359350602085013592506040850135915060608501356001600160401b0381111561544457600080fd5b61545087828801615232565b91505092959194509250565b602081526000611b786020830184614ed6565b6000806040838503121561548257600080fd5b8235915060208301356001600160401b0381111561549f57600080fd5b6154ab85828601614d13565b9150509250929050565b6000806000606084860312156154ca57600080fd5b8335925060208401356001600160401b038111156154e757600080fd5b6154f386828701614d13565b925050614e6560408501614c45565b6000806040838503121561551557600080fd5b8235915060208301356001600160401b0381111561553257600080fd5b6154ab85828601615038565b634e487b7160e01b600052601160045260246000fd5b81810381811115611b7b57611b7b61553e565b634e487b7160e01b600052601260045260246000fd5b60008261558c5761558c615567565b500490565b600181811c908216806155a557607f821691505b6020821081036155c557634e487b7160e01b600052602260045260246000fd5b50919050565b6000600182016155dd576155dd61553e565b5060010190565b634e487b7160e01b600052603260045260246000fd5b601f821115614b5657600081815260208120601f850160051c810160208610156156215750805b601f850160051c820191505b818110156145555782815560010161562d565b600019600383901b1c191660019190911b1790565b81516001600160401b0381111561566e5761566e614ccd565b6156828161567c8454615591565b846155fa565b602080601f8311600181146156b1576000841561569f5750858301515b6156a98582615640565b865550614555565b600085815260208120601f198616915b828110156156e0578886015182559484019460019091019084016156c1565b50858210156156fe5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115611b7b57611b7b61553e565b8082028115828204841417611b7b57611b7b61553e565b600063ffffffff8083168181036157515761575161553e565b6001019392505050565b63ffffffff8281168282160390808211156157785761577861553e565b5092915050565b63ffffffff81811683821602808216919082811461579f5761579f61553e565b505092915050565b848152606084901b6001600160601b031916602082015281836034830137600091016034019081529392505050565b6001600160401b038311156157ed576157ed614ccd565b615801836157fb8354615591565b836155fa565b6000601f84116001811461582f576000851561581d5750838201355b6158278682615640565b845550611d09565b600083815260209020601f19861690835b828110156158605786850135825560209485019460019092019101615840565b508682101561587d5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b83815260018060601b03198360601b166020820152600082516158b9816034850160208701614eb2565b91909101603401949350505050565b9283526001600160a01b03918216602084015216604082015260600190565b600084516158f9818460208901614eb2565b84519083019061590d818360208901614eb2565b60609490941b6001600160601b0319169301928352505060140192915050565b60008261593c5761593c615567565b500690565b6000816159505761595061553e565b506000190190565b634e487b7160e01b600052603160045260246000fdfeb346b2ddc13f08bd9685b83a95304a79a2caac0aa7aa64129e1ae9f4361b46619f70d138cbbd87297896478196b4493d9dceaca01f5883ecbd7bee66d300348d313691be6e710b5e9c97c695d02c9e24926f986402f826152f3b2970694f72c9a2646970667358221220946e75d9613cad746cc208769be621411a69535735894f32e5148d66d8cac85264736f6c63430008130033",
  "deployedBytecode": "",
  "devdoc": {
    "author": "Márton Sándor Horváth, email: hmartonsandor{@}gmail.com",
    "kind": "dev",
    "methods": {},
    "title": "Balanced Voting System: Voting contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "@dev",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1998,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "citizenRoleApplicationFee",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 2001,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "admins",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 2004,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "politicalActors",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 2008,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "politicalActorVotingCredits",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 2011,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "citizens",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 2018,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "adminApprovalSentToAccount",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 2022,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "adminRoleGrantApprovals",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 2028,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "dailyCitizenRoleModifyCredit",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 2032,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "citizenshipApplications",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_string_storage)"
      },
      {
        "astId": 2038,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "_hasRole",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 2841,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "firstVotingCycleStartDate",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 2844,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "electionsCandidateApplicationFee",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 2846,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "electionsStartDate",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 2848,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "electionsEndDate",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      },
      {
        "astId": 2900,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "articleContentReadCheckAnswers",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)"
      },
      {
        "astId": 2905,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "articleContentResponseReadCheckAnswers",
        "offset": 0,
        "slot": "15",
        "type": "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)"
      },
      {
        "astId": 2910,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "votingContentReadCheckAnswers",
        "offset": 0,
        "slot": "16",
        "type": "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)"
      },
      {
        "astId": 2916,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "votingCycleStartVoteCount",
        "offset": 0,
        "slot": "17",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 2922,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "publishArticleToVotingsCount",
        "offset": 0,
        "slot": "18",
        "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))"
      },
      {
        "astId": 2925,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "votingCycleIndexes",
        "offset": 0,
        "slot": "19",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 2930,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "votings",
        "offset": 0,
        "slot": "20",
        "type": "t_mapping(t_bytes32,t_struct(Voting)2890_storage)"
      },
      {
        "astId": 2937,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "proConArticles",
        "offset": 0,
        "slot": "21",
        "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_struct(ProConArticle)2867_storage))"
      },
      {
        "astId": 2940,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "votingKeys",
        "offset": 0,
        "slot": "22",
        "type": "t_array(t_bytes32)dyn_storage"
      },
      {
        "astId": 2943,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "articleKeys",
        "offset": 0,
        "slot": "23",
        "type": "t_array(t_bytes32)dyn_storage"
      },
      {
        "astId": 2950,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "votes",
        "offset": 0,
        "slot": "24",
        "type": "t_mapping(t_address,t_mapping(t_bytes32,t_struct(Vote)2895_storage))"
      },
      {
        "astId": 2955,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "articlesCompleted",
        "offset": 0,
        "slot": "25",
        "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)"
      },
      {
        "astId": 2960,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "articlesResponseCompleted",
        "offset": 0,
        "slot": "26",
        "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)"
      },
      {
        "astId": 2963,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "electionCandidates",
        "offset": 0,
        "slot": "27",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 2967,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "electionCandidateScores",
        "offset": 0,
        "slot": "28",
        "type": "t_mapping(t_address,t_uint32)"
      },
      {
        "astId": 2971,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "electionVotes",
        "offset": 0,
        "slot": "29",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 2974,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "electionVoters",
        "offset": 0,
        "slot": "30",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bytes32[])",
        "numberOfBytes": "32",
        "value": "t_array(t_bytes32)dyn_storage"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_bytes32,t_struct(Vote)2895_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes32 => struct BVS_Voting.Vote))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_struct(Vote)2895_storage)"
      },
      "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes32 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_uint256)"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint256)"
      },
      "t_mapping(t_address,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_address,t_uint32)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint32)",
        "numberOfBytes": "32",
        "value": "t_uint32"
      },
      "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bytes32[])",
        "numberOfBytes": "32",
        "value": "t_array(t_bytes32)dyn_storage"
      },
      "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_bytes32,t_mapping(t_bytes32,t_struct(ProConArticle)2867_storage))": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => mapping(bytes32 => struct BVS_Voting.ProConArticle))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_struct(ProConArticle)2867_storage)"
      },
      "t_mapping(t_bytes32,t_struct(ProConArticle)2867_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct BVS_Voting.ProConArticle)",
        "numberOfBytes": "32",
        "value": "t_struct(ProConArticle)2867_storage"
      },
      "t_mapping(t_bytes32,t_struct(Vote)2895_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct BVS_Voting.Vote)",
        "numberOfBytes": "32",
        "value": "t_struct(Vote)2895_storage"
      },
      "t_mapping(t_bytes32,t_struct(Voting)2890_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct BVS_Voting.Voting)",
        "numberOfBytes": "32",
        "value": "t_struct(Voting)2890_storage"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(ProConArticle)2867_storage": {
        "encoding": "inplace",
        "label": "struct BVS_Voting.ProConArticle",
        "members": [
          {
            "astId": 2850,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "votingKey",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 2852,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "isArticleApproved",
            "offset": 0,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 2854,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "isResponseApproved",
            "offset": 1,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 2856,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "publisher",
            "offset": 2,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 2858,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "articleIpfsHash",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 2860,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "isVoteOnA",
            "offset": 0,
            "slot": "3",
            "type": "t_bool"
          },
          {
            "astId": 2862,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "responseStatementIpfsHash",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 2864,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "articleContentCheckQuizIpfsHash",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          },
          {
            "astId": 2866,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "responseContentCheckQuizIpfsHash",
            "offset": 0,
            "slot": "6",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(Vote)2895_storage": {
        "encoding": "inplace",
        "label": "struct BVS_Voting.Vote",
        "members": [
          {
            "astId": 2892,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "voted",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 2894,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "isContentCompleted",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(Voting)2890_storage": {
        "encoding": "inplace",
        "label": "struct BVS_Voting.Voting",
        "members": [
          {
            "astId": 2869,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "approved",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 2871,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "cancelled",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 2873,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "key",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          },
          {
            "astId": 2875,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "budget",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 2877,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "voteCount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 2879,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "creator",
            "offset": 0,
            "slot": "4",
            "type": "t_address"
          },
          {
            "astId": 2881,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "contentIpfsHash",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          },
          {
            "astId": 2883,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "startDate",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 2885,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "voteOnAScore",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 2887,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "voteOnBScore",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 2889,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "votingContentCheckQuizIpfsHash",
            "offset": 0,
            "slot": "9",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}