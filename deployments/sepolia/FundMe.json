{
  "address": "0x51484dC1728423512Bef1AFC477814978b3a1362",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x4de503d2996ebb5e14dc67e6a5af4389f4b989c02c768c74addc927f9465c2d3",
  "receipt": {
    "to": null,
    "from": "0x8Ebb0d412d83D6945b9869bE9CD4e105933Cf528",
    "contractAddress": "0x51484dC1728423512Bef1AFC477814978b3a1362",
    "transactionIndex": 6,
    "gasUsed": "835980",
    "logsBloom": "0x
    "blockHash": "0x6b34b8d3ab5d141a9344d6d72711ccead2e00bf87c70885ccc40e6bdf924b93b",
    "transactionHash": "0x4de503d2996ebb5e14dc67e6a5af4389f4b989c02c768c74addc927f9465c2d3",
    "logs": [],
    "blockNumber": 5164884,
    "cumulativeGasUsed": "961980",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 1,
  "solcInputHash": "eb984f488a492d9d52f10623c82cd9fe",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n    AggregatorV3Interface immutable priceFeed;\\n    \\n    constructor(address priceFeedAddress) {\\n        // 0x694AA1769357215DE4FAC081bf1f309aDC325306\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n        i_owner = msg.sender;\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n    \\n    function getVersion() public view returns (uint256){\\n        return priceFeed.version();\\n    }\\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\ \\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback() \\n    //     /   \\\\ \\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\\n\\n\",\"keccak256\":\"0x5b9b36988d499b242da013103cac2e276a8037e95f7bb6806234c9ae6618b4f6\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xea2045155143e9bb1871bfa4970654b6aa7a401fbe94eaea250048f99c73384d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610f1a380380610f1a83398181016040528101906100329190610110565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dd826100b2565b9050919050565b6100ed816100d2565b81146100f857600080fd5b50565b60008151905061010a816100e4565b92915050565b600060208284031215610126576101256100ad565b5b6000610134848285016100fb565b91505092915050565b608051610dbb61015f600039600081816101b801526102e50152610dbb6000f3fe6080604052600436106100745760003560e01c80636b69a5921161004e5780636b69a5921461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80630d8e6e2c1461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e1565b6040516100af91906107d0565b60405180910390f35b3480156100c457600080fd5b506100cd610377565b005b3480156100db57600080fd5b506100f660048036038101906100f1919061084e565b6105b9565b60405161010391906107d0565b60405180910390f35b34801561011857600080fd5b506101216105d1565b60405161012e91906107d0565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b506101566105de565b604051610163919061088a565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108d1565b610604565b6040516101a0919061088a565b60405180910390f35b6802b5e3af16b18800006101e67f00000000000000000000000000000000000000000000000000000000000000003461064390919063ffffffff16565b1015610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e9061095b565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027591906109aa565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa15801561034e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037291906109f3565b905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103fe576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104a95760006001828154811061042457610423610a20565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104a190610a4f565b915050610401565b50600067ffffffffffffffff8111156104c5576104c4610a97565b5b6040519080825280602002602001820160405280156104f35781602001602082028036833780820191505090505b5060019080519060200190610509929190610710565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161053090610af7565b60006040518083038185875af1925050503d806000811461056d576040519150601f19603f3d011682016040523d82523d6000602084013e610572565b606091505b50509050806105b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ad90610b58565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061061457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061064f8361067f565b90506000670de0b6b3a764000085836106689190610b78565b6106729190610be9565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156106cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f19190610c92565b5050509150506402540be400816107089190610d0d565b915050919050565b828054828255906000526020600020908101928215610789579160200282015b828111156107885782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610730565b5b509050610796919061079a565b5090565b5b808211156107b357600081600090555060010161079b565b5090565b6000819050919050565b6107ca816107b7565b82525050565b60006020820190506107e560008301846107c1565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061081b826107f0565b9050919050565b61082b81610810565b811461083657600080fd5b50565b60008135905061084881610822565b92915050565b600060208284031215610864576108636107eb565b5b600061087284828501610839565b91505092915050565b61088481610810565b82525050565b600060208201905061089f600083018461087b565b92915050565b6108ae816107b7565b81146108b957600080fd5b50565b6000813590506108cb816108a5565b92915050565b6000602082840312156108e7576108e66107eb565b5b60006108f5848285016108bc565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610945601b836108fe565b91506109508261090f565b602082019050919050565b6000602082019050818103600083015261097481610938565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109b5826107b7565b91506109c0836107b7565b92508282019050808211156109d8576109d761097b565b5b92915050565b6000815190506109ed816108a5565b92915050565b600060208284031215610a0957610a086107eb565b5b6000610a17848285016109de565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a5a826107b7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a8c57610a8b61097b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ae1600083610ac6565b9150610aec82610ad1565b600082019050919050565b6000610b0282610ad4565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b42600b836108fe565b9150610b4d82610b0c565b602082019050919050565b60006020820190508181036000830152610b7181610b35565b9050919050565b6000610b83826107b7565b9150610b8e836107b7565b9250828202610b9c816107b7565b91508282048414831517610bb357610bb261097b565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bf4826107b7565b9150610bff836107b7565b925082610c0f57610c0e610bba565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c3981610c1a565b8114610c4457600080fd5b50565b600081519050610c5681610c30565b92915050565b6000819050919050565b610c6f81610c5c565b8114610c7a57600080fd5b50565b600081519050610c8c81610c66565b92915050565b600080600080600060a08688031215610cae57610cad6107eb565b5b6000610cbc88828901610c47565b9550506020610ccd88828901610c7d565b9450506040610cde888289016109de565b9350506060610cef888289016109de565b9250506080610d0088828901610c47565b9150509295509295909350565b6000610d1882610c5c565b9150610d2383610c5c565b9250828202610d3181610c5c565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610d6957610d6861097b565b5b8282058414831517610d7e57610d7d61097b565b5b509291505056fea2646970667358221220f345339ff6214ce3cfa803945797a3c86ff95a319cd976e4e9c4cc48220bf86d64736f6c63430008130033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c80636b69a5921161004e5780636b69a5921461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80630d8e6e2c1461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e1565b6040516100af91906107d0565b60405180910390f35b3480156100c457600080fd5b506100cd610377565b005b3480156100db57600080fd5b506100f660048036038101906100f1919061084e565b6105b9565b60405161010391906107d0565b60405180910390f35b34801561011857600080fd5b506101216105d1565b60405161012e91906107d0565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b506101566105de565b604051610163919061088a565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108d1565b610604565b6040516101a0919061088a565b60405180910390f35b6802b5e3af16b18800006101e67f00000000000000000000000000000000000000000000000000000000000000003461064390919063ffffffff16565b1015610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e9061095b565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027591906109aa565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa15801561034e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037291906109f3565b905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103fe576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104a95760006001828154811061042457610423610a20565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104a190610a4f565b915050610401565b50600067ffffffffffffffff8111156104c5576104c4610a97565b5b6040519080825280602002602001820160405280156104f35781602001602082028036833780820191505090505b5060019080519060200190610509929190610710565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161053090610af7565b60006040518083038185875af1925050503d806000811461056d576040519150601f19603f3d011682016040523d82523d6000602084013e610572565b606091505b50509050806105b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ad90610b58565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061061457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061064f8361067f565b90506000670de0b6b3a764000085836106689190610b78565b6106729190610be9565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156106cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f19190610c92565b5050509150506402540be400816107089190610d0d565b915050919050565b828054828255906000526020600020908101928215610789579160200282015b828111156107885782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610730565b5b509050610796919061079a565b5090565b5b808211156107b357600081600090555060010161079b565b5090565b6000819050919050565b6107ca816107b7565b82525050565b60006020820190506107e560008301846107c1565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061081b826107f0565b9050919050565b61082b81610810565b811461083657600080fd5b50565b60008135905061084881610822565b92915050565b600060208284031215610864576108636107eb565b5b600061087284828501610839565b91505092915050565b61088481610810565b82525050565b600060208201905061089f600083018461087b565b92915050565b6108ae816107b7565b81146108b957600080fd5b50565b6000813590506108cb816108a5565b92915050565b6000602082840312156108e7576108e66107eb565b5b60006108f5848285016108bc565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610945601b836108fe565b91506109508261090f565b602082019050919050565b6000602082019050818103600083015261097481610938565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109b5826107b7565b91506109c0836107b7565b92508282019050808211156109d8576109d761097b565b5b92915050565b6000815190506109ed816108a5565b92915050565b600060208284031215610a0957610a086107eb565b5b6000610a17848285016109de565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a5a826107b7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a8c57610a8b61097b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ae1600083610ac6565b9150610aec82610ad1565b600082019050919050565b6000610b0282610ad4565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b42600b836108fe565b9150610b4d82610b0c565b602082019050919050565b60006020820190508181036000830152610b7181610b35565b9050919050565b6000610b83826107b7565b9150610b8e836107b7565b9250828202610b9c816107b7565b91508282048414831517610bb357610bb261097b565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bf4826107b7565b9150610bff836107b7565b925082610c0f57610c0e610bba565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c3981610c1a565b8114610c4457600080fd5b50565b600081519050610c5681610c30565b92915050565b6000819050919050565b610c6f81610c5c565b8114610c7a57600080fd5b50565b600081519050610c8c81610c66565b92915050565b600080600080600060a08688031215610cae57610cad6107eb565b5b6000610cbc88828901610c47565b9550506020610ccd88828901610c7d565b9450506040610cde888289016109de565b9350506060610cef888289016109de565b9250506080610d0088828901610c47565b9150509295509295909350565b6000610d1882610c5c565b9150610d2383610c5c565b9250828202610d3181610c5c565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610d6957610d6861097b565b5b8282058414831517610d7e57610d7d61097b565b5b509291505056fea2646970667358221220f345339ff6214ce3cfa803945797a3c86ff95a319cd976e4e9c4cc48220bf86d64736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}